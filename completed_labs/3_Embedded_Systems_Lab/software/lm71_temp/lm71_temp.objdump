
lm71_temp.elf:     file format elf32-littlenios2
lm71_temp.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0144022c

Program Header:
    LOAD off    0x00001000 vaddr 0x01440000 paddr 0x01440000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x01440020 paddr 0x01440020 align 2**12
         filesz 0x00010a90 memsz 0x00010a90 flags r-x
    LOAD off    0x00011ab0 vaddr 0x01450ab0 paddr 0x014516bc align 2**12
         filesz 0x00000c0c memsz 0x00000c0c flags rw-
    LOAD off    0x000132c8 vaddr 0x014522c8 paddr 0x014522c8 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  01440000  01440000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000020c  01440020  01440020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000104f4  0144022c  0144022c  0000122c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000390  01450720  01450720  00011720  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000c0c  01450ab0  014516bc  00011ab0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  014522c8  014522c8  000132c8  2**2
                  ALLOC, SMALL_DATA
  6 .ufm_flash_data 00000000  01200000  01200000  000126bc  2**0
                  CONTENTS
  7 .onchip_ram   00000000  01452428  01452428  000126bc  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  000126bc  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000d30  00000000  00000000  000126e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00023e68  00000000  00000000  00013410  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008f14  00000000  00000000  00037278  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b0db  00000000  00000000  0004018c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000023a8  00000000  00000000  0004b268  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003c47  00000000  00000000  0004d610  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000177ca  00000000  00000000  00051257  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00068a24  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001460  00000000  00000000  00068a68  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006d3c9  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000a  00000000  00000000  0006d3cc  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006d3d6  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006d3d7  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0006d3d8  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0006d3dc  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0006d3e0  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  0006d3e4  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  0006d3ed  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  0006d3f6  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  0006d3ff  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000002c  00000000  00000000  0006d407  2**0
                  CONTENTS, READONLY
 30 .jdi          00003e37  00000000  00000000  0006d433  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000ab1bf  00000000  00000000  0007126a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
01440000 l    d  .entry	00000000 .entry
01440020 l    d  .exceptions	00000000 .exceptions
0144022c l    d  .text	00000000 .text
01450720 l    d  .rodata	00000000 .rodata
01450ab0 l    d  .rwdata	00000000 .rwdata
014522c8 l    d  .bss	00000000 .bss
01200000 l    d  .ufm_flash_data	00000000 .ufm_flash_data
01452428 l    d  .onchip_ram	00000000 .onchip_ram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../lm71_temp_bsp//obj/HAL/src/crt0.o
01440264 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 lm71.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
014508ca l     O .rodata	00000010 zeroes.4181
014508da l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
01442e8c l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
01444a34 l     F .text	00000008 __fp_lock
01444a3c l     F .text	00000008 __fp_unlock
01444a50 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
01450ab0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
01450ef4 l     O .rwdata	00000020 lc_ctype_charset
01450ed4 l     O .rwdata	00000020 lc_message_charset
01450f14 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0145090c l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
01447f80 l     F .text	000000fc __sprint_r.part.0
01450a40 l     O .rodata	00000010 blanks.4125
01450a30 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0144aa84 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0144d348 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0144d470 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0144d49c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0144d5a4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0144d6a0 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0144d784 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0144d958 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
01451694 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0144dc0c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0144dd5c l     F .text	00000038 alt_dev_reg
014514fc l     O .rwdata	0000002c jtag_uart
01451528 l     O .rwdata	0000003c modular_adc
01451564 l     O .rwdata	00000100 ufm_flash
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0144e070 l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_modular_adc.c
0144e16c l     F .text	000000a4 alt_adc_irq
00000000 l    df *ABS*	00000000 altera_onchip_flash.c
0144e6ac l     F .text	00000038 alt_flash_device_register
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0144f740 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_flash_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0144fc68 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0144fdc0 l     F .text	00000050 alt_get_errno
0144fe10 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
014522fc g     O .bss	00000004 alt_instruction_exception_handler
014475c0 g     F .text	00000074 _mprec_log10
0144e404 g     F .text	0000004c adc_stop
014476ac g     F .text	0000008c __any_on
014499ac g     F .text	00000054 _isatty_r
01450918 g     O .rodata	00000028 __mprec_tinytens
0144d8b0 g     F .text	00000068 alt_main
01440ad8 g     F .text	000000b8 _puts_r
01452328 g     O .bss	00000100 alt_irq
01449a00 g     F .text	0000005c _lseek_r
014516bc g       *ABS*	00000000 __flash_rwdata_start
0144bdcc g     F .text	00000084 .hidden __eqdf2
01452428 g       *ABS*	00000000 __alt_heap_start
01440a9c g     F .text	0000003c printf
01449c28 g     F .text	0000009c _wcrtomb_r
01447e78 g     F .text	0000005c __sseek
01444d98 g     F .text	00000010 __sinit
01449ab8 g     F .text	00000154 __swbuf_r
01445810 g     F .text	0000007c _setlocale_r
01444bf0 g     F .text	00000078 __sfmoreglue
0144d938 g     F .text	00000020 __malloc_unlock
01446470 g     F .text	0000015c memmove
01444d80 g     F .text	00000018 _cleanup
014466f0 g     F .text	000000a8 _Balloc
0144be50 g     F .text	000000e0 .hidden __gtdf2
01450200 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
01440000 g     F .entry	0000000c __reset
0144e5b0 g     F .text	00000044 adc_interrupt_disable
01440020 g       *ABS*	00000000 __flash_exceptions_start
01449954 g     F .text	00000058 _fstat_r
014522e0 g     O .bss	00000004 errno
01447df4 g     F .text	00000008 __seofread
0144e2bc g     F .text	00000070 altera_modular_adc_init
014522e8 g     O .bss	00000004 alt_argv
01459664 g       *ABS*	00000000 _gp
0144dbdc g     F .text	00000030 usleep
0144f528 g     F .text	00000080 alt_onchip_flash_poll_for_status_write_passed
01200000 g       *ABS*	00000000 __alt_mem_ufm_flash_data
0145137c g     O .rwdata	00000180 alt_fd_list
0144f834 g     F .text	00000090 alt_find_dev
01446338 g     F .text	00000138 memcpy
01444a44 g     F .text	0000000c _cleanup_r
0144d1d4 g     F .text	000000d0 .hidden __floatsidf
0144e4c0 g     F .text	00000038 adc_set_mode_run_continuously
0144fd48 g     F .text	00000078 alt_io_redirect
0144bf30 g     F .text	000000e0 .hidden __ltdf2
01440b90 g     F .text	00000014 puts
01450408 g     F .text	0000009c alt_exception_cause_generated_bad_addr
01447cd8 g     F .text	00000074 __fpclassifyd
0144751c g     F .text	000000a4 __ratio
014494b8 g     F .text	00000024 __vfiprintf_internal
0144def8 g     F .text	000000e4 altera_avalon_jtag_uart_read
01440a70 g     F .text	0000002c _printf_r
0144aba0 g     F .text	00000008 .hidden __udivsi3
0144d5f4 g     F .text	000000ac isatty
0144f4a8 g     F .text	00000080 alt_onchip_flash_poll_for_status_erase_passed
01450968 g     O .rodata	000000c8 __mprec_tens
0144588c g     F .text	0000000c __locale_charset
014522dc g     O .bss	00000004 __malloc_top_pad
014516a0 g     O .rwdata	00000008 altera_onchip_flash_list
0145166c g     O .rwdata	00000004 __mb_cur_max
014458bc g     F .text	0000000c _localeconv_r
01446b18 g     F .text	0000003c __i2b
014451fc g     F .text	000004a4 __sfvwrite_r
01447d4c g     F .text	00000054 _sbrk_r
01449a5c g     F .text	0000005c _read_r
01451698 g     O .rwdata	00000008 altera_modular_adc_list
0144f700 g     F .text	00000024 alt_dcache_flush
0144e84c g     F .text	00000168 alt_onchip_flash_erase_block
0145168c g     O .rwdata	00000004 alt_max_fd
01449664 g     F .text	00000100 _fclose_r
01444a04 g     F .text	00000030 fflush
014522d8 g     O .bss	00000004 __malloc_max_sbrked_mem
014408d4 g     F .text	00000110 .hidden __extendsfdf2
0144abb0 g     F .text	0000089c .hidden __adddf3
014472c4 g     F .text	0000011c __b2d
0144a468 g     F .text	0000061c .hidden __umoddi3
0144d7d4 g     F .text	000000dc lseek
01451664 g     O .rwdata	00000004 _global_impure_ptr
01447738 g     F .text	000005a0 _realloc_r
01452428 g       *ABS*	00000000 __bss_end
0144fb78 g     F .text	000000f0 alt_iic_isr_register
014500fc g     F .text	00000104 alt_tick
01449e28 g     F .text	00000640 .hidden __udivdi3
01449778 g     F .text	00000184 _fputwc_r
0144e674 g     F .text	00000038 adc_wait_for_interrupt
01450940 g     O .rodata	00000028 __mprec_bigtens
014468fc g     F .text	00000104 __s2b
0144d2a4 g     F .text	000000a4 .hidden __floatunsidf
0144706c g     F .text	00000060 __mcmp
01444db8 g     F .text	00000018 __fp_lock_all
0144fb2c g     F .text	0000004c alt_ic_irq_enabled
01450064 g     F .text	00000098 alt_alarm_stop
014522f0 g     O .bss	00000004 alt_irq_active
014400fc g     F .exceptions	000000d0 alt_irq_handler
01451354 g     O .rwdata	00000028 alt_dev_null
0144e484 g     F .text	0000003c adc_set_mode_run_once
0144f724 g     F .text	0000001c alt_dcache_flush_all
01446a00 g     F .text	00000068 __hi0bits
0144d14c g     F .text	00000088 .hidden __fixdfsi
014516bc g       *ABS*	00000000 __ram_rwdata_end
01451684 g     O .rwdata	00000008 alt_dev_list
0144dc5c g     F .text	00000100 write
01450ab0 g       *ABS*	00000000 __ram_rodata_end
0144d4ec g     F .text	000000b8 fstat
0144bf30 g     F .text	000000e0 .hidden __ledf2
0144e450 g     F .text	00000034 adc_start
01446de4 g     F .text	00000140 __pow5mult
01448094 g     F .text	00001424 ___vfiprintf_internal_r
014522d0 g     O .bss	00000004 __nlocale_changed
0144aba8 g     F .text	00000008 .hidden __umodsi3
01452428 g       *ABS*	00000000 end
014401cc g     F .exceptions	00000060 alt_instruction_exception_entry
01465800 g       *ABS*	00000000 __alt_stack_pointer
0144e0e4 g     F .text	00000088 alt_avalon_timer_sc_init
014409e4 g     F .text	00000064 .hidden __clzsi2
0144dfdc g     F .text	00000094 altera_avalon_jtag_uart_write
01444da8 g     F .text	00000004 __sfp_lock_acquire
01446250 g     F .text	000000e8 memchr
01440c3c g     F .text	000020fc ___vfprintf_internal_r
0144e7b0 g     F .text	0000009c alt_onchip_flash_get_info
01444f0c g     F .text	000002f0 _free_r
01445898 g     F .text	00000010 __locale_mb_cur_max
01450558 g     F .text	00000194 __call_exitprocs
014522cc g     O .bss	00000004 __mlocale_changed
01451670 g     O .rwdata	00000004 __malloc_sbrk_base
0144022c g     F .text	0000003c _start
014522f4 g     O .bss	00000004 _alt_tick_rate
01446f24 g     F .text	00000148 __lshift
014522f8 g     O .bss	00000004 _alt_nticks
0144d9a8 g     F .text	00000104 read
0144ddc8 g     F .text	00000070 alt_sys_init
01446b54 g     F .text	00000290 __multiply
01440a48 g     F .text	00000028 .hidden __mulsi3
01450ab0 g       *ABS*	00000000 __ram_rwdata_start
01450720 g       *ABS*	00000000 __ram_rodata_start
01452300 g     O .bss	00000028 __malloc_current_mallinfo
014473e0 g     F .text	0000013c __d2b
0144de38 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
01450334 g     F .text	000000d4 alt_get_fd
0144f5a8 g     F .text	00000158 alt_busy_sleep
01449538 g     F .text	00000054 _close_r
014504dc g     F .text	0000007c memcmp
01452428 g       *ABS*	00000000 __alt_stack_base
01442d5c g     F .text	00000130 __swsetup_r
0144e570 g     F .text	00000040 adc_interrupt_enable
0144b44c g     F .text	00000980 .hidden __divdf3
0144e6e4 g     F .text	000000cc alt_onchip_flash_read
01444c68 g     F .text	00000118 __sfp
01447634 g     F .text	00000078 __copybits
01450f4c g     O .rwdata	00000408 __malloc_av_
01444db4 g     F .text	00000004 __sinit_lock_release
0144c010 g     F .text	0000086c .hidden __muldf3
01447da0 g     F .text	00000054 __sread
01450220 g     F .text	00000114 alt_find_file
0144f790 g     F .text	000000a4 alt_dev_llist_insert
0144d918 g     F .text	00000020 __malloc_lock
0144db2c g     F .text	000000b0 sbrk
014447dc g     F .text	00000228 _fflush_r
0144958c g     F .text	000000d8 _calloc_r
014516a8 g     O .rwdata	00000008 alt_flash_dev_list
014522c8 g       *ABS*	00000000 __bss_start
014465cc g     F .text	00000124 memset
01440268 g     F .text	0000010c main
014522ec g     O .bss	00000004 alt_envp
014522d4 g     O .bss	00000004 __malloc_max_total_mem
0144de98 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
01449c0c g     F .text	0000001c __swbuf
0144e210 g     F .text	000000ac alt_adc_word_read
01447ed4 g     F .text	00000008 __sclose
01465800 g       *ABS*	00000000 __alt_heap_limit
01449764 g     F .text	00000014 fclose
014430b4 g     F .text	00001728 _dtoa_r
01445aa8 g     F .text	000007a8 _malloc_r
01449d9c g     F .text	00000030 __ascii_wctomb
01451690 g     O .rwdata	00000004 alt_errno
0144f428 g     F .text	00000080 alt_onchip_flash_poll_for_status_to_go_idle
014456a0 g     F .text	000000b8 _fwalk
0144aaf0 g     F .text	00000054 .hidden __divsi3
01444de8 g     F .text	00000124 _malloc_trim_r
0144ef50 g     F .text	000004d8 altera_onchip_flash_init
01440374 g     F .text	00000450 .hidden __mulsf3
01447edc g     F .text	000000a4 strcmp
01450720 g       *ABS*	00000000 __flash_rodata_start
0144bdcc g     F .text	00000084 .hidden __nedf2
0144dd94 g     F .text	00000034 alt_irq_init
0144daac g     F .text	00000080 alt_release_fd
01450784 g     O .rodata	00000100 .hidden __clz_tab
014522c8 g     O .bss	00000004 _PathLocale
014494dc g     F .text	0000005c _write_r
014458c8 g     F .text	0000001c setlocale
01451668 g     O .rwdata	00000004 _impure_ptr
014522e4 g     O .bss	00000004 alt_argc
014458b4 g     F .text	00000008 __locale_cjk_lang
01440020 g       .exceptions	00000000 alt_irq_entry
01447264 g     F .text	00000060 __ulp
01444dd0 g     F .text	00000018 __fp_unlock_all
0145167c g     O .rwdata	00000008 alt_fs_list
0144e9b4 g     F .text	000002c4 alt_onchip_flash_write_block
01440020 g       *ABS*	00000000 __ram_exceptions_start
014458e4 g     F .text	0000000c localeconv
0144f998 g     F .text	00000050 alt_ic_isr_register
014516bc g       *ABS*	00000000 _edata
0144ec78 g     F .text	000002d8 alt_onchip_flash_write
01452428 g       *ABS*	00000000 _end
0144f8c4 g     F .text	00000068 alt_flash_open_dev
0144e634 g     F .text	00000040 adc_interrupt_asserted
0144022c g       *ABS*	00000000 __ram_exceptions_end
0144fa88 g     F .text	000000a4 alt_ic_irq_disable
01447dfc g     F .text	0000007c __swrite
01451674 g     O .rwdata	00000004 __malloc_trim_threshold
0144e5f4 g     F .text	00000040 adc_clear_interrupt_status
014458a8 g     F .text	0000000c __locale_msgcharset
014504a4 g     F .text	00000038 exit
01445758 g     F .text	000000b8 _fwalk_reent
014407c4 g     F .text	00000110 .hidden __floatunsisf
014470cc g     F .text	00000198 __mdiff
0144f92c g     F .text	00000050 alt_flash_close_dev
0144ab44 g     F .text	0000005c .hidden __modsi3
01465800 g       *ABS*	00000000 __alt_data_end
01440020 g     F .exceptions	00000000 alt_exception
01444dac g     F .text	00000004 __sfp_lock_release
01440000 g       *ABS*	00000000 __alt_mem_onchip_ram
0144e3c4 g     F .text	00000040 altera_modular_adc_open
014506ec g     F .text	00000034 _exit
014458f0 g     F .text	000001b8 __smakebuf_r
01440ba4 g     F .text	00000098 strlen
0144ff04 g     F .text	00000160 open
0144be50 g     F .text	000000e0 .hidden __gedf2
0144e4f8 g     F .text	00000078 adc_recalibrate
01451678 g     O .rwdata	00000004 __wctomb
0144807c g     F .text	00000018 __sprint_r
0144f97c g     F .text	0000001c alt_icache_flush_all
014516b0 g     O .rwdata	00000004 alt_priority_mask
0144f9e8 g     F .text	000000a0 alt_ic_irq_enable
01442d38 g     F .text	00000024 __vfprintf_internal
01449dcc g     F .text	0000005c _wctomb_r
0144c87c g     F .text	000008d0 .hidden __subdf3
01446a68 g     F .text	000000b0 __lo0bits
014516b4 g     O .rwdata	00000008 alt_alarm_list
01449cc4 g     F .text	000000d8 wcrtomb
0144d398 g     F .text	000000d8 close
0144d704 g     F .text	00000080 alt_load
014498fc g     F .text	00000058 fputwc
0144e32c g     F .text	00000098 alt_adc_register_callback
00000000  w      *UND*	00000000 free
01444db0 g     F .text	00000004 __sinit_lock_acquire
014467c0 g     F .text	0000013c __multadd
01446798 g     F .text	00000028 _Bfree



Disassembly of section .entry:

01440000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 1440000:	00405134 	movhi	at,324
    ori r1, r1, %lo(_start)
 1440004:	08408b14 	ori	at,at,556
    jmp r1
 1440008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

01440020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 1440020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 1440024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 1440028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 144002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 1440030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 1440034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 1440038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 144003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 1440040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 1440044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 1440048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 144004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 1440050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 1440054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 1440058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 144005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 1440060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 1440064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 1440068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 144006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 1440070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 1440074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 1440078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 144007c:	10000326 	beq	r2,zero,144008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 1440080:	20000226 	beq	r4,zero,144008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 1440084:	14400fc0 	call	14400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 1440088:	00000706 	br	14400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 144008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 1440090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 1440094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 1440098:	14401cc0 	call	14401cc <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 144009c:	1000021e 	bne	r2,zero,14400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 14400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 14400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 14400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 14400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 14400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 14400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 14400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 14400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 14400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 14400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 14400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 14400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 14400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 14400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 14400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 14400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 14400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 14400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 14400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 14400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 14400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 14400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 14400f8:	ef80083a 	eret

014400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 14400fc:	defff904 	addi	sp,sp,-28
 1440100:	dfc00615 	stw	ra,24(sp)
 1440104:	df000515 	stw	fp,20(sp)
 1440108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 144010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 1440110:	0005313a 	rdctl	r2,ipending
 1440114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 1440118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 144011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 1440120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 1440124:	00800044 	movi	r2,1
 1440128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 144012c:	e0fffb17 	ldw	r3,-20(fp)
 1440130:	e0bffc17 	ldw	r2,-16(fp)
 1440134:	1884703a 	and	r2,r3,r2
 1440138:	10001426 	beq	r2,zero,144018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 144013c:	00805174 	movhi	r2,325
 1440140:	1088ca04 	addi	r2,r2,9000
 1440144:	e0fffd17 	ldw	r3,-12(fp)
 1440148:	180690fa 	slli	r3,r3,3
 144014c:	10c5883a 	add	r2,r2,r3
 1440150:	10c00017 	ldw	r3,0(r2)
 1440154:	00805174 	movhi	r2,325
 1440158:	1088ca04 	addi	r2,r2,9000
 144015c:	e13ffd17 	ldw	r4,-12(fp)
 1440160:	200890fa 	slli	r4,r4,3
 1440164:	1105883a 	add	r2,r2,r4
 1440168:	10800104 	addi	r2,r2,4
 144016c:	10800017 	ldw	r2,0(r2)
 1440170:	1009883a 	mov	r4,r2
 1440174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 1440178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 144017c:	0005313a 	rdctl	r2,ipending
 1440180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 1440184:	e0bfff17 	ldw	r2,-4(fp)
 1440188:	00000706 	br	14401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 144018c:	e0bffc17 	ldw	r2,-16(fp)
 1440190:	1085883a 	add	r2,r2,r2
 1440194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 1440198:	e0bffd17 	ldw	r2,-12(fp)
 144019c:	10800044 	addi	r2,r2,1
 14401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 14401a4:	003fe106 	br	144012c <__alt_data_end+0xfffda92c>

    active = alt_irq_pending ();
 14401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 14401ac:	e0bffb17 	ldw	r2,-20(fp)
 14401b0:	103fdb1e 	bne	r2,zero,1440120 <__alt_data_end+0xfffda920>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 14401b4:	0001883a 	nop
}
 14401b8:	e037883a 	mov	sp,fp
 14401bc:	dfc00117 	ldw	ra,4(sp)
 14401c0:	df000017 	ldw	fp,0(sp)
 14401c4:	dec00204 	addi	sp,sp,8
 14401c8:	f800283a 	ret

014401cc <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 14401cc:	defffb04 	addi	sp,sp,-20
 14401d0:	dfc00415 	stw	ra,16(sp)
 14401d4:	df000315 	stw	fp,12(sp)
 14401d8:	df000304 	addi	fp,sp,12
 14401dc:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 14401e0:	00bfffc4 	movi	r2,-1
 14401e4:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 14401e8:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 14401ec:	d0a32617 	ldw	r2,-29544(gp)
 14401f0:	10000726 	beq	r2,zero,1440210 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 14401f4:	d0a32617 	ldw	r2,-29544(gp)
 14401f8:	e0fffd17 	ldw	r3,-12(fp)
 14401fc:	1809883a 	mov	r4,r3
 1440200:	e17fff17 	ldw	r5,-4(fp)
 1440204:	e1bffe17 	ldw	r6,-8(fp)
 1440208:	103ee83a 	callr	r2
 144020c:	00000206 	br	1440218 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 1440210:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 1440214:	0005883a 	mov	r2,zero
}
 1440218:	e037883a 	mov	sp,fp
 144021c:	dfc00117 	ldw	ra,4(sp)
 1440220:	df000017 	ldw	fp,0(sp)
 1440224:	dec00204 	addi	sp,sp,8
 1440228:	f800283a 	ret

Disassembly of section .text:

0144022c <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 144022c:	06c051b4 	movhi	sp,326
    ori sp, sp, %lo(__alt_stack_pointer)
 1440230:	ded60014 	ori	sp,sp,22528
    movhi gp, %hi(_gp)
 1440234:	06805174 	movhi	gp,325
    ori gp, gp, %lo(_gp)
 1440238:	d6a59914 	ori	gp,gp,38500
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 144023c:	00805174 	movhi	r2,325
    ori r2, r2, %lo(__bss_start)
 1440240:	1088b214 	ori	r2,r2,8904

    movhi r3, %hi(__bss_end)
 1440244:	00c05174 	movhi	r3,325
    ori r3, r3, %lo(__bss_end)
 1440248:	18c90a14 	ori	r3,r3,9256

    beq r2, r3, 1f
 144024c:	10c00326 	beq	r2,r3,144025c <_start+0x30>

0:
    stw zero, (r2)
 1440250:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 1440254:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 1440258:	10fffd36 	bltu	r2,r3,1440250 <__alt_data_end+0xfffdaa50>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 144025c:	144d7040 	call	144d704 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 1440260:	144d8b00 	call	144d8b0 <alt_main>

01440264 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 1440264:	003fff06 	br	1440264 <__alt_data_end+0xfffdaa64>

01440268 <main>:
#define WRITE_MODE       1
#define READ_STATUS      2
#define READ_DATA	     3

int main()
{
 1440268:	defffb04 	addi	sp,sp,-20
 144026c:	dfc00415 	stw	ra,16(sp)
 1440270:	df000315 	stw	fp,12(sp)
 1440274:	df000304 	addi	fp,sp,12
	alt_u16 data_id,data_temp,temp_result;
	float temp_value;
	printf ("======== DECA Temperature Sensor Test ========\n\n");
 1440278:	01005174 	movhi	r4,325
 144027c:	2101c804 	addi	r4,r4,1824
 1440280:	1440b900 	call	1440b90 <puts>

	IOWR(TEMP_LM71CIMF_BASE, WRITE_MODE, 0xffff);  //set shutdown
 1440284:	00ffffd4 	movui	r3,65535
 1440288:	00801904 	movi	r2,100
 144028c:	10c00035 	stwio	r3,0(r2)
    while(!IORD(TEMP_LM71CIMF_BASE, READ_STATUS) ); //write over
 1440290:	0001883a 	nop
 1440294:	00801a04 	movi	r2,104
 1440298:	10800037 	ldwio	r2,0(r2)
 144029c:	103ffd26 	beq	r2,zero,1440294 <__alt_data_end+0xfffdaa94>

	IOWR(TEMP_LM71CIMF_BASE, WRITE_MODE, 0x00);  //set Conversion Mode
 14402a0:	0007883a 	mov	r3,zero
 14402a4:	00801904 	movi	r2,100
 14402a8:	10c00035 	stwio	r3,0(r2)
    while(!IORD(TEMP_LM71CIMF_BASE, READ_STATUS) ); //write over
 14402ac:	0001883a 	nop
 14402b0:	00801a04 	movi	r2,104
 14402b4:	10800037 	ldwio	r2,0(r2)
 14402b8:	103ffd26 	beq	r2,zero,14402b0 <__alt_data_end+0xfffdaab0>
    data_id = IORD(TEMP_LM71CIMF_BASE, READ_DATA); //manufacturer's/DeviceID information
 14402bc:	00801b04 	movi	r2,108
 14402c0:	10800037 	ldwio	r2,0(r2)
 14402c4:	e0bffd0d 	sth	r2,-12(fp)
    if(data_id!=0x800f)
 14402c8:	e0fffd0b 	ldhu	r3,-12(fp)
 14402cc:	00a003d4 	movui	r2,32783
 14402d0:	18800526 	beq	r3,r2,14402e8 <main+0x80>
     printf("READ ID Fail! ID: 0x%x\n",data_id);
 14402d4:	e0bffd0b 	ldhu	r2,-12(fp)
 14402d8:	01005174 	movhi	r4,325
 14402dc:	2101d404 	addi	r4,r4,1872
 14402e0:	100b883a 	mov	r5,r2
 14402e4:	1440a9c0 	call	1440a9c <printf>

    while(1){

    	IOWR(TEMP_LM71CIMF_BASE, WRITE_MODE, 0x00);  //set Conversion Mode
 14402e8:	0007883a 	mov	r3,zero
 14402ec:	00801904 	movi	r2,100
 14402f0:	10c00035 	stwio	r3,0(r2)
        while(!IORD(TEMP_LM71CIMF_BASE, READ_STATUS) ); //write over
 14402f4:	0001883a 	nop
 14402f8:	00801a04 	movi	r2,104
 14402fc:	10800037 	ldwio	r2,0(r2)
 1440300:	103ffd26 	beq	r2,zero,14402f8 <__alt_data_end+0xfffdaaf8>

        data_temp = IORD(TEMP_LM71CIMF_BASE, READ_DATA);
 1440304:	00801b04 	movi	r2,108
 1440308:	10800037 	ldwio	r2,0(r2)
 144030c:	e0bffd8d 	sth	r2,-10(fp)
       // printf("read data : 0x%x\n",data_temp);
        temp_result=data_temp>>2;
 1440310:	e0bffd8b 	ldhu	r2,-10(fp)
 1440314:	1004d0ba 	srli	r2,r2,2
 1440318:	e0bffe0d 	sth	r2,-8(fp)
        temp_value=(float)temp_result* 0.03125;
 144031c:	e0bffe0b 	ldhu	r2,-8(fp)
 1440320:	1009883a 	mov	r4,r2
 1440324:	14407c40 	call	14407c4 <__floatunsisf>
 1440328:	1007883a 	mov	r3,r2
 144032c:	1809883a 	mov	r4,r3
 1440330:	014f4034 	movhi	r5,15616
 1440334:	14403740 	call	1440374 <__mulsf3>
 1440338:	1007883a 	mov	r3,r2
 144033c:	e0ffff15 	stw	r3,-4(fp)
        printf("Board temperature: %.2f*C \n",temp_value);
 1440340:	e13fff17 	ldw	r4,-4(fp)
 1440344:	14408d40 	call	14408d4 <__extendsfdf2>
 1440348:	100d883a 	mov	r6,r2
 144034c:	180f883a 	mov	r7,r3
 1440350:	01005174 	movhi	r4,325
 1440354:	2101da04 	addi	r4,r4,1896
 1440358:	300b883a 	mov	r5,r6
 144035c:	380d883a 	mov	r6,r7
 1440360:	1440a9c0 	call	1440a9c <printf>
        usleep(300*1000);
 1440364:	01000174 	movhi	r4,5
 1440368:	2124f804 	addi	r4,r4,-27680
 144036c:	144dbdc0 	call	144dbdc <usleep>
    }
 1440370:	003fdd06 	br	14402e8 <__alt_data_end+0xfffdaae8>

01440374 <__mulsf3>:
 1440374:	defff504 	addi	sp,sp,-44
 1440378:	dc400215 	stw	r17,8(sp)
 144037c:	2022d5fa 	srli	r17,r4,23
 1440380:	dd400615 	stw	r21,24(sp)
 1440384:	202ad7fa 	srli	r21,r4,31
 1440388:	dc000115 	stw	r16,4(sp)
 144038c:	04002034 	movhi	r16,128
 1440390:	df000915 	stw	fp,36(sp)
 1440394:	dd000515 	stw	r20,20(sp)
 1440398:	843fffc4 	addi	r16,r16,-1
 144039c:	dfc00a15 	stw	ra,40(sp)
 14403a0:	ddc00815 	stw	r23,32(sp)
 14403a4:	dd800715 	stw	r22,28(sp)
 14403a8:	dcc00415 	stw	r19,16(sp)
 14403ac:	dc800315 	stw	r18,12(sp)
 14403b0:	8c403fcc 	andi	r17,r17,255
 14403b4:	8120703a 	and	r16,r16,r4
 14403b8:	a829883a 	mov	r20,r21
 14403bc:	af003fcc 	andi	fp,r21,255
 14403c0:	88005026 	beq	r17,zero,1440504 <__mulsf3+0x190>
 14403c4:	00803fc4 	movi	r2,255
 14403c8:	88802f26 	beq	r17,r2,1440488 <__mulsf3+0x114>
 14403cc:	84002034 	orhi	r16,r16,128
 14403d0:	802090fa 	slli	r16,r16,3
 14403d4:	8c7fe044 	addi	r17,r17,-127
 14403d8:	0025883a 	mov	r18,zero
 14403dc:	002f883a 	mov	r23,zero
 14403e0:	2804d5fa 	srli	r2,r5,23
 14403e4:	282cd7fa 	srli	r22,r5,31
 14403e8:	01002034 	movhi	r4,128
 14403ec:	213fffc4 	addi	r4,r4,-1
 14403f0:	10803fcc 	andi	r2,r2,255
 14403f4:	2166703a 	and	r19,r4,r5
 14403f8:	b1803fcc 	andi	r6,r22,255
 14403fc:	10004926 	beq	r2,zero,1440524 <__mulsf3+0x1b0>
 1440400:	00c03fc4 	movi	r3,255
 1440404:	10c04326 	beq	r2,r3,1440514 <__mulsf3+0x1a0>
 1440408:	99402034 	orhi	r5,r19,128
 144040c:	282690fa 	slli	r19,r5,3
 1440410:	10bfe044 	addi	r2,r2,-127
 1440414:	000b883a 	mov	r5,zero
 1440418:	88a3883a 	add	r17,r17,r2
 144041c:	2c86b03a 	or	r3,r5,r18
 1440420:	008003c4 	movi	r2,15
 1440424:	adaaf03a 	xor	r21,r21,r22
 1440428:	8c800044 	addi	r18,r17,1
 144042c:	10c06536 	bltu	r2,r3,14405c4 <__mulsf3+0x250>
 1440430:	180690ba 	slli	r3,r3,2
 1440434:	01005134 	movhi	r4,324
 1440438:	21011204 	addi	r4,r4,1096
 144043c:	1907883a 	add	r3,r3,r4
 1440440:	18800017 	ldw	r2,0(r3)
 1440444:	1000683a 	jmp	r2
 1440448:	014405c4 	movi	r5,4119
 144044c:	014406bc 	xorhi	r5,zero,4122
 1440450:	014406bc 	xorhi	r5,zero,4122
 1440454:	014406cc 	andi	r5,zero,4123
 1440458:	01440498 	cmpnei	r5,zero,4114
 144045c:	01440498 	cmpnei	r5,zero,4114
 1440460:	014405b0 	cmpltui	r5,zero,4118
 1440464:	014406cc 	andi	r5,zero,4123
 1440468:	01440498 	cmpnei	r5,zero,4114
 144046c:	014405b0 	cmpltui	r5,zero,4118
 1440470:	01440498 	cmpnei	r5,zero,4114
 1440474:	014406cc 	andi	r5,zero,4123
 1440478:	0144049c 	xori	r5,zero,4114
 144047c:	0144049c 	xori	r5,zero,4114
 1440480:	0144049c 	xori	r5,zero,4114
 1440484:	014406dc 	xori	r5,zero,4123
 1440488:	8000311e 	bne	r16,zero,1440550 <__mulsf3+0x1dc>
 144048c:	04800204 	movi	r18,8
 1440490:	05c00084 	movi	r23,2
 1440494:	003fd206 	br	14403e0 <__alt_data_end+0xfffdabe0>
 1440498:	a839883a 	mov	fp,r21
 144049c:	00800084 	movi	r2,2
 14404a0:	b880231e 	bne	r23,r2,1440530 <__mulsf3+0x1bc>
 14404a4:	e500004c 	andi	r20,fp,1
 14404a8:	00ffffc4 	movi	r3,-1
 14404ac:	0009883a 	mov	r4,zero
 14404b0:	18c03fcc 	andi	r3,r3,255
 14404b4:	180695fa 	slli	r3,r3,23
 14404b8:	a0803fcc 	andi	r2,r20,255
 14404bc:	04002034 	movhi	r16,128
 14404c0:	100497fa 	slli	r2,r2,31
 14404c4:	843fffc4 	addi	r16,r16,-1
 14404c8:	2420703a 	and	r16,r4,r16
 14404cc:	80e0b03a 	or	r16,r16,r3
 14404d0:	8084b03a 	or	r2,r16,r2
 14404d4:	dfc00a17 	ldw	ra,40(sp)
 14404d8:	df000917 	ldw	fp,36(sp)
 14404dc:	ddc00817 	ldw	r23,32(sp)
 14404e0:	dd800717 	ldw	r22,28(sp)
 14404e4:	dd400617 	ldw	r21,24(sp)
 14404e8:	dd000517 	ldw	r20,20(sp)
 14404ec:	dcc00417 	ldw	r19,16(sp)
 14404f0:	dc800317 	ldw	r18,12(sp)
 14404f4:	dc400217 	ldw	r17,8(sp)
 14404f8:	dc000117 	ldw	r16,4(sp)
 14404fc:	dec00b04 	addi	sp,sp,44
 1440500:	f800283a 	ret
 1440504:	8000151e 	bne	r16,zero,144055c <__mulsf3+0x1e8>
 1440508:	04800104 	movi	r18,4
 144050c:	05c00044 	movi	r23,1
 1440510:	003fb306 	br	14403e0 <__alt_data_end+0xfffdabe0>
 1440514:	980b003a 	cmpeq	r5,r19,zero
 1440518:	00c000c4 	movi	r3,3
 144051c:	194bc83a 	sub	r5,r3,r5
 1440520:	003fbd06 	br	1440418 <__alt_data_end+0xfffdac18>
 1440524:	9800181e 	bne	r19,zero,1440588 <__mulsf3+0x214>
 1440528:	01400044 	movi	r5,1
 144052c:	003fba06 	br	1440418 <__alt_data_end+0xfffdac18>
 1440530:	008000c4 	movi	r2,3
 1440534:	b8809d26 	beq	r23,r2,14407ac <__mulsf3+0x438>
 1440538:	00800044 	movi	r2,1
 144053c:	b880821e 	bne	r23,r2,1440748 <__mulsf3+0x3d4>
 1440540:	e0a8703a 	and	r20,fp,r2
 1440544:	0007883a 	mov	r3,zero
 1440548:	0009883a 	mov	r4,zero
 144054c:	003fd806 	br	14404b0 <__alt_data_end+0xfffdacb0>
 1440550:	04800304 	movi	r18,12
 1440554:	05c000c4 	movi	r23,3
 1440558:	003fa106 	br	14403e0 <__alt_data_end+0xfffdabe0>
 144055c:	8009883a 	mov	r4,r16
 1440560:	d9400015 	stw	r5,0(sp)
 1440564:	14409e40 	call	14409e4 <__clzsi2>
 1440568:	10fffec4 	addi	r3,r2,-5
 144056c:	047fe284 	movi	r17,-118
 1440570:	80e0983a 	sll	r16,r16,r3
 1440574:	88a3c83a 	sub	r17,r17,r2
 1440578:	0025883a 	mov	r18,zero
 144057c:	002f883a 	mov	r23,zero
 1440580:	d9400017 	ldw	r5,0(sp)
 1440584:	003f9606 	br	14403e0 <__alt_data_end+0xfffdabe0>
 1440588:	9809883a 	mov	r4,r19
 144058c:	d9800015 	stw	r6,0(sp)
 1440590:	14409e40 	call	14409e4 <__clzsi2>
 1440594:	10fffec4 	addi	r3,r2,-5
 1440598:	98e6983a 	sll	r19,r19,r3
 144059c:	00ffe284 	movi	r3,-118
 14405a0:	1885c83a 	sub	r2,r3,r2
 14405a4:	000b883a 	mov	r5,zero
 14405a8:	d9800017 	ldw	r6,0(sp)
 14405ac:	003f9a06 	br	1440418 <__alt_data_end+0xfffdac18>
 14405b0:	01002034 	movhi	r4,128
 14405b4:	0029883a 	mov	r20,zero
 14405b8:	213fffc4 	addi	r4,r4,-1
 14405bc:	00ffffc4 	movi	r3,-1
 14405c0:	003fbb06 	br	14404b0 <__alt_data_end+0xfffdacb0>
 14405c4:	802ed43a 	srli	r23,r16,16
 14405c8:	982cd43a 	srli	r22,r19,16
 14405cc:	843fffcc 	andi	r16,r16,65535
 14405d0:	9cffffcc 	andi	r19,r19,65535
 14405d4:	9809883a 	mov	r4,r19
 14405d8:	800b883a 	mov	r5,r16
 14405dc:	1440a480 	call	1440a48 <__mulsi3>
 14405e0:	9809883a 	mov	r4,r19
 14405e4:	b80b883a 	mov	r5,r23
 14405e8:	1029883a 	mov	r20,r2
 14405ec:	1440a480 	call	1440a48 <__mulsi3>
 14405f0:	b80b883a 	mov	r5,r23
 14405f4:	b009883a 	mov	r4,r22
 14405f8:	1027883a 	mov	r19,r2
 14405fc:	1440a480 	call	1440a48 <__mulsi3>
 1440600:	b009883a 	mov	r4,r22
 1440604:	800b883a 	mov	r5,r16
 1440608:	102f883a 	mov	r23,r2
 144060c:	1440a480 	call	1440a48 <__mulsi3>
 1440610:	a008d43a 	srli	r4,r20,16
 1440614:	9885883a 	add	r2,r19,r2
 1440618:	1107883a 	add	r3,r2,r4
 144061c:	1cc0022e 	bgeu	r3,r19,1440628 <__mulsf3+0x2b4>
 1440620:	00800074 	movhi	r2,1
 1440624:	b8af883a 	add	r23,r23,r2
 1440628:	1820943a 	slli	r16,r3,16
 144062c:	a53fffcc 	andi	r20,r20,65535
 1440630:	1806d43a 	srli	r3,r3,16
 1440634:	8529883a 	add	r20,r16,r20
 1440638:	a02091ba 	slli	r16,r20,6
 144063c:	b8c7883a 	add	r3,r23,r3
 1440640:	a028d6ba 	srli	r20,r20,26
 1440644:	180691ba 	slli	r3,r3,6
 1440648:	8020c03a 	cmpne	r16,r16,zero
 144064c:	8520b03a 	or	r16,r16,r20
 1440650:	80e0b03a 	or	r16,r16,r3
 1440654:	8082002c 	andhi	r2,r16,2048
 1440658:	10000426 	beq	r2,zero,144066c <__mulsf3+0x2f8>
 144065c:	8004d07a 	srli	r2,r16,1
 1440660:	8400004c 	andi	r16,r16,1
 1440664:	9023883a 	mov	r17,r18
 1440668:	80a0b03a 	or	r16,r16,r2
 144066c:	88c01fc4 	addi	r3,r17,127
 1440670:	00c02d0e 	bge	zero,r3,1440728 <__mulsf3+0x3b4>
 1440674:	808001cc 	andi	r2,r16,7
 1440678:	10000426 	beq	r2,zero,144068c <__mulsf3+0x318>
 144067c:	810003cc 	andi	r4,r16,15
 1440680:	00800104 	movi	r2,4
 1440684:	20800126 	beq	r4,r2,144068c <__mulsf3+0x318>
 1440688:	80a1883a 	add	r16,r16,r2
 144068c:	8082002c 	andhi	r2,r16,2048
 1440690:	10000426 	beq	r2,zero,14406a4 <__mulsf3+0x330>
 1440694:	00be0034 	movhi	r2,63488
 1440698:	10bfffc4 	addi	r2,r2,-1
 144069c:	88c02004 	addi	r3,r17,128
 14406a0:	80a0703a 	and	r16,r16,r2
 14406a4:	00803f84 	movi	r2,254
 14406a8:	10c01b0e 	bge	r2,r3,1440718 <__mulsf3+0x3a4>
 14406ac:	ad00004c 	andi	r20,r21,1
 14406b0:	00ffffc4 	movi	r3,-1
 14406b4:	0009883a 	mov	r4,zero
 14406b8:	003f7d06 	br	14404b0 <__alt_data_end+0xfffdacb0>
 14406bc:	9821883a 	mov	r16,r19
 14406c0:	a839883a 	mov	fp,r21
 14406c4:	282f883a 	mov	r23,r5
 14406c8:	003f7406 	br	144049c <__alt_data_end+0xfffdac9c>
 14406cc:	9821883a 	mov	r16,r19
 14406d0:	3039883a 	mov	fp,r6
 14406d4:	282f883a 	mov	r23,r5
 14406d8:	003f7006 	br	144049c <__alt_data_end+0xfffdac9c>
 14406dc:	8080102c 	andhi	r2,r16,64
 14406e0:	10000826 	beq	r2,zero,1440704 <__mulsf3+0x390>
 14406e4:	9880102c 	andhi	r2,r19,64
 14406e8:	1000061e 	bne	r2,zero,1440704 <__mulsf3+0x390>
 14406ec:	00802034 	movhi	r2,128
 14406f0:	99001034 	orhi	r4,r19,64
 14406f4:	10bfffc4 	addi	r2,r2,-1
 14406f8:	b029883a 	mov	r20,r22
 14406fc:	2088703a 	and	r4,r4,r2
 1440700:	003fae06 	br	14405bc <__alt_data_end+0xfffdadbc>
 1440704:	00802034 	movhi	r2,128
 1440708:	81001034 	orhi	r4,r16,64
 144070c:	10bfffc4 	addi	r2,r2,-1
 1440710:	2088703a 	and	r4,r4,r2
 1440714:	003fa906 	br	14405bc <__alt_data_end+0xfffdadbc>
 1440718:	802091ba 	slli	r16,r16,6
 144071c:	ad00004c 	andi	r20,r21,1
 1440720:	8008d27a 	srli	r4,r16,9
 1440724:	003f6206 	br	14404b0 <__alt_data_end+0xfffdacb0>
 1440728:	00ffe084 	movi	r3,-126
 144072c:	1c47c83a 	sub	r3,r3,r17
 1440730:	008006c4 	movi	r2,27
 1440734:	10c0070e 	bge	r2,r3,1440754 <__mulsf3+0x3e0>
 1440738:	ad00004c 	andi	r20,r21,1
 144073c:	0007883a 	mov	r3,zero
 1440740:	0009883a 	mov	r4,zero
 1440744:	003f5a06 	br	14404b0 <__alt_data_end+0xfffdacb0>
 1440748:	9023883a 	mov	r17,r18
 144074c:	e02b883a 	mov	r21,fp
 1440750:	003fc606 	br	144066c <__alt_data_end+0xfffdae6c>
 1440754:	88802784 	addi	r2,r17,158
 1440758:	8084983a 	sll	r2,r16,r2
 144075c:	80e0d83a 	srl	r16,r16,r3
 1440760:	1004c03a 	cmpne	r2,r2,zero
 1440764:	1404b03a 	or	r2,r2,r16
 1440768:	10c001cc 	andi	r3,r2,7
 144076c:	18000426 	beq	r3,zero,1440780 <__mulsf3+0x40c>
 1440770:	110003cc 	andi	r4,r2,15
 1440774:	00c00104 	movi	r3,4
 1440778:	20c00126 	beq	r4,r3,1440780 <__mulsf3+0x40c>
 144077c:	10c5883a 	add	r2,r2,r3
 1440780:	10c1002c 	andhi	r3,r2,1024
 1440784:	18000426 	beq	r3,zero,1440798 <__mulsf3+0x424>
 1440788:	ad00004c 	andi	r20,r21,1
 144078c:	00c00044 	movi	r3,1
 1440790:	0009883a 	mov	r4,zero
 1440794:	003f4606 	br	14404b0 <__alt_data_end+0xfffdacb0>
 1440798:	100491ba 	slli	r2,r2,6
 144079c:	ad00004c 	andi	r20,r21,1
 14407a0:	0007883a 	mov	r3,zero
 14407a4:	1008d27a 	srli	r4,r2,9
 14407a8:	003f4106 	br	14404b0 <__alt_data_end+0xfffdacb0>
 14407ac:	00802034 	movhi	r2,128
 14407b0:	81001034 	orhi	r4,r16,64
 14407b4:	10bfffc4 	addi	r2,r2,-1
 14407b8:	e500004c 	andi	r20,fp,1
 14407bc:	2088703a 	and	r4,r4,r2
 14407c0:	003f7e06 	br	14405bc <__alt_data_end+0xfffdadbc>

014407c4 <__floatunsisf>:
 14407c4:	defffe04 	addi	sp,sp,-8
 14407c8:	dc000015 	stw	r16,0(sp)
 14407cc:	dfc00115 	stw	ra,4(sp)
 14407d0:	2021883a 	mov	r16,r4
 14407d4:	20002626 	beq	r4,zero,1440870 <__floatunsisf+0xac>
 14407d8:	14409e40 	call	14409e4 <__clzsi2>
 14407dc:	00c02784 	movi	r3,158
 14407e0:	1887c83a 	sub	r3,r3,r2
 14407e4:	01002584 	movi	r4,150
 14407e8:	20c00816 	blt	r4,r3,144080c <__floatunsisf+0x48>
 14407ec:	01000204 	movi	r4,8
 14407f0:	2080340e 	bge	r4,r2,14408c4 <__floatunsisf+0x100>
 14407f4:	10bffe04 	addi	r2,r2,-8
 14407f8:	8088983a 	sll	r4,r16,r2
 14407fc:	00802034 	movhi	r2,128
 1440800:	10bfffc4 	addi	r2,r2,-1
 1440804:	2088703a 	and	r4,r4,r2
 1440808:	00001b06 	br	1440878 <__floatunsisf+0xb4>
 144080c:	01002644 	movi	r4,153
 1440810:	20c02316 	blt	r4,r3,14408a0 <__floatunsisf+0xdc>
 1440814:	01000144 	movi	r4,5
 1440818:	2080020e 	bge	r4,r2,1440824 <__floatunsisf+0x60>
 144081c:	113ffec4 	addi	r4,r2,-5
 1440820:	8120983a 	sll	r16,r16,r4
 1440824:	017f0034 	movhi	r5,64512
 1440828:	297fffc4 	addi	r5,r5,-1
 144082c:	810001cc 	andi	r4,r16,7
 1440830:	814a703a 	and	r5,r16,r5
 1440834:	20000426 	beq	r4,zero,1440848 <__floatunsisf+0x84>
 1440838:	840003cc 	andi	r16,r16,15
 144083c:	01000104 	movi	r4,4
 1440840:	81000126 	beq	r16,r4,1440848 <__floatunsisf+0x84>
 1440844:	290b883a 	add	r5,r5,r4
 1440848:	2901002c 	andhi	r4,r5,1024
 144084c:	20000526 	beq	r4,zero,1440864 <__floatunsisf+0xa0>
 1440850:	00c027c4 	movi	r3,159
 1440854:	1887c83a 	sub	r3,r3,r2
 1440858:	00bf0034 	movhi	r2,64512
 144085c:	10bfffc4 	addi	r2,r2,-1
 1440860:	288a703a 	and	r5,r5,r2
 1440864:	280891ba 	slli	r4,r5,6
 1440868:	2008d27a 	srli	r4,r4,9
 144086c:	00000206 	br	1440878 <__floatunsisf+0xb4>
 1440870:	0007883a 	mov	r3,zero
 1440874:	0009883a 	mov	r4,zero
 1440878:	18c03fcc 	andi	r3,r3,255
 144087c:	180695fa 	slli	r3,r3,23
 1440880:	00802034 	movhi	r2,128
 1440884:	10bfffc4 	addi	r2,r2,-1
 1440888:	2084703a 	and	r2,r4,r2
 144088c:	10c4b03a 	or	r2,r2,r3
 1440890:	dfc00117 	ldw	ra,4(sp)
 1440894:	dc000017 	ldw	r16,0(sp)
 1440898:	dec00204 	addi	sp,sp,8
 144089c:	f800283a 	ret
 14408a0:	01400144 	movi	r5,5
 14408a4:	110006c4 	addi	r4,r2,27
 14408a8:	8108983a 	sll	r4,r16,r4
 14408ac:	288dc83a 	sub	r6,r5,r2
 14408b0:	81a0d83a 	srl	r16,r16,r6
 14408b4:	2008c03a 	cmpne	r4,r4,zero
 14408b8:	2420b03a 	or	r16,r4,r16
 14408bc:	28bfd90e 	bge	r5,r2,1440824 <__alt_data_end+0xfffdb024>
 14408c0:	003fd606 	br	144081c <__alt_data_end+0xfffdb01c>
 14408c4:	01402034 	movhi	r5,128
 14408c8:	297fffc4 	addi	r5,r5,-1
 14408cc:	8148703a 	and	r4,r16,r5
 14408d0:	003fe906 	br	1440878 <__alt_data_end+0xfffdb078>

014408d4 <__extendsfdf2>:
 14408d4:	200ad5fa 	srli	r5,r4,23
 14408d8:	defffd04 	addi	sp,sp,-12
 14408dc:	dc400115 	stw	r17,4(sp)
 14408e0:	29403fcc 	andi	r5,r5,255
 14408e4:	29800044 	addi	r6,r5,1
 14408e8:	04402034 	movhi	r17,128
 14408ec:	dc000015 	stw	r16,0(sp)
 14408f0:	8c7fffc4 	addi	r17,r17,-1
 14408f4:	dfc00215 	stw	ra,8(sp)
 14408f8:	31803fcc 	andi	r6,r6,255
 14408fc:	00800044 	movi	r2,1
 1440900:	8922703a 	and	r17,r17,r4
 1440904:	2020d7fa 	srli	r16,r4,31
 1440908:	1180110e 	bge	r2,r6,1440950 <__extendsfdf2+0x7c>
 144090c:	880ed0fa 	srli	r7,r17,3
 1440910:	8822977a 	slli	r17,r17,29
 1440914:	2940e004 	addi	r5,r5,896
 1440918:	2941ffcc 	andi	r5,r5,2047
 144091c:	280c953a 	slli	r6,r5,20
 1440920:	01400434 	movhi	r5,16
 1440924:	800697fa 	slli	r3,r16,31
 1440928:	297fffc4 	addi	r5,r5,-1
 144092c:	394a703a 	and	r5,r7,r5
 1440930:	298ab03a 	or	r5,r5,r6
 1440934:	8805883a 	mov	r2,r17
 1440938:	28c6b03a 	or	r3,r5,r3
 144093c:	dfc00217 	ldw	ra,8(sp)
 1440940:	dc400117 	ldw	r17,4(sp)
 1440944:	dc000017 	ldw	r16,0(sp)
 1440948:	dec00304 	addi	sp,sp,12
 144094c:	f800283a 	ret
 1440950:	2800111e 	bne	r5,zero,1440998 <__extendsfdf2+0xc4>
 1440954:	88001c26 	beq	r17,zero,14409c8 <__extendsfdf2+0xf4>
 1440958:	8809883a 	mov	r4,r17
 144095c:	14409e40 	call	14409e4 <__clzsi2>
 1440960:	00c00284 	movi	r3,10
 1440964:	18801b16 	blt	r3,r2,14409d4 <__extendsfdf2+0x100>
 1440968:	01c002c4 	movi	r7,11
 144096c:	388fc83a 	sub	r7,r7,r2
 1440970:	10c00544 	addi	r3,r2,21
 1440974:	89ced83a 	srl	r7,r17,r7
 1440978:	88e2983a 	sll	r17,r17,r3
 144097c:	0180e244 	movi	r6,905
 1440980:	308bc83a 	sub	r5,r6,r2
 1440984:	01800434 	movhi	r6,16
 1440988:	31bfffc4 	addi	r6,r6,-1
 144098c:	398e703a 	and	r7,r7,r6
 1440990:	2941ffcc 	andi	r5,r5,2047
 1440994:	003fe006 	br	1440918 <__alt_data_end+0xfffdb118>
 1440998:	88000826 	beq	r17,zero,14409bc <__extendsfdf2+0xe8>
 144099c:	880ed0fa 	srli	r7,r17,3
 14409a0:	00800434 	movhi	r2,16
 14409a4:	10bfffc4 	addi	r2,r2,-1
 14409a8:	39c00234 	orhi	r7,r7,8
 14409ac:	8822977a 	slli	r17,r17,29
 14409b0:	388e703a 	and	r7,r7,r2
 14409b4:	0141ffc4 	movi	r5,2047
 14409b8:	003fd706 	br	1440918 <__alt_data_end+0xfffdb118>
 14409bc:	0141ffc4 	movi	r5,2047
 14409c0:	000f883a 	mov	r7,zero
 14409c4:	003fd406 	br	1440918 <__alt_data_end+0xfffdb118>
 14409c8:	000b883a 	mov	r5,zero
 14409cc:	000f883a 	mov	r7,zero
 14409d0:	003fd106 	br	1440918 <__alt_data_end+0xfffdb118>
 14409d4:	11fffd44 	addi	r7,r2,-11
 14409d8:	89ce983a 	sll	r7,r17,r7
 14409dc:	0023883a 	mov	r17,zero
 14409e0:	003fe606 	br	144097c <__alt_data_end+0xfffdb17c>

014409e4 <__clzsi2>:
 14409e4:	00bfffd4 	movui	r2,65535
 14409e8:	11000b36 	bltu	r2,r4,1440a18 <__clzsi2+0x34>
 14409ec:	00803fc4 	movi	r2,255
 14409f0:	1100122e 	bgeu	r2,r4,1440a3c <__clzsi2+0x58>
 14409f4:	00c00204 	movi	r3,8
 14409f8:	01400604 	movi	r5,24
 14409fc:	20c8d83a 	srl	r4,r4,r3
 1440a00:	00805174 	movhi	r2,325
 1440a04:	1081e104 	addi	r2,r2,1924
 1440a08:	1109883a 	add	r4,r2,r4
 1440a0c:	20800003 	ldbu	r2,0(r4)
 1440a10:	2885c83a 	sub	r2,r5,r2
 1440a14:	f800283a 	ret
 1440a18:	00804034 	movhi	r2,256
 1440a1c:	10bfffc4 	addi	r2,r2,-1
 1440a20:	11000336 	bltu	r2,r4,1440a30 <__clzsi2+0x4c>
 1440a24:	00c00404 	movi	r3,16
 1440a28:	180b883a 	mov	r5,r3
 1440a2c:	003ff306 	br	14409fc <__alt_data_end+0xfffdb1fc>
 1440a30:	00c00604 	movi	r3,24
 1440a34:	01400204 	movi	r5,8
 1440a38:	003ff006 	br	14409fc <__alt_data_end+0xfffdb1fc>
 1440a3c:	0007883a 	mov	r3,zero
 1440a40:	01400804 	movi	r5,32
 1440a44:	003fed06 	br	14409fc <__alt_data_end+0xfffdb1fc>

01440a48 <__mulsi3>:
 1440a48:	0005883a 	mov	r2,zero
 1440a4c:	20000726 	beq	r4,zero,1440a6c <__mulsi3+0x24>
 1440a50:	20c0004c 	andi	r3,r4,1
 1440a54:	2008d07a 	srli	r4,r4,1
 1440a58:	18000126 	beq	r3,zero,1440a60 <__mulsi3+0x18>
 1440a5c:	1145883a 	add	r2,r2,r5
 1440a60:	294b883a 	add	r5,r5,r5
 1440a64:	203ffa1e 	bne	r4,zero,1440a50 <__alt_data_end+0xfffdb250>
 1440a68:	f800283a 	ret
 1440a6c:	f800283a 	ret

01440a70 <_printf_r>:
 1440a70:	defffd04 	addi	sp,sp,-12
 1440a74:	dfc00015 	stw	ra,0(sp)
 1440a78:	d9800115 	stw	r6,4(sp)
 1440a7c:	d9c00215 	stw	r7,8(sp)
 1440a80:	280d883a 	mov	r6,r5
 1440a84:	21400217 	ldw	r5,8(r4)
 1440a88:	d9c00104 	addi	r7,sp,4
 1440a8c:	1440c3c0 	call	1440c3c <___vfprintf_internal_r>
 1440a90:	dfc00017 	ldw	ra,0(sp)
 1440a94:	dec00304 	addi	sp,sp,12
 1440a98:	f800283a 	ret

01440a9c <printf>:
 1440a9c:	defffc04 	addi	sp,sp,-16
 1440aa0:	dfc00015 	stw	ra,0(sp)
 1440aa4:	d9400115 	stw	r5,4(sp)
 1440aa8:	d9800215 	stw	r6,8(sp)
 1440aac:	d9c00315 	stw	r7,12(sp)
 1440ab0:	00805174 	movhi	r2,325
 1440ab4:	10859a04 	addi	r2,r2,5736
 1440ab8:	10800017 	ldw	r2,0(r2)
 1440abc:	200b883a 	mov	r5,r4
 1440ac0:	d9800104 	addi	r6,sp,4
 1440ac4:	11000217 	ldw	r4,8(r2)
 1440ac8:	1442d380 	call	1442d38 <__vfprintf_internal>
 1440acc:	dfc00017 	ldw	ra,0(sp)
 1440ad0:	dec00404 	addi	sp,sp,16
 1440ad4:	f800283a 	ret

01440ad8 <_puts_r>:
 1440ad8:	defff604 	addi	sp,sp,-40
 1440adc:	dc000715 	stw	r16,28(sp)
 1440ae0:	2021883a 	mov	r16,r4
 1440ae4:	2809883a 	mov	r4,r5
 1440ae8:	dc400815 	stw	r17,32(sp)
 1440aec:	dfc00915 	stw	ra,36(sp)
 1440af0:	2823883a 	mov	r17,r5
 1440af4:	1440ba40 	call	1440ba4 <strlen>
 1440af8:	00c05174 	movhi	r3,325
 1440afc:	18c59a04 	addi	r3,r3,5736
 1440b00:	18c00017 	ldw	r3,0(r3)
 1440b04:	11000044 	addi	r4,r2,1
 1440b08:	d8800115 	stw	r2,4(sp)
 1440b0c:	18c00217 	ldw	r3,8(r3)
 1440b10:	01405174 	movhi	r5,325
 1440b14:	29422104 	addi	r5,r5,2180
 1440b18:	1880030b 	ldhu	r2,12(r3)
 1440b1c:	d9400215 	stw	r5,8(sp)
 1440b20:	d9000615 	stw	r4,24(sp)
 1440b24:	01400044 	movi	r5,1
 1440b28:	01000084 	movi	r4,2
 1440b2c:	d9000515 	stw	r4,20(sp)
 1440b30:	dc400015 	stw	r17,0(sp)
 1440b34:	d9400315 	stw	r5,12(sp)
 1440b38:	dec00415 	stw	sp,16(sp)
 1440b3c:	1108000c 	andi	r4,r2,8192
 1440b40:	2000061e 	bne	r4,zero,1440b5c <_puts_r+0x84>
 1440b44:	19401917 	ldw	r5,100(r3)
 1440b48:	0137ffc4 	movi	r4,-8193
 1440b4c:	10880014 	ori	r2,r2,8192
 1440b50:	2908703a 	and	r4,r5,r4
 1440b54:	1880030d 	sth	r2,12(r3)
 1440b58:	19001915 	stw	r4,100(r3)
 1440b5c:	81400217 	ldw	r5,8(r16)
 1440b60:	8009883a 	mov	r4,r16
 1440b64:	d9800404 	addi	r6,sp,16
 1440b68:	14451fc0 	call	14451fc <__sfvwrite_r>
 1440b6c:	1000061e 	bne	r2,zero,1440b88 <_puts_r+0xb0>
 1440b70:	00800284 	movi	r2,10
 1440b74:	dfc00917 	ldw	ra,36(sp)
 1440b78:	dc400817 	ldw	r17,32(sp)
 1440b7c:	dc000717 	ldw	r16,28(sp)
 1440b80:	dec00a04 	addi	sp,sp,40
 1440b84:	f800283a 	ret
 1440b88:	00bfffc4 	movi	r2,-1
 1440b8c:	003ff906 	br	1440b74 <__alt_data_end+0xfffdb374>

01440b90 <puts>:
 1440b90:	00805174 	movhi	r2,325
 1440b94:	10859a04 	addi	r2,r2,5736
 1440b98:	200b883a 	mov	r5,r4
 1440b9c:	11000017 	ldw	r4,0(r2)
 1440ba0:	1440ad81 	jmpi	1440ad8 <_puts_r>

01440ba4 <strlen>:
 1440ba4:	208000cc 	andi	r2,r4,3
 1440ba8:	10002026 	beq	r2,zero,1440c2c <strlen+0x88>
 1440bac:	20800007 	ldb	r2,0(r4)
 1440bb0:	10002026 	beq	r2,zero,1440c34 <strlen+0x90>
 1440bb4:	2005883a 	mov	r2,r4
 1440bb8:	00000206 	br	1440bc4 <strlen+0x20>
 1440bbc:	10c00007 	ldb	r3,0(r2)
 1440bc0:	18001826 	beq	r3,zero,1440c24 <strlen+0x80>
 1440bc4:	10800044 	addi	r2,r2,1
 1440bc8:	10c000cc 	andi	r3,r2,3
 1440bcc:	183ffb1e 	bne	r3,zero,1440bbc <__alt_data_end+0xfffdb3bc>
 1440bd0:	10c00017 	ldw	r3,0(r2)
 1440bd4:	01ffbff4 	movhi	r7,65279
 1440bd8:	39ffbfc4 	addi	r7,r7,-257
 1440bdc:	00ca303a 	nor	r5,zero,r3
 1440be0:	01a02074 	movhi	r6,32897
 1440be4:	19c7883a 	add	r3,r3,r7
 1440be8:	31a02004 	addi	r6,r6,-32640
 1440bec:	1946703a 	and	r3,r3,r5
 1440bf0:	1986703a 	and	r3,r3,r6
 1440bf4:	1800091e 	bne	r3,zero,1440c1c <strlen+0x78>
 1440bf8:	10800104 	addi	r2,r2,4
 1440bfc:	10c00017 	ldw	r3,0(r2)
 1440c00:	19cb883a 	add	r5,r3,r7
 1440c04:	00c6303a 	nor	r3,zero,r3
 1440c08:	28c6703a 	and	r3,r5,r3
 1440c0c:	1986703a 	and	r3,r3,r6
 1440c10:	183ff926 	beq	r3,zero,1440bf8 <__alt_data_end+0xfffdb3f8>
 1440c14:	00000106 	br	1440c1c <strlen+0x78>
 1440c18:	10800044 	addi	r2,r2,1
 1440c1c:	10c00007 	ldb	r3,0(r2)
 1440c20:	183ffd1e 	bne	r3,zero,1440c18 <__alt_data_end+0xfffdb418>
 1440c24:	1105c83a 	sub	r2,r2,r4
 1440c28:	f800283a 	ret
 1440c2c:	2005883a 	mov	r2,r4
 1440c30:	003fe706 	br	1440bd0 <__alt_data_end+0xfffdb3d0>
 1440c34:	0005883a 	mov	r2,zero
 1440c38:	f800283a 	ret

01440c3c <___vfprintf_internal_r>:
 1440c3c:	defeb604 	addi	sp,sp,-1320
 1440c40:	dfc14915 	stw	ra,1316(sp)
 1440c44:	ddc14715 	stw	r23,1308(sp)
 1440c48:	dd814615 	stw	r22,1304(sp)
 1440c4c:	202f883a 	mov	r23,r4
 1440c50:	282d883a 	mov	r22,r5
 1440c54:	d9812a15 	stw	r6,1192(sp)
 1440c58:	d9c12d15 	stw	r7,1204(sp)
 1440c5c:	df014815 	stw	fp,1312(sp)
 1440c60:	dd414515 	stw	r21,1300(sp)
 1440c64:	dd014415 	stw	r20,1296(sp)
 1440c68:	dcc14315 	stw	r19,1292(sp)
 1440c6c:	dc814215 	stw	r18,1288(sp)
 1440c70:	dc414115 	stw	r17,1284(sp)
 1440c74:	dc014015 	stw	r16,1280(sp)
 1440c78:	14458bc0 	call	14458bc <_localeconv_r>
 1440c7c:	10800017 	ldw	r2,0(r2)
 1440c80:	1009883a 	mov	r4,r2
 1440c84:	d8813515 	stw	r2,1236(sp)
 1440c88:	1440ba40 	call	1440ba4 <strlen>
 1440c8c:	d8813815 	stw	r2,1248(sp)
 1440c90:	b8000226 	beq	r23,zero,1440c9c <___vfprintf_internal_r+0x60>
 1440c94:	b8800e17 	ldw	r2,56(r23)
 1440c98:	10010526 	beq	r2,zero,14410b0 <___vfprintf_internal_r+0x474>
 1440c9c:	b0c0030b 	ldhu	r3,12(r22)
 1440ca0:	1908000c 	andi	r4,r3,8192
 1440ca4:	1805883a 	mov	r2,r3
 1440ca8:	2000071e 	bne	r4,zero,1440cc8 <___vfprintf_internal_r+0x8c>
 1440cac:	b1001917 	ldw	r4,100(r22)
 1440cb0:	18880014 	ori	r2,r3,8192
 1440cb4:	00f7ffc4 	movi	r3,-8193
 1440cb8:	20c8703a 	and	r4,r4,r3
 1440cbc:	b080030d 	sth	r2,12(r22)
 1440cc0:	1007883a 	mov	r3,r2
 1440cc4:	b1001915 	stw	r4,100(r22)
 1440cc8:	1100020c 	andi	r4,r2,8
 1440ccc:	2000a826 	beq	r4,zero,1440f70 <___vfprintf_internal_r+0x334>
 1440cd0:	b1000417 	ldw	r4,16(r22)
 1440cd4:	2000a626 	beq	r4,zero,1440f70 <___vfprintf_internal_r+0x334>
 1440cd8:	1080068c 	andi	r2,r2,26
 1440cdc:	01000284 	movi	r4,10
 1440ce0:	1100ac26 	beq	r2,r4,1440f94 <___vfprintf_internal_r+0x358>
 1440ce4:	d8c10e04 	addi	r3,sp,1080
 1440ce8:	d9010dc4 	addi	r4,sp,1079
 1440cec:	d9400404 	addi	r5,sp,16
 1440cf0:	05005174 	movhi	r20,325
 1440cf4:	1905c83a 	sub	r2,r3,r4
 1440cf8:	a5023284 	addi	r20,r20,2250
 1440cfc:	d8c12815 	stw	r3,1184(sp)
 1440d00:	d9012915 	stw	r4,1188(sp)
 1440d04:	d9411e15 	stw	r5,1144(sp)
 1440d08:	d8012015 	stw	zero,1152(sp)
 1440d0c:	d8011f15 	stw	zero,1148(sp)
 1440d10:	d8013315 	stw	zero,1228(sp)
 1440d14:	d8013715 	stw	zero,1244(sp)
 1440d18:	d8013915 	stw	zero,1252(sp)
 1440d1c:	d8013b15 	stw	zero,1260(sp)
 1440d20:	d8013a15 	stw	zero,1256(sp)
 1440d24:	d8012f15 	stw	zero,1212(sp)
 1440d28:	2811883a 	mov	r8,r5
 1440d2c:	d8813c15 	stw	r2,1264(sp)
 1440d30:	d8c12a17 	ldw	r3,1192(sp)
 1440d34:	18800007 	ldb	r2,0(r3)
 1440d38:	10021326 	beq	r2,zero,1441588 <___vfprintf_internal_r+0x94c>
 1440d3c:	00c00944 	movi	r3,37
 1440d40:	dc012a17 	ldw	r16,1192(sp)
 1440d44:	10c0021e 	bne	r2,r3,1440d50 <___vfprintf_internal_r+0x114>
 1440d48:	00001606 	br	1440da4 <___vfprintf_internal_r+0x168>
 1440d4c:	10c08526 	beq	r2,r3,1440f64 <___vfprintf_internal_r+0x328>
 1440d50:	84000044 	addi	r16,r16,1
 1440d54:	80800007 	ldb	r2,0(r16)
 1440d58:	103ffc1e 	bne	r2,zero,1440d4c <__alt_data_end+0xfffdb54c>
 1440d5c:	d9012a17 	ldw	r4,1192(sp)
 1440d60:	8123c83a 	sub	r17,r16,r4
 1440d64:	88000f26 	beq	r17,zero,1440da4 <___vfprintf_internal_r+0x168>
 1440d68:	d8812a17 	ldw	r2,1192(sp)
 1440d6c:	d8c12017 	ldw	r3,1152(sp)
 1440d70:	44400115 	stw	r17,4(r8)
 1440d74:	40800015 	stw	r2,0(r8)
 1440d78:	d8811f17 	ldw	r2,1148(sp)
 1440d7c:	1c47883a 	add	r3,r3,r17
 1440d80:	d8c12015 	stw	r3,1152(sp)
 1440d84:	10800044 	addi	r2,r2,1
 1440d88:	d8811f15 	stw	r2,1148(sp)
 1440d8c:	00c001c4 	movi	r3,7
 1440d90:	1880b516 	blt	r3,r2,1441068 <___vfprintf_internal_r+0x42c>
 1440d94:	42000204 	addi	r8,r8,8
 1440d98:	d8c12f17 	ldw	r3,1212(sp)
 1440d9c:	1c47883a 	add	r3,r3,r17
 1440da0:	d8c12f15 	stw	r3,1212(sp)
 1440da4:	80800007 	ldb	r2,0(r16)
 1440da8:	1000b626 	beq	r2,zero,1441084 <___vfprintf_internal_r+0x448>
 1440dac:	80800044 	addi	r2,r16,1
 1440db0:	84000047 	ldb	r16,1(r16)
 1440db4:	0027883a 	mov	r19,zero
 1440db8:	0039883a 	mov	fp,zero
 1440dbc:	dcc12b05 	stb	r19,1196(sp)
 1440dc0:	d8012785 	stb	zero,1182(sp)
 1440dc4:	027fffc4 	movi	r9,-1
 1440dc8:	d8012e15 	stw	zero,1208(sp)
 1440dcc:	04401604 	movi	r17,88
 1440dd0:	04800244 	movi	r18,9
 1440dd4:	da012a15 	stw	r8,1192(sp)
 1440dd8:	e027883a 	mov	r19,fp
 1440ddc:	17000044 	addi	fp,r2,1
 1440de0:	80bff804 	addi	r2,r16,-32
 1440de4:	88831236 	bltu	r17,r2,1441a30 <___vfprintf_internal_r+0xdf4>
 1440de8:	100490ba 	slli	r2,r2,2
 1440dec:	01005134 	movhi	r4,324
 1440df0:	21038004 	addi	r4,r4,3584
 1440df4:	1105883a 	add	r2,r2,r4
 1440df8:	10800017 	ldw	r2,0(r2)
 1440dfc:	1000683a 	jmp	r2
 1440e00:	0144194c 	andi	r5,zero,4197
 1440e04:	01441a30 	cmpltui	r5,zero,4200
 1440e08:	01441a30 	cmpltui	r5,zero,4200
 1440e0c:	01441968 	cmpgeui	r5,zero,4197
 1440e10:	01441a30 	cmpltui	r5,zero,4200
 1440e14:	01441a30 	cmpltui	r5,zero,4200
 1440e18:	01441a30 	cmpltui	r5,zero,4200
 1440e1c:	01441a30 	cmpltui	r5,zero,4200
 1440e20:	01441a30 	cmpltui	r5,zero,4200
 1440e24:	01441a30 	cmpltui	r5,zero,4200
 1440e28:	01441978 	rdprs	r5,zero,4197
 1440e2c:	014419a0 	cmpeqi	r5,zero,4198
 1440e30:	01441a30 	cmpltui	r5,zero,4200
 1440e34:	014410bc 	xorhi	r5,zero,4162
 1440e38:	014410cc 	andi	r5,zero,4163
 1440e3c:	01441a30 	cmpltui	r5,zero,4200
 1440e40:	0144111c 	xori	r5,zero,4164
 1440e44:	0144112c 	andhi	r5,zero,4164
 1440e48:	0144112c 	andhi	r5,zero,4164
 1440e4c:	0144112c 	andhi	r5,zero,4164
 1440e50:	0144112c 	andhi	r5,zero,4164
 1440e54:	0144112c 	andhi	r5,zero,4164
 1440e58:	0144112c 	andhi	r5,zero,4164
 1440e5c:	0144112c 	andhi	r5,zero,4164
 1440e60:	0144112c 	andhi	r5,zero,4164
 1440e64:	0144112c 	andhi	r5,zero,4164
 1440e68:	01441a30 	cmpltui	r5,zero,4200
 1440e6c:	01441a30 	cmpltui	r5,zero,4200
 1440e70:	01441a30 	cmpltui	r5,zero,4200
 1440e74:	01441a30 	cmpltui	r5,zero,4200
 1440e78:	01441a30 	cmpltui	r5,zero,4200
 1440e7c:	01441a30 	cmpltui	r5,zero,4200
 1440e80:	01441a30 	cmpltui	r5,zero,4200
 1440e84:	01441a30 	cmpltui	r5,zero,4200
 1440e88:	01441a30 	cmpltui	r5,zero,4200
 1440e8c:	01441a30 	cmpltui	r5,zero,4200
 1440e90:	01441170 	cmpltui	r5,zero,4165
 1440e94:	01441590 	cmplti	r5,zero,4182
 1440e98:	01441a30 	cmpltui	r5,zero,4200
 1440e9c:	01441590 	cmplti	r5,zero,4182
 1440ea0:	01441a30 	cmpltui	r5,zero,4200
 1440ea4:	01441a30 	cmpltui	r5,zero,4200
 1440ea8:	01441a30 	cmpltui	r5,zero,4200
 1440eac:	01441a30 	cmpltui	r5,zero,4200
 1440eb0:	01441638 	rdprs	r5,zero,4184
 1440eb4:	01441a30 	cmpltui	r5,zero,4200
 1440eb8:	01441a30 	cmpltui	r5,zero,4200
 1440ebc:	01441648 	cmpgei	r5,zero,4185
 1440ec0:	01441a30 	cmpltui	r5,zero,4200
 1440ec4:	01441a30 	cmpltui	r5,zero,4200
 1440ec8:	01441a30 	cmpltui	r5,zero,4200
 1440ecc:	01441a30 	cmpltui	r5,zero,4200
 1440ed0:	01441a30 	cmpltui	r5,zero,4200
 1440ed4:	0144168c 	andi	r5,zero,4186
 1440ed8:	01441a30 	cmpltui	r5,zero,4200
 1440edc:	01441a30 	cmpltui	r5,zero,4200
 1440ee0:	014416c4 	movi	r5,4187
 1440ee4:	01441a30 	cmpltui	r5,zero,4200
 1440ee8:	01441a30 	cmpltui	r5,zero,4200
 1440eec:	01441a30 	cmpltui	r5,zero,4200
 1440ef0:	01441a30 	cmpltui	r5,zero,4200
 1440ef4:	01441a30 	cmpltui	r5,zero,4200
 1440ef8:	01441a30 	cmpltui	r5,zero,4200
 1440efc:	01441a30 	cmpltui	r5,zero,4200
 1440f00:	01441a30 	cmpltui	r5,zero,4200
 1440f04:	01441a30 	cmpltui	r5,zero,4200
 1440f08:	01441a30 	cmpltui	r5,zero,4200
 1440f0c:	01441900 	call	144190 <__alt_mem_ufm_flash_data-0x10bbe70>
 1440f10:	014418ac 	andhi	r5,zero,4194
 1440f14:	01441590 	cmplti	r5,zero,4182
 1440f18:	01441590 	cmplti	r5,zero,4182
 1440f1c:	01441590 	cmplti	r5,zero,4182
 1440f20:	014418f0 	cmpltui	r5,zero,4195
 1440f24:	014418ac 	andhi	r5,zero,4194
 1440f28:	01441a30 	cmpltui	r5,zero,4200
 1440f2c:	01441a30 	cmpltui	r5,zero,4200
 1440f30:	014417c8 	cmpgei	r5,zero,4191
 1440f34:	01441a30 	cmpltui	r5,zero,4200
 1440f38:	014417e0 	cmpeqi	r5,zero,4191
 1440f3c:	01441820 	cmpeqi	r5,zero,4192
 1440f40:	01441860 	cmpeqi	r5,zero,4193
 1440f44:	0144172c 	andhi	r5,zero,4188
 1440f48:	01441a30 	cmpltui	r5,zero,4200
 1440f4c:	014419b4 	movhi	r5,4198
 1440f50:	01441a30 	cmpltui	r5,zero,4200
 1440f54:	0144173c 	xorhi	r5,zero,4188
 1440f58:	01441a30 	cmpltui	r5,zero,4200
 1440f5c:	01441a30 	cmpltui	r5,zero,4200
 1440f60:	0144177c 	xorhi	r5,zero,4189
 1440f64:	d9412a17 	ldw	r5,1192(sp)
 1440f68:	8163c83a 	sub	r17,r16,r5
 1440f6c:	003f7d06 	br	1440d64 <__alt_data_end+0xfffdb564>
 1440f70:	b809883a 	mov	r4,r23
 1440f74:	b00b883a 	mov	r5,r22
 1440f78:	1442d5c0 	call	1442d5c <__swsetup_r>
 1440f7c:	10002d1e 	bne	r2,zero,1441034 <___vfprintf_internal_r+0x3f8>
 1440f80:	b0c0030b 	ldhu	r3,12(r22)
 1440f84:	01000284 	movi	r4,10
 1440f88:	1805883a 	mov	r2,r3
 1440f8c:	1080068c 	andi	r2,r2,26
 1440f90:	113f541e 	bne	r2,r4,1440ce4 <__alt_data_end+0xfffdb4e4>
 1440f94:	b080038b 	ldhu	r2,14(r22)
 1440f98:	113fffcc 	andi	r4,r2,65535
 1440f9c:	2120001c 	xori	r4,r4,32768
 1440fa0:	21200004 	addi	r4,r4,-32768
 1440fa4:	203f4f16 	blt	r4,zero,1440ce4 <__alt_data_end+0xfffdb4e4>
 1440fa8:	b2c01917 	ldw	r11,100(r22)
 1440fac:	b2800717 	ldw	r10,28(r22)
 1440fb0:	b2400917 	ldw	r9,36(r22)
 1440fb4:	d9812a17 	ldw	r6,1192(sp)
 1440fb8:	d9c12d17 	ldw	r7,1204(sp)
 1440fbc:	02010004 	movi	r8,1024
 1440fc0:	18ffff4c 	andi	r3,r3,65533
 1440fc4:	d881078d 	sth	r2,1054(sp)
 1440fc8:	b809883a 	mov	r4,r23
 1440fcc:	d8800404 	addi	r2,sp,16
 1440fd0:	d9410404 	addi	r5,sp,1040
 1440fd4:	d8c1070d 	sth	r3,1052(sp)
 1440fd8:	dac11d15 	stw	r11,1140(sp)
 1440fdc:	da810b15 	stw	r10,1068(sp)
 1440fe0:	da410d15 	stw	r9,1076(sp)
 1440fe4:	d8810415 	stw	r2,1040(sp)
 1440fe8:	d8810815 	stw	r2,1056(sp)
 1440fec:	da010615 	stw	r8,1048(sp)
 1440ff0:	da010915 	stw	r8,1060(sp)
 1440ff4:	d8010a15 	stw	zero,1064(sp)
 1440ff8:	1440c3c0 	call	1440c3c <___vfprintf_internal_r>
 1440ffc:	1021883a 	mov	r16,r2
 1441000:	10000416 	blt	r2,zero,1441014 <___vfprintf_internal_r+0x3d8>
 1441004:	b809883a 	mov	r4,r23
 1441008:	d9410404 	addi	r5,sp,1040
 144100c:	14447dc0 	call	14447dc <_fflush_r>
 1441010:	1007301e 	bne	r2,zero,1442cd4 <___vfprintf_internal_r+0x2098>
 1441014:	d881070b 	ldhu	r2,1052(sp)
 1441018:	1080100c 	andi	r2,r2,64
 144101c:	10000326 	beq	r2,zero,144102c <___vfprintf_internal_r+0x3f0>
 1441020:	b080030b 	ldhu	r2,12(r22)
 1441024:	10801014 	ori	r2,r2,64
 1441028:	b080030d 	sth	r2,12(r22)
 144102c:	8005883a 	mov	r2,r16
 1441030:	00000106 	br	1441038 <___vfprintf_internal_r+0x3fc>
 1441034:	00bfffc4 	movi	r2,-1
 1441038:	dfc14917 	ldw	ra,1316(sp)
 144103c:	df014817 	ldw	fp,1312(sp)
 1441040:	ddc14717 	ldw	r23,1308(sp)
 1441044:	dd814617 	ldw	r22,1304(sp)
 1441048:	dd414517 	ldw	r21,1300(sp)
 144104c:	dd014417 	ldw	r20,1296(sp)
 1441050:	dcc14317 	ldw	r19,1292(sp)
 1441054:	dc814217 	ldw	r18,1288(sp)
 1441058:	dc414117 	ldw	r17,1284(sp)
 144105c:	dc014017 	ldw	r16,1280(sp)
 1441060:	dec14a04 	addi	sp,sp,1320
 1441064:	f800283a 	ret
 1441068:	b809883a 	mov	r4,r23
 144106c:	b00b883a 	mov	r5,r22
 1441070:	d9811e04 	addi	r6,sp,1144
 1441074:	144807c0 	call	144807c <__sprint_r>
 1441078:	1000081e 	bne	r2,zero,144109c <___vfprintf_internal_r+0x460>
 144107c:	da000404 	addi	r8,sp,16
 1441080:	003f4506 	br	1440d98 <__alt_data_end+0xfffdb598>
 1441084:	d8812017 	ldw	r2,1152(sp)
 1441088:	10000426 	beq	r2,zero,144109c <___vfprintf_internal_r+0x460>
 144108c:	b809883a 	mov	r4,r23
 1441090:	b00b883a 	mov	r5,r22
 1441094:	d9811e04 	addi	r6,sp,1144
 1441098:	144807c0 	call	144807c <__sprint_r>
 144109c:	b080030b 	ldhu	r2,12(r22)
 14410a0:	1080100c 	andi	r2,r2,64
 14410a4:	103fe31e 	bne	r2,zero,1441034 <__alt_data_end+0xfffdb834>
 14410a8:	d8812f17 	ldw	r2,1212(sp)
 14410ac:	003fe206 	br	1441038 <__alt_data_end+0xfffdb838>
 14410b0:	b809883a 	mov	r4,r23
 14410b4:	1444d980 	call	1444d98 <__sinit>
 14410b8:	003ef806 	br	1440c9c <__alt_data_end+0xfffdb49c>
 14410bc:	e005883a 	mov	r2,fp
 14410c0:	9cc00114 	ori	r19,r19,4
 14410c4:	e4000007 	ldb	r16,0(fp)
 14410c8:	003f4406 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 14410cc:	e4000007 	ldb	r16,0(fp)
 14410d0:	01000a84 	movi	r4,42
 14410d4:	e0800044 	addi	r2,fp,1
 14410d8:	8106f626 	beq	r16,r4,1442cb4 <___vfprintf_internal_r+0x2078>
 14410dc:	857ff404 	addi	r21,r16,-48
 14410e0:	1039883a 	mov	fp,r2
 14410e4:	0013883a 	mov	r9,zero
 14410e8:	957f3d36 	bltu	r18,r21,1440de0 <__alt_data_end+0xfffdb5e0>
 14410ec:	0009883a 	mov	r4,zero
 14410f0:	01400284 	movi	r5,10
 14410f4:	1440a480 	call	1440a48 <__mulsi3>
 14410f8:	e4000007 	ldb	r16,0(fp)
 14410fc:	a889883a 	add	r4,r21,r2
 1441100:	e7000044 	addi	fp,fp,1
 1441104:	857ff404 	addi	r21,r16,-48
 1441108:	957ff92e 	bgeu	r18,r21,14410f0 <__alt_data_end+0xfffdb8f0>
 144110c:	2013883a 	mov	r9,r4
 1441110:	203f330e 	bge	r4,zero,1440de0 <__alt_data_end+0xfffdb5e0>
 1441114:	027fffc4 	movi	r9,-1
 1441118:	003f3106 	br	1440de0 <__alt_data_end+0xfffdb5e0>
 144111c:	9cc02014 	ori	r19,r19,128
 1441120:	e005883a 	mov	r2,fp
 1441124:	e4000007 	ldb	r16,0(fp)
 1441128:	003f2c06 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 144112c:	857ff404 	addi	r21,r16,-48
 1441130:	d8012e15 	stw	zero,1208(sp)
 1441134:	e021883a 	mov	r16,fp
 1441138:	0009883a 	mov	r4,zero
 144113c:	da412c15 	stw	r9,1200(sp)
 1441140:	01400284 	movi	r5,10
 1441144:	1440a480 	call	1440a48 <__mulsi3>
 1441148:	81400007 	ldb	r5,0(r16)
 144114c:	1549883a 	add	r4,r2,r21
 1441150:	e7000044 	addi	fp,fp,1
 1441154:	2d7ff404 	addi	r21,r5,-48
 1441158:	e021883a 	mov	r16,fp
 144115c:	957ff82e 	bgeu	r18,r21,1441140 <__alt_data_end+0xfffdb940>
 1441160:	2821883a 	mov	r16,r5
 1441164:	d9012e15 	stw	r4,1208(sp)
 1441168:	da412c17 	ldw	r9,1200(sp)
 144116c:	003f1c06 	br	1440de0 <__alt_data_end+0xfffdb5e0>
 1441170:	da012a17 	ldw	r8,1192(sp)
 1441174:	df012a15 	stw	fp,1192(sp)
 1441178:	9839883a 	mov	fp,r19
 144117c:	dcc12b03 	ldbu	r19,1196(sp)
 1441180:	e7000414 	ori	fp,fp,16
 1441184:	e080080c 	andi	r2,fp,32
 1441188:	dcc12785 	stb	r19,1182(sp)
 144118c:	d8c12d17 	ldw	r3,1204(sp)
 1441190:	1001ce26 	beq	r2,zero,14418cc <___vfprintf_internal_r+0xc90>
 1441194:	d9012d17 	ldw	r4,1204(sp)
 1441198:	18800117 	ldw	r2,4(r3)
 144119c:	1c800017 	ldw	r18,0(r3)
 14411a0:	21000204 	addi	r4,r4,8
 14411a4:	d9012d15 	stw	r4,1204(sp)
 14411a8:	102b883a 	mov	r21,r2
 14411ac:	10044916 	blt	r2,zero,14422d4 <___vfprintf_internal_r+0x1698>
 14411b0:	dcc12783 	ldbu	r19,1182(sp)
 14411b4:	da413215 	stw	r9,1224(sp)
 14411b8:	00800044 	movi	r2,1
 14411bc:	9546b03a 	or	r3,r18,r21
 14411c0:	48000216 	blt	r9,zero,14411cc <___vfprintf_internal_r+0x590>
 14411c4:	013fdfc4 	movi	r4,-129
 14411c8:	e138703a 	and	fp,fp,r4
 14411cc:	1802251e 	bne	r3,zero,1441a64 <___vfprintf_internal_r+0xe28>
 14411d0:	48031726 	beq	r9,zero,1441e30 <___vfprintf_internal_r+0x11f4>
 14411d4:	10803fcc 	andi	r2,r2,255
 14411d8:	00c00044 	movi	r3,1
 14411dc:	10c24526 	beq	r2,r3,1441af4 <___vfprintf_internal_r+0xeb8>
 14411e0:	00c00084 	movi	r3,2
 14411e4:	10c33426 	beq	r2,r3,1441eb8 <___vfprintf_internal_r+0x127c>
 14411e8:	d8c10e04 	addi	r3,sp,1080
 14411ec:	9008d0fa 	srli	r4,r18,3
 14411f0:	a80a977a 	slli	r5,r21,29
 14411f4:	a82ad0fa 	srli	r21,r21,3
 14411f8:	948001cc 	andi	r18,r18,7
 14411fc:	90800c04 	addi	r2,r18,48
 1441200:	18ffffc4 	addi	r3,r3,-1
 1441204:	2924b03a 	or	r18,r5,r4
 1441208:	18800005 	stb	r2,0(r3)
 144120c:	9548b03a 	or	r4,r18,r21
 1441210:	203ff61e 	bne	r4,zero,14411ec <__alt_data_end+0xfffdb9ec>
 1441214:	e100004c 	andi	r4,fp,1
 1441218:	d8c13115 	stw	r3,1220(sp)
 144121c:	20039a1e 	bne	r4,zero,1442088 <___vfprintf_internal_r+0x144c>
 1441220:	d8812817 	ldw	r2,1184(sp)
 1441224:	10e3c83a 	sub	r17,r2,r3
 1441228:	8805883a 	mov	r2,r17
 144122c:	8a40010e 	bge	r17,r9,1441234 <___vfprintf_internal_r+0x5f8>
 1441230:	4805883a 	mov	r2,r9
 1441234:	d8812b15 	stw	r2,1196(sp)
 1441238:	d8013415 	stw	zero,1232(sp)
 144123c:	98803fcc 	andi	r2,r19,255
 1441240:	1080201c 	xori	r2,r2,128
 1441244:	10bfe004 	addi	r2,r2,-128
 1441248:	10000326 	beq	r2,zero,1441258 <___vfprintf_internal_r+0x61c>
 144124c:	d8c12b17 	ldw	r3,1196(sp)
 1441250:	18c00044 	addi	r3,r3,1
 1441254:	d8c12b15 	stw	r3,1196(sp)
 1441258:	e0c0008c 	andi	r3,fp,2
 144125c:	d8c12c15 	stw	r3,1200(sp)
 1441260:	18000326 	beq	r3,zero,1441270 <___vfprintf_internal_r+0x634>
 1441264:	d8c12b17 	ldw	r3,1196(sp)
 1441268:	18c00084 	addi	r3,r3,2
 144126c:	d8c12b15 	stw	r3,1196(sp)
 1441270:	e0c0210c 	andi	r3,fp,132
 1441274:	d8c13015 	stw	r3,1216(sp)
 1441278:	1801f81e 	bne	r3,zero,1441a5c <___vfprintf_internal_r+0xe20>
 144127c:	d9012e17 	ldw	r4,1208(sp)
 1441280:	d8c12b17 	ldw	r3,1196(sp)
 1441284:	20ebc83a 	sub	r21,r4,r3
 1441288:	0541f40e 	bge	zero,r21,1441a5c <___vfprintf_internal_r+0xe20>
 144128c:	02400404 	movi	r9,16
 1441290:	d8c12017 	ldw	r3,1152(sp)
 1441294:	d8811f17 	ldw	r2,1148(sp)
 1441298:	4d45750e 	bge	r9,r21,1442870 <___vfprintf_internal_r+0x1c34>
 144129c:	01405174 	movhi	r5,325
 14412a0:	29423684 	addi	r5,r5,2266
 14412a4:	d9413615 	stw	r5,1240(sp)
 14412a8:	4827883a 	mov	r19,r9
 14412ac:	048001c4 	movi	r18,7
 14412b0:	00000306 	br	14412c0 <___vfprintf_internal_r+0x684>
 14412b4:	ad7ffc04 	addi	r21,r21,-16
 14412b8:	42000204 	addi	r8,r8,8
 14412bc:	9d40130e 	bge	r19,r21,144130c <___vfprintf_internal_r+0x6d0>
 14412c0:	01005174 	movhi	r4,325
 14412c4:	18c00404 	addi	r3,r3,16
 14412c8:	10800044 	addi	r2,r2,1
 14412cc:	21023684 	addi	r4,r4,2266
 14412d0:	41000015 	stw	r4,0(r8)
 14412d4:	44c00115 	stw	r19,4(r8)
 14412d8:	d8c12015 	stw	r3,1152(sp)
 14412dc:	d8811f15 	stw	r2,1148(sp)
 14412e0:	90bff40e 	bge	r18,r2,14412b4 <__alt_data_end+0xfffdbab4>
 14412e4:	b809883a 	mov	r4,r23
 14412e8:	b00b883a 	mov	r5,r22
 14412ec:	d9811e04 	addi	r6,sp,1144
 14412f0:	144807c0 	call	144807c <__sprint_r>
 14412f4:	103f691e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 14412f8:	ad7ffc04 	addi	r21,r21,-16
 14412fc:	d8c12017 	ldw	r3,1152(sp)
 1441300:	d8811f17 	ldw	r2,1148(sp)
 1441304:	da000404 	addi	r8,sp,16
 1441308:	9d7fed16 	blt	r19,r21,14412c0 <__alt_data_end+0xfffdbac0>
 144130c:	d9413617 	ldw	r5,1240(sp)
 1441310:	a8c7883a 	add	r3,r21,r3
 1441314:	10800044 	addi	r2,r2,1
 1441318:	41400015 	stw	r5,0(r8)
 144131c:	45400115 	stw	r21,4(r8)
 1441320:	d8c12015 	stw	r3,1152(sp)
 1441324:	d8811f15 	stw	r2,1148(sp)
 1441328:	010001c4 	movi	r4,7
 144132c:	20832b16 	blt	r4,r2,1441fdc <___vfprintf_internal_r+0x13a0>
 1441330:	d8812787 	ldb	r2,1182(sp)
 1441334:	42000204 	addi	r8,r8,8
 1441338:	10000c26 	beq	r2,zero,144136c <___vfprintf_internal_r+0x730>
 144133c:	d8811f17 	ldw	r2,1148(sp)
 1441340:	d9012784 	addi	r4,sp,1182
 1441344:	18c00044 	addi	r3,r3,1
 1441348:	10800044 	addi	r2,r2,1
 144134c:	41000015 	stw	r4,0(r8)
 1441350:	01000044 	movi	r4,1
 1441354:	41000115 	stw	r4,4(r8)
 1441358:	d8c12015 	stw	r3,1152(sp)
 144135c:	d8811f15 	stw	r2,1148(sp)
 1441360:	010001c4 	movi	r4,7
 1441364:	2082c416 	blt	r4,r2,1441e78 <___vfprintf_internal_r+0x123c>
 1441368:	42000204 	addi	r8,r8,8
 144136c:	d8812c17 	ldw	r2,1200(sp)
 1441370:	10000c26 	beq	r2,zero,14413a4 <___vfprintf_internal_r+0x768>
 1441374:	d8811f17 	ldw	r2,1148(sp)
 1441378:	d9012704 	addi	r4,sp,1180
 144137c:	18c00084 	addi	r3,r3,2
 1441380:	10800044 	addi	r2,r2,1
 1441384:	41000015 	stw	r4,0(r8)
 1441388:	01000084 	movi	r4,2
 144138c:	41000115 	stw	r4,4(r8)
 1441390:	d8c12015 	stw	r3,1152(sp)
 1441394:	d8811f15 	stw	r2,1148(sp)
 1441398:	010001c4 	movi	r4,7
 144139c:	2082be16 	blt	r4,r2,1441e98 <___vfprintf_internal_r+0x125c>
 14413a0:	42000204 	addi	r8,r8,8
 14413a4:	d9013017 	ldw	r4,1216(sp)
 14413a8:	00802004 	movi	r2,128
 14413ac:	20822026 	beq	r4,r2,1441c30 <___vfprintf_internal_r+0xff4>
 14413b0:	d9413217 	ldw	r5,1224(sp)
 14413b4:	2c67c83a 	sub	r19,r5,r17
 14413b8:	04c0260e 	bge	zero,r19,1441454 <___vfprintf_internal_r+0x818>
 14413bc:	05400404 	movi	r21,16
 14413c0:	d8811f17 	ldw	r2,1148(sp)
 14413c4:	acc4720e 	bge	r21,r19,1442590 <___vfprintf_internal_r+0x1954>
 14413c8:	01405174 	movhi	r5,325
 14413cc:	29423284 	addi	r5,r5,2250
 14413d0:	d9412c15 	stw	r5,1200(sp)
 14413d4:	048001c4 	movi	r18,7
 14413d8:	00000306 	br	14413e8 <___vfprintf_internal_r+0x7ac>
 14413dc:	9cfffc04 	addi	r19,r19,-16
 14413e0:	42000204 	addi	r8,r8,8
 14413e4:	acc0110e 	bge	r21,r19,144142c <___vfprintf_internal_r+0x7f0>
 14413e8:	18c00404 	addi	r3,r3,16
 14413ec:	10800044 	addi	r2,r2,1
 14413f0:	45000015 	stw	r20,0(r8)
 14413f4:	45400115 	stw	r21,4(r8)
 14413f8:	d8c12015 	stw	r3,1152(sp)
 14413fc:	d8811f15 	stw	r2,1148(sp)
 1441400:	90bff60e 	bge	r18,r2,14413dc <__alt_data_end+0xfffdbbdc>
 1441404:	b809883a 	mov	r4,r23
 1441408:	b00b883a 	mov	r5,r22
 144140c:	d9811e04 	addi	r6,sp,1144
 1441410:	144807c0 	call	144807c <__sprint_r>
 1441414:	103f211e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441418:	9cfffc04 	addi	r19,r19,-16
 144141c:	d8c12017 	ldw	r3,1152(sp)
 1441420:	d8811f17 	ldw	r2,1148(sp)
 1441424:	da000404 	addi	r8,sp,16
 1441428:	acffef16 	blt	r21,r19,14413e8 <__alt_data_end+0xfffdbbe8>
 144142c:	d9012c17 	ldw	r4,1200(sp)
 1441430:	1cc7883a 	add	r3,r3,r19
 1441434:	10800044 	addi	r2,r2,1
 1441438:	41000015 	stw	r4,0(r8)
 144143c:	44c00115 	stw	r19,4(r8)
 1441440:	d8c12015 	stw	r3,1152(sp)
 1441444:	d8811f15 	stw	r2,1148(sp)
 1441448:	010001c4 	movi	r4,7
 144144c:	20828216 	blt	r4,r2,1441e58 <___vfprintf_internal_r+0x121c>
 1441450:	42000204 	addi	r8,r8,8
 1441454:	e080400c 	andi	r2,fp,256
 1441458:	1001ac1e 	bne	r2,zero,1441b0c <___vfprintf_internal_r+0xed0>
 144145c:	d8811f17 	ldw	r2,1148(sp)
 1441460:	d9413117 	ldw	r5,1220(sp)
 1441464:	1c47883a 	add	r3,r3,r17
 1441468:	10800044 	addi	r2,r2,1
 144146c:	41400015 	stw	r5,0(r8)
 1441470:	44400115 	stw	r17,4(r8)
 1441474:	d8c12015 	stw	r3,1152(sp)
 1441478:	d8811f15 	stw	r2,1148(sp)
 144147c:	010001c4 	movi	r4,7
 1441480:	20825d16 	blt	r4,r2,1441df8 <___vfprintf_internal_r+0x11bc>
 1441484:	42000204 	addi	r8,r8,8
 1441488:	e080010c 	andi	r2,fp,4
 144148c:	10003126 	beq	r2,zero,1441554 <___vfprintf_internal_r+0x918>
 1441490:	d8812e17 	ldw	r2,1208(sp)
 1441494:	d9012b17 	ldw	r4,1196(sp)
 1441498:	1121c83a 	sub	r16,r2,r4
 144149c:	04002d0e 	bge	zero,r16,1441554 <___vfprintf_internal_r+0x918>
 14414a0:	04400404 	movi	r17,16
 14414a4:	d8811f17 	ldw	r2,1148(sp)
 14414a8:	8c05340e 	bge	r17,r16,144297c <___vfprintf_internal_r+0x1d40>
 14414ac:	01005174 	movhi	r4,325
 14414b0:	21023684 	addi	r4,r4,2266
 14414b4:	d9013615 	stw	r4,1240(sp)
 14414b8:	048001c4 	movi	r18,7
 14414bc:	00000306 	br	14414cc <___vfprintf_internal_r+0x890>
 14414c0:	843ffc04 	addi	r16,r16,-16
 14414c4:	42000204 	addi	r8,r8,8
 14414c8:	8c00130e 	bge	r17,r16,1441518 <___vfprintf_internal_r+0x8dc>
 14414cc:	01405174 	movhi	r5,325
 14414d0:	18c00404 	addi	r3,r3,16
 14414d4:	10800044 	addi	r2,r2,1
 14414d8:	29423684 	addi	r5,r5,2266
 14414dc:	41400015 	stw	r5,0(r8)
 14414e0:	44400115 	stw	r17,4(r8)
 14414e4:	d8c12015 	stw	r3,1152(sp)
 14414e8:	d8811f15 	stw	r2,1148(sp)
 14414ec:	90bff40e 	bge	r18,r2,14414c0 <__alt_data_end+0xfffdbcc0>
 14414f0:	b809883a 	mov	r4,r23
 14414f4:	b00b883a 	mov	r5,r22
 14414f8:	d9811e04 	addi	r6,sp,1144
 14414fc:	144807c0 	call	144807c <__sprint_r>
 1441500:	103ee61e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441504:	843ffc04 	addi	r16,r16,-16
 1441508:	d8c12017 	ldw	r3,1152(sp)
 144150c:	d8811f17 	ldw	r2,1148(sp)
 1441510:	da000404 	addi	r8,sp,16
 1441514:	8c3fed16 	blt	r17,r16,14414cc <__alt_data_end+0xfffdbccc>
 1441518:	d9013617 	ldw	r4,1240(sp)
 144151c:	1c07883a 	add	r3,r3,r16
 1441520:	10800044 	addi	r2,r2,1
 1441524:	41000015 	stw	r4,0(r8)
 1441528:	44000115 	stw	r16,4(r8)
 144152c:	d8c12015 	stw	r3,1152(sp)
 1441530:	d8811f15 	stw	r2,1148(sp)
 1441534:	010001c4 	movi	r4,7
 1441538:	2080060e 	bge	r4,r2,1441554 <___vfprintf_internal_r+0x918>
 144153c:	b809883a 	mov	r4,r23
 1441540:	b00b883a 	mov	r5,r22
 1441544:	d9811e04 	addi	r6,sp,1144
 1441548:	144807c0 	call	144807c <__sprint_r>
 144154c:	103ed31e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441550:	d8c12017 	ldw	r3,1152(sp)
 1441554:	df012b17 	ldw	fp,1196(sp)
 1441558:	d9412e17 	ldw	r5,1208(sp)
 144155c:	e140010e 	bge	fp,r5,1441564 <___vfprintf_internal_r+0x928>
 1441560:	2839883a 	mov	fp,r5
 1441564:	d8812f17 	ldw	r2,1212(sp)
 1441568:	1705883a 	add	r2,r2,fp
 144156c:	d8812f15 	stw	r2,1212(sp)
 1441570:	1802291e 	bne	r3,zero,1441e18 <___vfprintf_internal_r+0x11dc>
 1441574:	d8c12a17 	ldw	r3,1192(sp)
 1441578:	d8011f15 	stw	zero,1148(sp)
 144157c:	da000404 	addi	r8,sp,16
 1441580:	18800007 	ldb	r2,0(r3)
 1441584:	103ded1e 	bne	r2,zero,1440d3c <__alt_data_end+0xfffdb53c>
 1441588:	dc012a17 	ldw	r16,1192(sp)
 144158c:	003e0506 	br	1440da4 <__alt_data_end+0xfffdb5a4>
 1441590:	d9012d17 	ldw	r4,1204(sp)
 1441594:	d9412d17 	ldw	r5,1204(sp)
 1441598:	da012a17 	ldw	r8,1192(sp)
 144159c:	21000017 	ldw	r4,0(r4)
 14415a0:	29400117 	ldw	r5,4(r5)
 14415a4:	df012a15 	stw	fp,1192(sp)
 14415a8:	9839883a 	mov	fp,r19
 14415ac:	dcc12b03 	ldbu	r19,1196(sp)
 14415b0:	d9013715 	stw	r4,1244(sp)
 14415b4:	d9413915 	stw	r5,1252(sp)
 14415b8:	da013f15 	stw	r8,1276(sp)
 14415bc:	da413e15 	stw	r9,1272(sp)
 14415c0:	dcc12785 	stb	r19,1182(sp)
 14415c4:	1447cd80 	call	1447cd8 <__fpclassifyd>
 14415c8:	d8c12d17 	ldw	r3,1204(sp)
 14415cc:	04400044 	movi	r17,1
 14415d0:	da013f17 	ldw	r8,1276(sp)
 14415d4:	1c800204 	addi	r18,r3,8
 14415d8:	da413e17 	ldw	r9,1272(sp)
 14415dc:	d9013717 	ldw	r4,1244(sp)
 14415e0:	d9413917 	ldw	r5,1252(sp)
 14415e4:	1443451e 	bne	r2,r17,14422fc <___vfprintf_internal_r+0x16c0>
 14415e8:	000d883a 	mov	r6,zero
 14415ec:	000f883a 	mov	r7,zero
 14415f0:	144bf300 	call	144bf30 <__ledf2>
 14415f4:	da013f17 	ldw	r8,1276(sp)
 14415f8:	1004fe16 	blt	r2,zero,14429f4 <___vfprintf_internal_r+0x1db8>
 14415fc:	dcc12783 	ldbu	r19,1182(sp)
 1441600:	008011c4 	movi	r2,71
 1441604:	14045d0e 	bge	r2,r16,144277c <___vfprintf_internal_r+0x1b40>
 1441608:	01405174 	movhi	r5,325
 144160c:	29422304 	addi	r5,r5,2188
 1441610:	d9413115 	stw	r5,1220(sp)
 1441614:	00c000c4 	movi	r3,3
 1441618:	00bfdfc4 	movi	r2,-129
 144161c:	d8c12b15 	stw	r3,1196(sp)
 1441620:	e0b8703a 	and	fp,fp,r2
 1441624:	dc812d15 	stw	r18,1204(sp)
 1441628:	1823883a 	mov	r17,r3
 144162c:	d8013215 	stw	zero,1224(sp)
 1441630:	d8013415 	stw	zero,1232(sp)
 1441634:	003f0106 	br	144123c <__alt_data_end+0xfffdba3c>
 1441638:	9cc00214 	ori	r19,r19,8
 144163c:	e005883a 	mov	r2,fp
 1441640:	e4000007 	ldb	r16,0(fp)
 1441644:	003de506 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 1441648:	da012a17 	ldw	r8,1192(sp)
 144164c:	df012a15 	stw	fp,1192(sp)
 1441650:	9f000414 	ori	fp,r19,16
 1441654:	e0c0080c 	andi	r3,fp,32
 1441658:	d8812d17 	ldw	r2,1204(sp)
 144165c:	18007626 	beq	r3,zero,1441838 <___vfprintf_internal_r+0xbfc>
 1441660:	d9412d17 	ldw	r5,1204(sp)
 1441664:	14800017 	ldw	r18,0(r2)
 1441668:	15400117 	ldw	r21,4(r2)
 144166c:	29400204 	addi	r5,r5,8
 1441670:	d9412d15 	stw	r5,1204(sp)
 1441674:	0005883a 	mov	r2,zero
 1441678:	9546b03a 	or	r3,r18,r21
 144167c:	d8012785 	stb	zero,1182(sp)
 1441680:	da413215 	stw	r9,1224(sp)
 1441684:	0027883a 	mov	r19,zero
 1441688:	003ecd06 	br	14411c0 <__alt_data_end+0xfffdb9c0>
 144168c:	da012a17 	ldw	r8,1192(sp)
 1441690:	df012a15 	stw	fp,1192(sp)
 1441694:	9f000414 	ori	fp,r19,16
 1441698:	e0c0080c 	andi	r3,fp,32
 144169c:	d8812d17 	ldw	r2,1204(sp)
 14416a0:	18002c26 	beq	r3,zero,1441754 <___vfprintf_internal_r+0xb18>
 14416a4:	d9012d17 	ldw	r4,1204(sp)
 14416a8:	14800017 	ldw	r18,0(r2)
 14416ac:	15400117 	ldw	r21,4(r2)
 14416b0:	21000204 	addi	r4,r4,8
 14416b4:	d9012d15 	stw	r4,1204(sp)
 14416b8:	00800044 	movi	r2,1
 14416bc:	9546b03a 	or	r3,r18,r21
 14416c0:	003fee06 	br	144167c <__alt_data_end+0xfffdbe7c>
 14416c4:	da012a17 	ldw	r8,1192(sp)
 14416c8:	df012a15 	stw	fp,1192(sp)
 14416cc:	9839883a 	mov	fp,r19
 14416d0:	dcc12b03 	ldbu	r19,1196(sp)
 14416d4:	01405174 	movhi	r5,325
 14416d8:	29422604 	addi	r5,r5,2200
 14416dc:	dcc12785 	stb	r19,1182(sp)
 14416e0:	d9413b15 	stw	r5,1260(sp)
 14416e4:	e0c0080c 	andi	r3,fp,32
 14416e8:	d8812d17 	ldw	r2,1204(sp)
 14416ec:	18002e26 	beq	r3,zero,14417a8 <___vfprintf_internal_r+0xb6c>
 14416f0:	d9412d17 	ldw	r5,1204(sp)
 14416f4:	14800017 	ldw	r18,0(r2)
 14416f8:	15400117 	ldw	r21,4(r2)
 14416fc:	29400204 	addi	r5,r5,8
 1441700:	d9412d15 	stw	r5,1204(sp)
 1441704:	e080004c 	andi	r2,fp,1
 1441708:	10025c26 	beq	r2,zero,144207c <___vfprintf_internal_r+0x1440>
 144170c:	9546b03a 	or	r3,r18,r21
 1441710:	18038f26 	beq	r3,zero,1442550 <___vfprintf_internal_r+0x1914>
 1441714:	00800c04 	movi	r2,48
 1441718:	d8812705 	stb	r2,1180(sp)
 144171c:	dc012745 	stb	r16,1181(sp)
 1441720:	e7000094 	ori	fp,fp,2
 1441724:	00800084 	movi	r2,2
 1441728:	003fd406 	br	144167c <__alt_data_end+0xfffdbe7c>
 144172c:	9cc00814 	ori	r19,r19,32
 1441730:	e005883a 	mov	r2,fp
 1441734:	e4000007 	ldb	r16,0(fp)
 1441738:	003da806 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 144173c:	da012a17 	ldw	r8,1192(sp)
 1441740:	df012a15 	stw	fp,1192(sp)
 1441744:	9839883a 	mov	fp,r19
 1441748:	e0c0080c 	andi	r3,fp,32
 144174c:	d8812d17 	ldw	r2,1204(sp)
 1441750:	183fd41e 	bne	r3,zero,14416a4 <__alt_data_end+0xfffdbea4>
 1441754:	e0c0040c 	andi	r3,fp,16
 1441758:	18035f26 	beq	r3,zero,14424d8 <___vfprintf_internal_r+0x189c>
 144175c:	d9412d17 	ldw	r5,1204(sp)
 1441760:	14800017 	ldw	r18,0(r2)
 1441764:	002b883a 	mov	r21,zero
 1441768:	29400104 	addi	r5,r5,4
 144176c:	d9412d15 	stw	r5,1204(sp)
 1441770:	00800044 	movi	r2,1
 1441774:	9007883a 	mov	r3,r18
 1441778:	003fc006 	br	144167c <__alt_data_end+0xfffdbe7c>
 144177c:	da012a17 	ldw	r8,1192(sp)
 1441780:	df012a15 	stw	fp,1192(sp)
 1441784:	9839883a 	mov	fp,r19
 1441788:	dcc12b03 	ldbu	r19,1196(sp)
 144178c:	01005174 	movhi	r4,325
 1441790:	21022b04 	addi	r4,r4,2220
 1441794:	d9013b15 	stw	r4,1260(sp)
 1441798:	dcc12785 	stb	r19,1182(sp)
 144179c:	e0c0080c 	andi	r3,fp,32
 14417a0:	d8812d17 	ldw	r2,1204(sp)
 14417a4:	183fd21e 	bne	r3,zero,14416f0 <__alt_data_end+0xfffdbef0>
 14417a8:	e0c0040c 	andi	r3,fp,16
 14417ac:	18035426 	beq	r3,zero,1442500 <___vfprintf_internal_r+0x18c4>
 14417b0:	d8c12d17 	ldw	r3,1204(sp)
 14417b4:	14800017 	ldw	r18,0(r2)
 14417b8:	002b883a 	mov	r21,zero
 14417bc:	18c00104 	addi	r3,r3,4
 14417c0:	d8c12d15 	stw	r3,1204(sp)
 14417c4:	003fcf06 	br	1441704 <__alt_data_end+0xfffdbf04>
 14417c8:	e4000007 	ldb	r16,0(fp)
 14417cc:	00801b04 	movi	r2,108
 14417d0:	8083f726 	beq	r16,r2,14427b0 <___vfprintf_internal_r+0x1b74>
 14417d4:	9cc00414 	ori	r19,r19,16
 14417d8:	e005883a 	mov	r2,fp
 14417dc:	003d7f06 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 14417e0:	da012a17 	ldw	r8,1192(sp)
 14417e4:	df012a15 	stw	fp,1192(sp)
 14417e8:	9839883a 	mov	fp,r19
 14417ec:	dcc12b03 	ldbu	r19,1196(sp)
 14417f0:	e080080c 	andi	r2,fp,32
 14417f4:	dcc12785 	stb	r19,1182(sp)
 14417f8:	10032226 	beq	r2,zero,1442484 <___vfprintf_internal_r+0x1848>
 14417fc:	d9412d17 	ldw	r5,1204(sp)
 1441800:	d9012f17 	ldw	r4,1212(sp)
 1441804:	28800017 	ldw	r2,0(r5)
 1441808:	2007d7fa 	srai	r3,r4,31
 144180c:	29400104 	addi	r5,r5,4
 1441810:	d9412d15 	stw	r5,1204(sp)
 1441814:	11000015 	stw	r4,0(r2)
 1441818:	10c00115 	stw	r3,4(r2)
 144181c:	003d4406 	br	1440d30 <__alt_data_end+0xfffdb530>
 1441820:	da012a17 	ldw	r8,1192(sp)
 1441824:	df012a15 	stw	fp,1192(sp)
 1441828:	9839883a 	mov	fp,r19
 144182c:	e0c0080c 	andi	r3,fp,32
 1441830:	d8812d17 	ldw	r2,1204(sp)
 1441834:	183f8a1e 	bne	r3,zero,1441660 <__alt_data_end+0xfffdbe60>
 1441838:	e0c0040c 	andi	r3,fp,16
 144183c:	18031c26 	beq	r3,zero,14424b0 <___vfprintf_internal_r+0x1874>
 1441840:	14800017 	ldw	r18,0(r2)
 1441844:	d8812d17 	ldw	r2,1204(sp)
 1441848:	002b883a 	mov	r21,zero
 144184c:	9007883a 	mov	r3,r18
 1441850:	10800104 	addi	r2,r2,4
 1441854:	d8812d15 	stw	r2,1204(sp)
 1441858:	0005883a 	mov	r2,zero
 144185c:	003f8706 	br	144167c <__alt_data_end+0xfffdbe7c>
 1441860:	d9412d17 	ldw	r5,1204(sp)
 1441864:	00800c04 	movi	r2,48
 1441868:	d8812705 	stb	r2,1180(sp)
 144186c:	2c800017 	ldw	r18,0(r5)
 1441870:	00801e04 	movi	r2,120
 1441874:	d8812745 	stb	r2,1181(sp)
 1441878:	00805174 	movhi	r2,325
 144187c:	10822b04 	addi	r2,r2,2220
 1441880:	29400104 	addi	r5,r5,4
 1441884:	da012a17 	ldw	r8,1192(sp)
 1441888:	d8813b15 	stw	r2,1260(sp)
 144188c:	df012a15 	stw	fp,1192(sp)
 1441890:	002b883a 	mov	r21,zero
 1441894:	9f000094 	ori	fp,r19,2
 1441898:	d9412d15 	stw	r5,1204(sp)
 144189c:	00800084 	movi	r2,2
 14418a0:	04001e04 	movi	r16,120
 14418a4:	9007883a 	mov	r3,r18
 14418a8:	003f7406 	br	144167c <__alt_data_end+0xfffdbe7c>
 14418ac:	da012a17 	ldw	r8,1192(sp)
 14418b0:	df012a15 	stw	fp,1192(sp)
 14418b4:	9839883a 	mov	fp,r19
 14418b8:	dcc12b03 	ldbu	r19,1196(sp)
 14418bc:	e080080c 	andi	r2,fp,32
 14418c0:	d8c12d17 	ldw	r3,1204(sp)
 14418c4:	dcc12785 	stb	r19,1182(sp)
 14418c8:	103e321e 	bne	r2,zero,1441194 <__alt_data_end+0xfffdb994>
 14418cc:	e080040c 	andi	r2,fp,16
 14418d0:	10031326 	beq	r2,zero,1442520 <___vfprintf_internal_r+0x18e4>
 14418d4:	1c800017 	ldw	r18,0(r3)
 14418d8:	d9412d17 	ldw	r5,1204(sp)
 14418dc:	902bd7fa 	srai	r21,r18,31
 14418e0:	29400104 	addi	r5,r5,4
 14418e4:	d9412d15 	stw	r5,1204(sp)
 14418e8:	a805883a 	mov	r2,r21
 14418ec:	003e2f06 	br	14411ac <__alt_data_end+0xfffdb9ac>
 14418f0:	9cc01014 	ori	r19,r19,64
 14418f4:	e005883a 	mov	r2,fp
 14418f8:	e4000007 	ldb	r16,0(fp)
 14418fc:	003d3706 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 1441900:	d8c12d17 	ldw	r3,1204(sp)
 1441904:	d9012d17 	ldw	r4,1204(sp)
 1441908:	da012a17 	ldw	r8,1192(sp)
 144190c:	18800017 	ldw	r2,0(r3)
 1441910:	21000104 	addi	r4,r4,4
 1441914:	00c00044 	movi	r3,1
 1441918:	df012a15 	stw	fp,1192(sp)
 144191c:	d8c12b15 	stw	r3,1196(sp)
 1441920:	9839883a 	mov	fp,r19
 1441924:	d8012785 	stb	zero,1182(sp)
 1441928:	d8810405 	stb	r2,1040(sp)
 144192c:	d9012d15 	stw	r4,1204(sp)
 1441930:	1823883a 	mov	r17,r3
 1441934:	d8c10404 	addi	r3,sp,1040
 1441938:	d8013215 	stw	zero,1224(sp)
 144193c:	d8013415 	stw	zero,1232(sp)
 1441940:	d8c13115 	stw	r3,1220(sp)
 1441944:	0005883a 	mov	r2,zero
 1441948:	003e4306 	br	1441258 <__alt_data_end+0xfffdba58>
 144194c:	d8812b07 	ldb	r2,1196(sp)
 1441950:	1002fc1e 	bne	r2,zero,1442544 <___vfprintf_internal_r+0x1908>
 1441954:	00c00804 	movi	r3,32
 1441958:	d8c12b05 	stb	r3,1196(sp)
 144195c:	e005883a 	mov	r2,fp
 1441960:	e4000007 	ldb	r16,0(fp)
 1441964:	003d1d06 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 1441968:	9cc00054 	ori	r19,r19,1
 144196c:	e005883a 	mov	r2,fp
 1441970:	e4000007 	ldb	r16,0(fp)
 1441974:	003d1906 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 1441978:	d9012d17 	ldw	r4,1204(sp)
 144197c:	d9412d17 	ldw	r5,1204(sp)
 1441980:	21000017 	ldw	r4,0(r4)
 1441984:	28c00104 	addi	r3,r5,4
 1441988:	d9012e15 	stw	r4,1208(sp)
 144198c:	20038c16 	blt	r4,zero,14427c0 <___vfprintf_internal_r+0x1b84>
 1441990:	d8c12d15 	stw	r3,1204(sp)
 1441994:	e005883a 	mov	r2,fp
 1441998:	e4000007 	ldb	r16,0(fp)
 144199c:	003d0f06 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 14419a0:	00c00ac4 	movi	r3,43
 14419a4:	d8c12b05 	stb	r3,1196(sp)
 14419a8:	e005883a 	mov	r2,fp
 14419ac:	e4000007 	ldb	r16,0(fp)
 14419b0:	003d0a06 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 14419b4:	d8c12d17 	ldw	r3,1204(sp)
 14419b8:	d9012d17 	ldw	r4,1204(sp)
 14419bc:	da012a17 	ldw	r8,1192(sp)
 14419c0:	18c00017 	ldw	r3,0(r3)
 14419c4:	df012a15 	stw	fp,1192(sp)
 14419c8:	d8012785 	stb	zero,1182(sp)
 14419cc:	d8c13115 	stw	r3,1220(sp)
 14419d0:	9839883a 	mov	fp,r19
 14419d4:	24800104 	addi	r18,r4,4
 14419d8:	1803f726 	beq	r3,zero,14429b8 <___vfprintf_internal_r+0x1d7c>
 14419dc:	d9013117 	ldw	r4,1220(sp)
 14419e0:	48038916 	blt	r9,zero,1442808 <___vfprintf_internal_r+0x1bcc>
 14419e4:	480d883a 	mov	r6,r9
 14419e8:	000b883a 	mov	r5,zero
 14419ec:	da013f15 	stw	r8,1276(sp)
 14419f0:	da413e15 	stw	r9,1272(sp)
 14419f4:	14462500 	call	1446250 <memchr>
 14419f8:	da013f17 	ldw	r8,1276(sp)
 14419fc:	da413e17 	ldw	r9,1272(sp)
 1441a00:	10045926 	beq	r2,zero,1442b68 <___vfprintf_internal_r+0x1f2c>
 1441a04:	d8c13117 	ldw	r3,1220(sp)
 1441a08:	10e3c83a 	sub	r17,r2,r3
 1441a0c:	4c433516 	blt	r9,r17,14426e4 <___vfprintf_internal_r+0x1aa8>
 1441a10:	8805883a 	mov	r2,r17
 1441a14:	88038116 	blt	r17,zero,144281c <___vfprintf_internal_r+0x1be0>
 1441a18:	dcc12783 	ldbu	r19,1182(sp)
 1441a1c:	d8812b15 	stw	r2,1196(sp)
 1441a20:	dc812d15 	stw	r18,1204(sp)
 1441a24:	d8013215 	stw	zero,1224(sp)
 1441a28:	d8013415 	stw	zero,1232(sp)
 1441a2c:	003e0306 	br	144123c <__alt_data_end+0xfffdba3c>
 1441a30:	da012a17 	ldw	r8,1192(sp)
 1441a34:	df012a15 	stw	fp,1192(sp)
 1441a38:	9839883a 	mov	fp,r19
 1441a3c:	dcc12b03 	ldbu	r19,1196(sp)
 1441a40:	dcc12785 	stb	r19,1182(sp)
 1441a44:	803d8f26 	beq	r16,zero,1441084 <__alt_data_end+0xfffdb884>
 1441a48:	00c00044 	movi	r3,1
 1441a4c:	d8c12b15 	stw	r3,1196(sp)
 1441a50:	dc010405 	stb	r16,1040(sp)
 1441a54:	d8012785 	stb	zero,1182(sp)
 1441a58:	003fb506 	br	1441930 <__alt_data_end+0xfffdc130>
 1441a5c:	d8c12017 	ldw	r3,1152(sp)
 1441a60:	003e3506 	br	1441338 <__alt_data_end+0xfffdbb38>
 1441a64:	10803fcc 	andi	r2,r2,255
 1441a68:	00c00044 	movi	r3,1
 1441a6c:	10fddc1e 	bne	r2,r3,14411e0 <__alt_data_end+0xfffdb9e0>
 1441a70:	a800021e 	bne	r21,zero,1441a7c <___vfprintf_internal_r+0xe40>
 1441a74:	00800244 	movi	r2,9
 1441a78:	14801e2e 	bgeu	r2,r18,1441af4 <___vfprintf_internal_r+0xeb8>
 1441a7c:	dc012b15 	stw	r16,1196(sp)
 1441a80:	dc410e04 	addi	r17,sp,1080
 1441a84:	9021883a 	mov	r16,r18
 1441a88:	da012c15 	stw	r8,1200(sp)
 1441a8c:	a825883a 	mov	r18,r21
 1441a90:	482b883a 	mov	r21,r9
 1441a94:	8009883a 	mov	r4,r16
 1441a98:	900b883a 	mov	r5,r18
 1441a9c:	01800284 	movi	r6,10
 1441aa0:	000f883a 	mov	r7,zero
 1441aa4:	144a4680 	call	144a468 <__umoddi3>
 1441aa8:	10800c04 	addi	r2,r2,48
 1441aac:	8c7fffc4 	addi	r17,r17,-1
 1441ab0:	8009883a 	mov	r4,r16
 1441ab4:	900b883a 	mov	r5,r18
 1441ab8:	01800284 	movi	r6,10
 1441abc:	000f883a 	mov	r7,zero
 1441ac0:	88800005 	stb	r2,0(r17)
 1441ac4:	1449e280 	call	1449e28 <__udivdi3>
 1441ac8:	1021883a 	mov	r16,r2
 1441acc:	10c4b03a 	or	r2,r2,r3
 1441ad0:	1825883a 	mov	r18,r3
 1441ad4:	103fef1e 	bne	r2,zero,1441a94 <__alt_data_end+0xfffdc294>
 1441ad8:	d9012817 	ldw	r4,1184(sp)
 1441adc:	dc413115 	stw	r17,1220(sp)
 1441ae0:	dc012b17 	ldw	r16,1196(sp)
 1441ae4:	da012c17 	ldw	r8,1200(sp)
 1441ae8:	a813883a 	mov	r9,r21
 1441aec:	2463c83a 	sub	r17,r4,r17
 1441af0:	003dcd06 	br	1441228 <__alt_data_end+0xfffdba28>
 1441af4:	94800c04 	addi	r18,r18,48
 1441af8:	d8c10dc4 	addi	r3,sp,1079
 1441afc:	dc810dc5 	stb	r18,1079(sp)
 1441b00:	dc413c17 	ldw	r17,1264(sp)
 1441b04:	d8c13115 	stw	r3,1220(sp)
 1441b08:	003dc706 	br	1441228 <__alt_data_end+0xfffdba28>
 1441b0c:	00801944 	movi	r2,101
 1441b10:	1400720e 	bge	r2,r16,1441cdc <___vfprintf_internal_r+0x10a0>
 1441b14:	d9013717 	ldw	r4,1244(sp)
 1441b18:	d9413917 	ldw	r5,1252(sp)
 1441b1c:	000d883a 	mov	r6,zero
 1441b20:	000f883a 	mov	r7,zero
 1441b24:	d8c13d15 	stw	r3,1268(sp)
 1441b28:	da013f15 	stw	r8,1276(sp)
 1441b2c:	144bdcc0 	call	144bdcc <__eqdf2>
 1441b30:	d8c13d17 	ldw	r3,1268(sp)
 1441b34:	da013f17 	ldw	r8,1276(sp)
 1441b38:	1000f41e 	bne	r2,zero,1441f0c <___vfprintf_internal_r+0x12d0>
 1441b3c:	d8811f17 	ldw	r2,1148(sp)
 1441b40:	01005174 	movhi	r4,325
 1441b44:	21023204 	addi	r4,r4,2248
 1441b48:	18c00044 	addi	r3,r3,1
 1441b4c:	10800044 	addi	r2,r2,1
 1441b50:	41000015 	stw	r4,0(r8)
 1441b54:	01000044 	movi	r4,1
 1441b58:	41000115 	stw	r4,4(r8)
 1441b5c:	d8c12015 	stw	r3,1152(sp)
 1441b60:	d8811f15 	stw	r2,1148(sp)
 1441b64:	010001c4 	movi	r4,7
 1441b68:	20828d16 	blt	r4,r2,14425a0 <___vfprintf_internal_r+0x1964>
 1441b6c:	42000204 	addi	r8,r8,8
 1441b70:	d8812617 	ldw	r2,1176(sp)
 1441b74:	d9413317 	ldw	r5,1228(sp)
 1441b78:	11400216 	blt	r2,r5,1441b84 <___vfprintf_internal_r+0xf48>
 1441b7c:	e080004c 	andi	r2,fp,1
 1441b80:	103e4126 	beq	r2,zero,1441488 <__alt_data_end+0xfffdbc88>
 1441b84:	d8813817 	ldw	r2,1248(sp)
 1441b88:	d9013517 	ldw	r4,1236(sp)
 1441b8c:	d9413817 	ldw	r5,1248(sp)
 1441b90:	1887883a 	add	r3,r3,r2
 1441b94:	d8811f17 	ldw	r2,1148(sp)
 1441b98:	41000015 	stw	r4,0(r8)
 1441b9c:	41400115 	stw	r5,4(r8)
 1441ba0:	10800044 	addi	r2,r2,1
 1441ba4:	d8c12015 	stw	r3,1152(sp)
 1441ba8:	d8811f15 	stw	r2,1148(sp)
 1441bac:	010001c4 	movi	r4,7
 1441bb0:	20830916 	blt	r4,r2,14427d8 <___vfprintf_internal_r+0x1b9c>
 1441bb4:	42000204 	addi	r8,r8,8
 1441bb8:	d8813317 	ldw	r2,1228(sp)
 1441bbc:	143fffc4 	addi	r16,r2,-1
 1441bc0:	043e310e 	bge	zero,r16,1441488 <__alt_data_end+0xfffdbc88>
 1441bc4:	04400404 	movi	r17,16
 1441bc8:	d8811f17 	ldw	r2,1148(sp)
 1441bcc:	8c007e0e 	bge	r17,r16,1441dc8 <___vfprintf_internal_r+0x118c>
 1441bd0:	01405174 	movhi	r5,325
 1441bd4:	29423284 	addi	r5,r5,2250
 1441bd8:	d9412c15 	stw	r5,1200(sp)
 1441bdc:	04c001c4 	movi	r19,7
 1441be0:	00000306 	br	1441bf0 <___vfprintf_internal_r+0xfb4>
 1441be4:	42000204 	addi	r8,r8,8
 1441be8:	843ffc04 	addi	r16,r16,-16
 1441bec:	8c00790e 	bge	r17,r16,1441dd4 <___vfprintf_internal_r+0x1198>
 1441bf0:	18c00404 	addi	r3,r3,16
 1441bf4:	10800044 	addi	r2,r2,1
 1441bf8:	45000015 	stw	r20,0(r8)
 1441bfc:	44400115 	stw	r17,4(r8)
 1441c00:	d8c12015 	stw	r3,1152(sp)
 1441c04:	d8811f15 	stw	r2,1148(sp)
 1441c08:	98bff60e 	bge	r19,r2,1441be4 <__alt_data_end+0xfffdc3e4>
 1441c0c:	b809883a 	mov	r4,r23
 1441c10:	b00b883a 	mov	r5,r22
 1441c14:	d9811e04 	addi	r6,sp,1144
 1441c18:	144807c0 	call	144807c <__sprint_r>
 1441c1c:	103d1f1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441c20:	d8c12017 	ldw	r3,1152(sp)
 1441c24:	d8811f17 	ldw	r2,1148(sp)
 1441c28:	da000404 	addi	r8,sp,16
 1441c2c:	003fee06 	br	1441be8 <__alt_data_end+0xfffdc3e8>
 1441c30:	d9412e17 	ldw	r5,1208(sp)
 1441c34:	d8812b17 	ldw	r2,1196(sp)
 1441c38:	28a7c83a 	sub	r19,r5,r2
 1441c3c:	04fddc0e 	bge	zero,r19,14413b0 <__alt_data_end+0xfffdbbb0>
 1441c40:	05400404 	movi	r21,16
 1441c44:	d8811f17 	ldw	r2,1148(sp)
 1441c48:	acc3870e 	bge	r21,r19,1442a68 <___vfprintf_internal_r+0x1e2c>
 1441c4c:	01405174 	movhi	r5,325
 1441c50:	29423284 	addi	r5,r5,2250
 1441c54:	d9412c15 	stw	r5,1200(sp)
 1441c58:	048001c4 	movi	r18,7
 1441c5c:	00000306 	br	1441c6c <___vfprintf_internal_r+0x1030>
 1441c60:	9cfffc04 	addi	r19,r19,-16
 1441c64:	42000204 	addi	r8,r8,8
 1441c68:	acc0110e 	bge	r21,r19,1441cb0 <___vfprintf_internal_r+0x1074>
 1441c6c:	18c00404 	addi	r3,r3,16
 1441c70:	10800044 	addi	r2,r2,1
 1441c74:	45000015 	stw	r20,0(r8)
 1441c78:	45400115 	stw	r21,4(r8)
 1441c7c:	d8c12015 	stw	r3,1152(sp)
 1441c80:	d8811f15 	stw	r2,1148(sp)
 1441c84:	90bff60e 	bge	r18,r2,1441c60 <__alt_data_end+0xfffdc460>
 1441c88:	b809883a 	mov	r4,r23
 1441c8c:	b00b883a 	mov	r5,r22
 1441c90:	d9811e04 	addi	r6,sp,1144
 1441c94:	144807c0 	call	144807c <__sprint_r>
 1441c98:	103d001e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441c9c:	9cfffc04 	addi	r19,r19,-16
 1441ca0:	d8c12017 	ldw	r3,1152(sp)
 1441ca4:	d8811f17 	ldw	r2,1148(sp)
 1441ca8:	da000404 	addi	r8,sp,16
 1441cac:	acffef16 	blt	r21,r19,1441c6c <__alt_data_end+0xfffdc46c>
 1441cb0:	d9012c17 	ldw	r4,1200(sp)
 1441cb4:	1cc7883a 	add	r3,r3,r19
 1441cb8:	10800044 	addi	r2,r2,1
 1441cbc:	41000015 	stw	r4,0(r8)
 1441cc0:	44c00115 	stw	r19,4(r8)
 1441cc4:	d8c12015 	stw	r3,1152(sp)
 1441cc8:	d8811f15 	stw	r2,1148(sp)
 1441ccc:	010001c4 	movi	r4,7
 1441cd0:	20817816 	blt	r4,r2,14422b4 <___vfprintf_internal_r+0x1678>
 1441cd4:	42000204 	addi	r8,r8,8
 1441cd8:	003db506 	br	14413b0 <__alt_data_end+0xfffdbbb0>
 1441cdc:	d9413317 	ldw	r5,1228(sp)
 1441ce0:	00800044 	movi	r2,1
 1441ce4:	18c00044 	addi	r3,r3,1
 1441ce8:	11413e0e 	bge	r2,r5,14421e4 <___vfprintf_internal_r+0x15a8>
 1441cec:	dc011f17 	ldw	r16,1148(sp)
 1441cf0:	d8813117 	ldw	r2,1220(sp)
 1441cf4:	d8c12015 	stw	r3,1152(sp)
 1441cf8:	84000044 	addi	r16,r16,1
 1441cfc:	40800015 	stw	r2,0(r8)
 1441d00:	00800044 	movi	r2,1
 1441d04:	40800115 	stw	r2,4(r8)
 1441d08:	dc011f15 	stw	r16,1148(sp)
 1441d0c:	008001c4 	movi	r2,7
 1441d10:	14015616 	blt	r2,r16,144226c <___vfprintf_internal_r+0x1630>
 1441d14:	42000204 	addi	r8,r8,8
 1441d18:	d9013817 	ldw	r4,1248(sp)
 1441d1c:	d9413517 	ldw	r5,1236(sp)
 1441d20:	84000044 	addi	r16,r16,1
 1441d24:	1907883a 	add	r3,r3,r4
 1441d28:	41400015 	stw	r5,0(r8)
 1441d2c:	41000115 	stw	r4,4(r8)
 1441d30:	d8c12015 	stw	r3,1152(sp)
 1441d34:	dc011f15 	stw	r16,1148(sp)
 1441d38:	008001c4 	movi	r2,7
 1441d3c:	14015416 	blt	r2,r16,1442290 <___vfprintf_internal_r+0x1654>
 1441d40:	44400204 	addi	r17,r8,8
 1441d44:	d9013717 	ldw	r4,1244(sp)
 1441d48:	d9413917 	ldw	r5,1252(sp)
 1441d4c:	000d883a 	mov	r6,zero
 1441d50:	000f883a 	mov	r7,zero
 1441d54:	d8c13d15 	stw	r3,1268(sp)
 1441d58:	144bdcc0 	call	144bdcc <__eqdf2>
 1441d5c:	d8c13d17 	ldw	r3,1268(sp)
 1441d60:	1000a726 	beq	r2,zero,1442000 <___vfprintf_internal_r+0x13c4>
 1441d64:	d9013317 	ldw	r4,1228(sp)
 1441d68:	d9413117 	ldw	r5,1220(sp)
 1441d6c:	84000044 	addi	r16,r16,1
 1441d70:	20bfffc4 	addi	r2,r4,-1
 1441d74:	1887883a 	add	r3,r3,r2
 1441d78:	29000044 	addi	r4,r5,1
 1441d7c:	88800115 	stw	r2,4(r17)
 1441d80:	89000015 	stw	r4,0(r17)
 1441d84:	d8c12015 	stw	r3,1152(sp)
 1441d88:	dc011f15 	stw	r16,1148(sp)
 1441d8c:	008001c4 	movi	r2,7
 1441d90:	14012d16 	blt	r2,r16,1442248 <___vfprintf_internal_r+0x160c>
 1441d94:	8c400204 	addi	r17,r17,8
 1441d98:	d9413a17 	ldw	r5,1256(sp)
 1441d9c:	dcc122c4 	addi	r19,sp,1163
 1441da0:	84000044 	addi	r16,r16,1
 1441da4:	28c7883a 	add	r3,r5,r3
 1441da8:	8cc00015 	stw	r19,0(r17)
 1441dac:	89400115 	stw	r5,4(r17)
 1441db0:	d8c12015 	stw	r3,1152(sp)
 1441db4:	dc011f15 	stw	r16,1148(sp)
 1441db8:	008001c4 	movi	r2,7
 1441dbc:	14000e16 	blt	r2,r16,1441df8 <___vfprintf_internal_r+0x11bc>
 1441dc0:	8a000204 	addi	r8,r17,8
 1441dc4:	003db006 	br	1441488 <__alt_data_end+0xfffdbc88>
 1441dc8:	01005174 	movhi	r4,325
 1441dcc:	21023284 	addi	r4,r4,2250
 1441dd0:	d9012c15 	stw	r4,1200(sp)
 1441dd4:	d9012c17 	ldw	r4,1200(sp)
 1441dd8:	1c07883a 	add	r3,r3,r16
 1441ddc:	44000115 	stw	r16,4(r8)
 1441de0:	41000015 	stw	r4,0(r8)
 1441de4:	10800044 	addi	r2,r2,1
 1441de8:	d8c12015 	stw	r3,1152(sp)
 1441dec:	d8811f15 	stw	r2,1148(sp)
 1441df0:	010001c4 	movi	r4,7
 1441df4:	20bda30e 	bge	r4,r2,1441484 <__alt_data_end+0xfffdbc84>
 1441df8:	b809883a 	mov	r4,r23
 1441dfc:	b00b883a 	mov	r5,r22
 1441e00:	d9811e04 	addi	r6,sp,1144
 1441e04:	144807c0 	call	144807c <__sprint_r>
 1441e08:	103ca41e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441e0c:	d8c12017 	ldw	r3,1152(sp)
 1441e10:	da000404 	addi	r8,sp,16
 1441e14:	003d9c06 	br	1441488 <__alt_data_end+0xfffdbc88>
 1441e18:	b809883a 	mov	r4,r23
 1441e1c:	b00b883a 	mov	r5,r22
 1441e20:	d9811e04 	addi	r6,sp,1144
 1441e24:	144807c0 	call	144807c <__sprint_r>
 1441e28:	103dd226 	beq	r2,zero,1441574 <__alt_data_end+0xfffdbd74>
 1441e2c:	003c9b06 	br	144109c <__alt_data_end+0xfffdb89c>
 1441e30:	10803fcc 	andi	r2,r2,255
 1441e34:	1000311e 	bne	r2,zero,1441efc <___vfprintf_internal_r+0x12c0>
 1441e38:	e080004c 	andi	r2,fp,1
 1441e3c:	10002f26 	beq	r2,zero,1441efc <___vfprintf_internal_r+0x12c0>
 1441e40:	00800c04 	movi	r2,48
 1441e44:	d8c10dc4 	addi	r3,sp,1079
 1441e48:	d8810dc5 	stb	r2,1079(sp)
 1441e4c:	dc413c17 	ldw	r17,1264(sp)
 1441e50:	d8c13115 	stw	r3,1220(sp)
 1441e54:	003cf406 	br	1441228 <__alt_data_end+0xfffdba28>
 1441e58:	b809883a 	mov	r4,r23
 1441e5c:	b00b883a 	mov	r5,r22
 1441e60:	d9811e04 	addi	r6,sp,1144
 1441e64:	144807c0 	call	144807c <__sprint_r>
 1441e68:	103c8c1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441e6c:	d8c12017 	ldw	r3,1152(sp)
 1441e70:	da000404 	addi	r8,sp,16
 1441e74:	003d7706 	br	1441454 <__alt_data_end+0xfffdbc54>
 1441e78:	b809883a 	mov	r4,r23
 1441e7c:	b00b883a 	mov	r5,r22
 1441e80:	d9811e04 	addi	r6,sp,1144
 1441e84:	144807c0 	call	144807c <__sprint_r>
 1441e88:	103c841e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441e8c:	d8c12017 	ldw	r3,1152(sp)
 1441e90:	da000404 	addi	r8,sp,16
 1441e94:	003d3506 	br	144136c <__alt_data_end+0xfffdbb6c>
 1441e98:	b809883a 	mov	r4,r23
 1441e9c:	b00b883a 	mov	r5,r22
 1441ea0:	d9811e04 	addi	r6,sp,1144
 1441ea4:	144807c0 	call	144807c <__sprint_r>
 1441ea8:	103c7c1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441eac:	d8c12017 	ldw	r3,1152(sp)
 1441eb0:	da000404 	addi	r8,sp,16
 1441eb4:	003d3b06 	br	14413a4 <__alt_data_end+0xfffdbba4>
 1441eb8:	d9413b17 	ldw	r5,1260(sp)
 1441ebc:	d8c10e04 	addi	r3,sp,1080
 1441ec0:	908003cc 	andi	r2,r18,15
 1441ec4:	a808973a 	slli	r4,r21,28
 1441ec8:	2885883a 	add	r2,r5,r2
 1441ecc:	9024d13a 	srli	r18,r18,4
 1441ed0:	10800003 	ldbu	r2,0(r2)
 1441ed4:	a82ad13a 	srli	r21,r21,4
 1441ed8:	18ffffc4 	addi	r3,r3,-1
 1441edc:	24a4b03a 	or	r18,r4,r18
 1441ee0:	18800005 	stb	r2,0(r3)
 1441ee4:	9544b03a 	or	r2,r18,r21
 1441ee8:	103ff51e 	bne	r2,zero,1441ec0 <__alt_data_end+0xfffdc6c0>
 1441eec:	d9412817 	ldw	r5,1184(sp)
 1441ef0:	d8c13115 	stw	r3,1220(sp)
 1441ef4:	28e3c83a 	sub	r17,r5,r3
 1441ef8:	003ccb06 	br	1441228 <__alt_data_end+0xfffdba28>
 1441efc:	d8c10e04 	addi	r3,sp,1080
 1441f00:	0023883a 	mov	r17,zero
 1441f04:	d8c13115 	stw	r3,1220(sp)
 1441f08:	003cc706 	br	1441228 <__alt_data_end+0xfffdba28>
 1441f0c:	dc012617 	ldw	r16,1176(sp)
 1441f10:	0401ab0e 	bge	zero,r16,14425c0 <___vfprintf_internal_r+0x1984>
 1441f14:	d8813317 	ldw	r2,1228(sp)
 1441f18:	d9413117 	ldw	r5,1220(sp)
 1441f1c:	d9013417 	ldw	r4,1232(sp)
 1441f20:	1023883a 	mov	r17,r2
 1441f24:	28a1883a 	add	r16,r5,r2
 1441f28:	2080010e 	bge	r4,r2,1441f30 <___vfprintf_internal_r+0x12f4>
 1441f2c:	2023883a 	mov	r17,r4
 1441f30:	04400b0e 	bge	zero,r17,1441f60 <___vfprintf_internal_r+0x1324>
 1441f34:	d8811f17 	ldw	r2,1148(sp)
 1441f38:	d9413117 	ldw	r5,1220(sp)
 1441f3c:	1c47883a 	add	r3,r3,r17
 1441f40:	10800044 	addi	r2,r2,1
 1441f44:	41400015 	stw	r5,0(r8)
 1441f48:	44400115 	stw	r17,4(r8)
 1441f4c:	d8c12015 	stw	r3,1152(sp)
 1441f50:	d8811f15 	stw	r2,1148(sp)
 1441f54:	010001c4 	movi	r4,7
 1441f58:	20826716 	blt	r4,r2,14428f8 <___vfprintf_internal_r+0x1cbc>
 1441f5c:	42000204 	addi	r8,r8,8
 1441f60:	88026316 	blt	r17,zero,14428f0 <___vfprintf_internal_r+0x1cb4>
 1441f64:	d8813417 	ldw	r2,1232(sp)
 1441f68:	1463c83a 	sub	r17,r2,r17
 1441f6c:	0440590e 	bge	zero,r17,14420d4 <___vfprintf_internal_r+0x1498>
 1441f70:	04c00404 	movi	r19,16
 1441f74:	d8811f17 	ldw	r2,1148(sp)
 1441f78:	9c41770e 	bge	r19,r17,1442558 <___vfprintf_internal_r+0x191c>
 1441f7c:	01405174 	movhi	r5,325
 1441f80:	29423284 	addi	r5,r5,2250
 1441f84:	d9412c15 	stw	r5,1200(sp)
 1441f88:	054001c4 	movi	r21,7
 1441f8c:	00000306 	br	1441f9c <___vfprintf_internal_r+0x1360>
 1441f90:	42000204 	addi	r8,r8,8
 1441f94:	8c7ffc04 	addi	r17,r17,-16
 1441f98:	9c41720e 	bge	r19,r17,1442564 <___vfprintf_internal_r+0x1928>
 1441f9c:	18c00404 	addi	r3,r3,16
 1441fa0:	10800044 	addi	r2,r2,1
 1441fa4:	45000015 	stw	r20,0(r8)
 1441fa8:	44c00115 	stw	r19,4(r8)
 1441fac:	d8c12015 	stw	r3,1152(sp)
 1441fb0:	d8811f15 	stw	r2,1148(sp)
 1441fb4:	a8bff60e 	bge	r21,r2,1441f90 <__alt_data_end+0xfffdc790>
 1441fb8:	b809883a 	mov	r4,r23
 1441fbc:	b00b883a 	mov	r5,r22
 1441fc0:	d9811e04 	addi	r6,sp,1144
 1441fc4:	144807c0 	call	144807c <__sprint_r>
 1441fc8:	103c341e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441fcc:	d8c12017 	ldw	r3,1152(sp)
 1441fd0:	d8811f17 	ldw	r2,1148(sp)
 1441fd4:	da000404 	addi	r8,sp,16
 1441fd8:	003fee06 	br	1441f94 <__alt_data_end+0xfffdc794>
 1441fdc:	b809883a 	mov	r4,r23
 1441fe0:	b00b883a 	mov	r5,r22
 1441fe4:	d9811e04 	addi	r6,sp,1144
 1441fe8:	144807c0 	call	144807c <__sprint_r>
 1441fec:	103c2b1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1441ff0:	d8c12017 	ldw	r3,1152(sp)
 1441ff4:	d8812787 	ldb	r2,1182(sp)
 1441ff8:	da000404 	addi	r8,sp,16
 1441ffc:	003cce06 	br	1441338 <__alt_data_end+0xfffdbb38>
 1442000:	d8813317 	ldw	r2,1228(sp)
 1442004:	14ffffc4 	addi	r19,r2,-1
 1442008:	04ff630e 	bge	zero,r19,1441d98 <__alt_data_end+0xfffdc598>
 144200c:	05400404 	movi	r21,16
 1442010:	acc0810e 	bge	r21,r19,1442218 <___vfprintf_internal_r+0x15dc>
 1442014:	01405174 	movhi	r5,325
 1442018:	29423284 	addi	r5,r5,2250
 144201c:	d9412c15 	stw	r5,1200(sp)
 1442020:	01c001c4 	movi	r7,7
 1442024:	00000306 	br	1442034 <___vfprintf_internal_r+0x13f8>
 1442028:	8c400204 	addi	r17,r17,8
 144202c:	9cfffc04 	addi	r19,r19,-16
 1442030:	acc07c0e 	bge	r21,r19,1442224 <___vfprintf_internal_r+0x15e8>
 1442034:	18c00404 	addi	r3,r3,16
 1442038:	84000044 	addi	r16,r16,1
 144203c:	8d000015 	stw	r20,0(r17)
 1442040:	8d400115 	stw	r21,4(r17)
 1442044:	d8c12015 	stw	r3,1152(sp)
 1442048:	dc011f15 	stw	r16,1148(sp)
 144204c:	3c3ff60e 	bge	r7,r16,1442028 <__alt_data_end+0xfffdc828>
 1442050:	b809883a 	mov	r4,r23
 1442054:	b00b883a 	mov	r5,r22
 1442058:	d9811e04 	addi	r6,sp,1144
 144205c:	d9c13d15 	stw	r7,1268(sp)
 1442060:	144807c0 	call	144807c <__sprint_r>
 1442064:	d9c13d17 	ldw	r7,1268(sp)
 1442068:	103c0c1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 144206c:	d8c12017 	ldw	r3,1152(sp)
 1442070:	dc011f17 	ldw	r16,1148(sp)
 1442074:	dc400404 	addi	r17,sp,16
 1442078:	003fec06 	br	144202c <__alt_data_end+0xfffdc82c>
 144207c:	00800084 	movi	r2,2
 1442080:	9546b03a 	or	r3,r18,r21
 1442084:	003d7d06 	br	144167c <__alt_data_end+0xfffdbe7c>
 1442088:	10803fcc 	andi	r2,r2,255
 144208c:	1080201c 	xori	r2,r2,128
 1442090:	10bfe004 	addi	r2,r2,-128
 1442094:	01000c04 	movi	r4,48
 1442098:	1101d726 	beq	r2,r4,14427f8 <___vfprintf_internal_r+0x1bbc>
 144209c:	d9413117 	ldw	r5,1220(sp)
 14420a0:	d8812817 	ldw	r2,1184(sp)
 14420a4:	193fffc5 	stb	r4,-1(r3)
 14420a8:	297fffc4 	addi	r5,r5,-1
 14420ac:	d9413115 	stw	r5,1220(sp)
 14420b0:	1163c83a 	sub	r17,r2,r5
 14420b4:	003c5c06 	br	1441228 <__alt_data_end+0xfffdba28>
 14420b8:	b809883a 	mov	r4,r23
 14420bc:	b00b883a 	mov	r5,r22
 14420c0:	d9811e04 	addi	r6,sp,1144
 14420c4:	144807c0 	call	144807c <__sprint_r>
 14420c8:	103bf41e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 14420cc:	d8c12017 	ldw	r3,1152(sp)
 14420d0:	da000404 	addi	r8,sp,16
 14420d4:	d9413117 	ldw	r5,1220(sp)
 14420d8:	d9013417 	ldw	r4,1232(sp)
 14420dc:	d8812617 	ldw	r2,1176(sp)
 14420e0:	2923883a 	add	r17,r5,r4
 14420e4:	d9413317 	ldw	r5,1228(sp)
 14420e8:	11400216 	blt	r2,r5,14420f4 <___vfprintf_internal_r+0x14b8>
 14420ec:	e100004c 	andi	r4,fp,1
 14420f0:	20000d26 	beq	r4,zero,1442128 <___vfprintf_internal_r+0x14ec>
 14420f4:	d9013817 	ldw	r4,1248(sp)
 14420f8:	d9413517 	ldw	r5,1236(sp)
 14420fc:	1907883a 	add	r3,r3,r4
 1442100:	d9011f17 	ldw	r4,1148(sp)
 1442104:	41400015 	stw	r5,0(r8)
 1442108:	d9413817 	ldw	r5,1248(sp)
 144210c:	21000044 	addi	r4,r4,1
 1442110:	d8c12015 	stw	r3,1152(sp)
 1442114:	41400115 	stw	r5,4(r8)
 1442118:	d9011f15 	stw	r4,1148(sp)
 144211c:	014001c4 	movi	r5,7
 1442120:	2901fd16 	blt	r5,r4,1442918 <___vfprintf_internal_r+0x1cdc>
 1442124:	42000204 	addi	r8,r8,8
 1442128:	d9013317 	ldw	r4,1228(sp)
 144212c:	2085c83a 	sub	r2,r4,r2
 1442130:	8449c83a 	sub	r4,r16,r17
 1442134:	1021883a 	mov	r16,r2
 1442138:	2080010e 	bge	r4,r2,1442140 <___vfprintf_internal_r+0x1504>
 144213c:	2021883a 	mov	r16,r4
 1442140:	04000a0e 	bge	zero,r16,144216c <___vfprintf_internal_r+0x1530>
 1442144:	d9011f17 	ldw	r4,1148(sp)
 1442148:	1c07883a 	add	r3,r3,r16
 144214c:	44400015 	stw	r17,0(r8)
 1442150:	21000044 	addi	r4,r4,1
 1442154:	44000115 	stw	r16,4(r8)
 1442158:	d8c12015 	stw	r3,1152(sp)
 144215c:	d9011f15 	stw	r4,1148(sp)
 1442160:	014001c4 	movi	r5,7
 1442164:	29020916 	blt	r5,r4,144298c <___vfprintf_internal_r+0x1d50>
 1442168:	42000204 	addi	r8,r8,8
 144216c:	80020116 	blt	r16,zero,1442974 <___vfprintf_internal_r+0x1d38>
 1442170:	1421c83a 	sub	r16,r2,r16
 1442174:	043cc40e 	bge	zero,r16,1441488 <__alt_data_end+0xfffdbc88>
 1442178:	04400404 	movi	r17,16
 144217c:	d8811f17 	ldw	r2,1148(sp)
 1442180:	8c3f110e 	bge	r17,r16,1441dc8 <__alt_data_end+0xfffdc5c8>
 1442184:	01405174 	movhi	r5,325
 1442188:	29423284 	addi	r5,r5,2250
 144218c:	d9412c15 	stw	r5,1200(sp)
 1442190:	04c001c4 	movi	r19,7
 1442194:	00000306 	br	14421a4 <___vfprintf_internal_r+0x1568>
 1442198:	42000204 	addi	r8,r8,8
 144219c:	843ffc04 	addi	r16,r16,-16
 14421a0:	8c3f0c0e 	bge	r17,r16,1441dd4 <__alt_data_end+0xfffdc5d4>
 14421a4:	18c00404 	addi	r3,r3,16
 14421a8:	10800044 	addi	r2,r2,1
 14421ac:	45000015 	stw	r20,0(r8)
 14421b0:	44400115 	stw	r17,4(r8)
 14421b4:	d8c12015 	stw	r3,1152(sp)
 14421b8:	d8811f15 	stw	r2,1148(sp)
 14421bc:	98bff60e 	bge	r19,r2,1442198 <__alt_data_end+0xfffdc998>
 14421c0:	b809883a 	mov	r4,r23
 14421c4:	b00b883a 	mov	r5,r22
 14421c8:	d9811e04 	addi	r6,sp,1144
 14421cc:	144807c0 	call	144807c <__sprint_r>
 14421d0:	103bb21e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 14421d4:	d8c12017 	ldw	r3,1152(sp)
 14421d8:	d8811f17 	ldw	r2,1148(sp)
 14421dc:	da000404 	addi	r8,sp,16
 14421e0:	003fee06 	br	144219c <__alt_data_end+0xfffdc99c>
 14421e4:	e088703a 	and	r4,fp,r2
 14421e8:	203ec01e 	bne	r4,zero,1441cec <__alt_data_end+0xfffdc4ec>
 14421ec:	dc011f17 	ldw	r16,1148(sp)
 14421f0:	d9013117 	ldw	r4,1220(sp)
 14421f4:	40800115 	stw	r2,4(r8)
 14421f8:	84000044 	addi	r16,r16,1
 14421fc:	41000015 	stw	r4,0(r8)
 1442200:	d8c12015 	stw	r3,1152(sp)
 1442204:	dc011f15 	stw	r16,1148(sp)
 1442208:	008001c4 	movi	r2,7
 144220c:	14000e16 	blt	r2,r16,1442248 <___vfprintf_internal_r+0x160c>
 1442210:	44400204 	addi	r17,r8,8
 1442214:	003ee006 	br	1441d98 <__alt_data_end+0xfffdc598>
 1442218:	01005174 	movhi	r4,325
 144221c:	21023284 	addi	r4,r4,2250
 1442220:	d9012c15 	stw	r4,1200(sp)
 1442224:	d8812c17 	ldw	r2,1200(sp)
 1442228:	1cc7883a 	add	r3,r3,r19
 144222c:	84000044 	addi	r16,r16,1
 1442230:	88800015 	stw	r2,0(r17)
 1442234:	8cc00115 	stw	r19,4(r17)
 1442238:	d8c12015 	stw	r3,1152(sp)
 144223c:	dc011f15 	stw	r16,1148(sp)
 1442240:	008001c4 	movi	r2,7
 1442244:	143ed30e 	bge	r2,r16,1441d94 <__alt_data_end+0xfffdc594>
 1442248:	b809883a 	mov	r4,r23
 144224c:	b00b883a 	mov	r5,r22
 1442250:	d9811e04 	addi	r6,sp,1144
 1442254:	144807c0 	call	144807c <__sprint_r>
 1442258:	103b901e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 144225c:	d8c12017 	ldw	r3,1152(sp)
 1442260:	dc011f17 	ldw	r16,1148(sp)
 1442264:	dc400404 	addi	r17,sp,16
 1442268:	003ecb06 	br	1441d98 <__alt_data_end+0xfffdc598>
 144226c:	b809883a 	mov	r4,r23
 1442270:	b00b883a 	mov	r5,r22
 1442274:	d9811e04 	addi	r6,sp,1144
 1442278:	144807c0 	call	144807c <__sprint_r>
 144227c:	103b871e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1442280:	d8c12017 	ldw	r3,1152(sp)
 1442284:	dc011f17 	ldw	r16,1148(sp)
 1442288:	da000404 	addi	r8,sp,16
 144228c:	003ea206 	br	1441d18 <__alt_data_end+0xfffdc518>
 1442290:	b809883a 	mov	r4,r23
 1442294:	b00b883a 	mov	r5,r22
 1442298:	d9811e04 	addi	r6,sp,1144
 144229c:	144807c0 	call	144807c <__sprint_r>
 14422a0:	103b7e1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 14422a4:	d8c12017 	ldw	r3,1152(sp)
 14422a8:	dc011f17 	ldw	r16,1148(sp)
 14422ac:	dc400404 	addi	r17,sp,16
 14422b0:	003ea406 	br	1441d44 <__alt_data_end+0xfffdc544>
 14422b4:	b809883a 	mov	r4,r23
 14422b8:	b00b883a 	mov	r5,r22
 14422bc:	d9811e04 	addi	r6,sp,1144
 14422c0:	144807c0 	call	144807c <__sprint_r>
 14422c4:	103b751e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 14422c8:	d8c12017 	ldw	r3,1152(sp)
 14422cc:	da000404 	addi	r8,sp,16
 14422d0:	003c3706 	br	14413b0 <__alt_data_end+0xfffdbbb0>
 14422d4:	04a5c83a 	sub	r18,zero,r18
 14422d8:	9004c03a 	cmpne	r2,r18,zero
 14422dc:	056bc83a 	sub	r21,zero,r21
 14422e0:	a8abc83a 	sub	r21,r21,r2
 14422e4:	04c00b44 	movi	r19,45
 14422e8:	dcc12785 	stb	r19,1182(sp)
 14422ec:	da413215 	stw	r9,1224(sp)
 14422f0:	00800044 	movi	r2,1
 14422f4:	9546b03a 	or	r3,r18,r21
 14422f8:	003bb106 	br	14411c0 <__alt_data_end+0xfffdb9c0>
 14422fc:	da013f15 	stw	r8,1276(sp)
 1442300:	da413e15 	stw	r9,1272(sp)
 1442304:	1447cd80 	call	1447cd8 <__fpclassifyd>
 1442308:	da013f17 	ldw	r8,1276(sp)
 144230c:	da413e17 	ldw	r9,1272(sp)
 1442310:	1000e526 	beq	r2,zero,14426a8 <___vfprintf_internal_r+0x1a6c>
 1442314:	04fff7c4 	movi	r19,-33
 1442318:	00bfffc4 	movi	r2,-1
 144231c:	84e6703a 	and	r19,r16,r19
 1442320:	48822926 	beq	r9,r2,1442bc8 <___vfprintf_internal_r+0x1f8c>
 1442324:	008011c4 	movi	r2,71
 1442328:	98821626 	beq	r19,r2,1442b84 <___vfprintf_internal_r+0x1f48>
 144232c:	d9013917 	ldw	r4,1252(sp)
 1442330:	e0c04014 	ori	r3,fp,256
 1442334:	d8c12d15 	stw	r3,1204(sp)
 1442338:	20021f16 	blt	r4,zero,1442bb8 <___vfprintf_internal_r+0x1f7c>
 144233c:	dc413917 	ldw	r17,1252(sp)
 1442340:	d8012b05 	stb	zero,1196(sp)
 1442344:	00801984 	movi	r2,102
 1442348:	80814d26 	beq	r16,r2,1442880 <___vfprintf_internal_r+0x1c44>
 144234c:	00801184 	movi	r2,70
 1442350:	80814b26 	beq	r16,r2,1442880 <___vfprintf_internal_r+0x1c44>
 1442354:	00801144 	movi	r2,69
 1442358:	98821d26 	beq	r19,r2,1442bd0 <___vfprintf_internal_r+0x1f94>
 144235c:	482b883a 	mov	r21,r9
 1442360:	d8812604 	addi	r2,sp,1176
 1442364:	d8800115 	stw	r2,4(sp)
 1442368:	d9413717 	ldw	r5,1244(sp)
 144236c:	d8812504 	addi	r2,sp,1172
 1442370:	d8800215 	stw	r2,8(sp)
 1442374:	d8812104 	addi	r2,sp,1156
 1442378:	dd400015 	stw	r21,0(sp)
 144237c:	d8800315 	stw	r2,12(sp)
 1442380:	b809883a 	mov	r4,r23
 1442384:	880d883a 	mov	r6,r17
 1442388:	01c00084 	movi	r7,2
 144238c:	da013f15 	stw	r8,1276(sp)
 1442390:	da413e15 	stw	r9,1272(sp)
 1442394:	14430b40 	call	14430b4 <_dtoa_r>
 1442398:	d8813115 	stw	r2,1220(sp)
 144239c:	008019c4 	movi	r2,103
 14423a0:	da013f17 	ldw	r8,1276(sp)
 14423a4:	da413e17 	ldw	r9,1272(sp)
 14423a8:	80800226 	beq	r16,r2,14423b4 <___vfprintf_internal_r+0x1778>
 14423ac:	008011c4 	movi	r2,71
 14423b0:	8081451e 	bne	r16,r2,14428c8 <___vfprintf_internal_r+0x1c8c>
 14423b4:	e080004c 	andi	r2,fp,1
 14423b8:	10021e26 	beq	r2,zero,1442c34 <___vfprintf_internal_r+0x1ff8>
 14423bc:	d8c13117 	ldw	r3,1220(sp)
 14423c0:	1d55883a 	add	r10,r3,r21
 14423c4:	d9013717 	ldw	r4,1244(sp)
 14423c8:	880b883a 	mov	r5,r17
 14423cc:	000d883a 	mov	r6,zero
 14423d0:	000f883a 	mov	r7,zero
 14423d4:	da013f15 	stw	r8,1276(sp)
 14423d8:	da413e15 	stw	r9,1272(sp)
 14423dc:	da813d15 	stw	r10,1268(sp)
 14423e0:	144bdcc0 	call	144bdcc <__eqdf2>
 14423e4:	da013f17 	ldw	r8,1276(sp)
 14423e8:	da413e17 	ldw	r9,1272(sp)
 14423ec:	da813d17 	ldw	r10,1268(sp)
 14423f0:	1001a126 	beq	r2,zero,1442a78 <___vfprintf_internal_r+0x1e3c>
 14423f4:	d8812117 	ldw	r2,1156(sp)
 14423f8:	1280062e 	bgeu	r2,r10,1442414 <___vfprintf_internal_r+0x17d8>
 14423fc:	01000c04 	movi	r4,48
 1442400:	10c00044 	addi	r3,r2,1
 1442404:	d8c12115 	stw	r3,1156(sp)
 1442408:	11000005 	stb	r4,0(r2)
 144240c:	d8812117 	ldw	r2,1156(sp)
 1442410:	12bffb36 	bltu	r2,r10,1442400 <__alt_data_end+0xfffdcc00>
 1442414:	d8c13117 	ldw	r3,1220(sp)
 1442418:	10c5c83a 	sub	r2,r2,r3
 144241c:	d8813315 	stw	r2,1228(sp)
 1442420:	008011c4 	movi	r2,71
 1442424:	98818926 	beq	r19,r2,1442a4c <___vfprintf_internal_r+0x1e10>
 1442428:	00801944 	movi	r2,101
 144242c:	14023c0e 	bge	r2,r16,1442d20 <___vfprintf_internal_r+0x20e4>
 1442430:	d8c12617 	ldw	r3,1176(sp)
 1442434:	00801984 	movi	r2,102
 1442438:	d8c13415 	stw	r3,1232(sp)
 144243c:	8081ef26 	beq	r16,r2,1442bfc <___vfprintf_internal_r+0x1fc0>
 1442440:	d8c13417 	ldw	r3,1232(sp)
 1442444:	d9013317 	ldw	r4,1228(sp)
 1442448:	1901e316 	blt	r3,r4,1442bd8 <___vfprintf_internal_r+0x1f9c>
 144244c:	e080004c 	andi	r2,fp,1
 1442450:	1001f426 	beq	r2,zero,1442c24 <___vfprintf_internal_r+0x1fe8>
 1442454:	d8c13417 	ldw	r3,1232(sp)
 1442458:	1c400044 	addi	r17,r3,1
 144245c:	8839883a 	mov	fp,r17
 1442460:	8801e416 	blt	r17,zero,1442bf4 <___vfprintf_internal_r+0x1fb8>
 1442464:	dd412b07 	ldb	r21,1196(sp)
 1442468:	a801701e 	bne	r21,zero,1442a2c <___vfprintf_internal_r+0x1df0>
 144246c:	df012b15 	stw	fp,1196(sp)
 1442470:	dcc12783 	ldbu	r19,1182(sp)
 1442474:	df012d17 	ldw	fp,1204(sp)
 1442478:	d8013215 	stw	zero,1224(sp)
 144247c:	dc812d15 	stw	r18,1204(sp)
 1442480:	003b6e06 	br	144123c <__alt_data_end+0xfffdba3c>
 1442484:	e080040c 	andi	r2,fp,16
 1442488:	1000b51e 	bne	r2,zero,1442760 <___vfprintf_internal_r+0x1b24>
 144248c:	e080100c 	andi	r2,fp,64
 1442490:	10015b26 	beq	r2,zero,1442a00 <___vfprintf_internal_r+0x1dc4>
 1442494:	d9012d17 	ldw	r4,1204(sp)
 1442498:	d9412f17 	ldw	r5,1212(sp)
 144249c:	20800017 	ldw	r2,0(r4)
 14424a0:	21000104 	addi	r4,r4,4
 14424a4:	d9012d15 	stw	r4,1204(sp)
 14424a8:	1140000d 	sth	r5,0(r2)
 14424ac:	003a2006 	br	1440d30 <__alt_data_end+0xfffdb530>
 14424b0:	e0c0100c 	andi	r3,fp,64
 14424b4:	1800a226 	beq	r3,zero,1442740 <___vfprintf_internal_r+0x1b04>
 14424b8:	d8c12d17 	ldw	r3,1204(sp)
 14424bc:	1480000b 	ldhu	r18,0(r2)
 14424c0:	002b883a 	mov	r21,zero
 14424c4:	18c00104 	addi	r3,r3,4
 14424c8:	d8c12d15 	stw	r3,1204(sp)
 14424cc:	0005883a 	mov	r2,zero
 14424d0:	9007883a 	mov	r3,r18
 14424d4:	003c6906 	br	144167c <__alt_data_end+0xfffdbe7c>
 14424d8:	e0c0100c 	andi	r3,fp,64
 14424dc:	18009026 	beq	r3,zero,1442720 <___vfprintf_internal_r+0x1ae4>
 14424e0:	1480000b 	ldhu	r18,0(r2)
 14424e4:	d8812d17 	ldw	r2,1204(sp)
 14424e8:	002b883a 	mov	r21,zero
 14424ec:	9007883a 	mov	r3,r18
 14424f0:	10800104 	addi	r2,r2,4
 14424f4:	d8812d15 	stw	r2,1204(sp)
 14424f8:	00800044 	movi	r2,1
 14424fc:	003c5f06 	br	144167c <__alt_data_end+0xfffdbe7c>
 1442500:	e0c0100c 	andi	r3,fp,64
 1442504:	18008026 	beq	r3,zero,1442708 <___vfprintf_internal_r+0x1acc>
 1442508:	d9012d17 	ldw	r4,1204(sp)
 144250c:	1480000b 	ldhu	r18,0(r2)
 1442510:	002b883a 	mov	r21,zero
 1442514:	21000104 	addi	r4,r4,4
 1442518:	d9012d15 	stw	r4,1204(sp)
 144251c:	003c7906 	br	1441704 <__alt_data_end+0xfffdbf04>
 1442520:	e080100c 	andi	r2,fp,64
 1442524:	10007126 	beq	r2,zero,14426ec <___vfprintf_internal_r+0x1ab0>
 1442528:	1c80000f 	ldh	r18,0(r3)
 144252c:	d8812d17 	ldw	r2,1204(sp)
 1442530:	902bd7fa 	srai	r21,r18,31
 1442534:	10800104 	addi	r2,r2,4
 1442538:	d8812d15 	stw	r2,1204(sp)
 144253c:	a805883a 	mov	r2,r21
 1442540:	003b1a06 	br	14411ac <__alt_data_end+0xfffdb9ac>
 1442544:	e4000007 	ldb	r16,0(fp)
 1442548:	e005883a 	mov	r2,fp
 144254c:	003a2306 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 1442550:	00800084 	movi	r2,2
 1442554:	003c4906 	br	144167c <__alt_data_end+0xfffdbe7c>
 1442558:	01005174 	movhi	r4,325
 144255c:	21023284 	addi	r4,r4,2250
 1442560:	d9012c15 	stw	r4,1200(sp)
 1442564:	d9012c17 	ldw	r4,1200(sp)
 1442568:	1c47883a 	add	r3,r3,r17
 144256c:	10800044 	addi	r2,r2,1
 1442570:	41000015 	stw	r4,0(r8)
 1442574:	44400115 	stw	r17,4(r8)
 1442578:	d8c12015 	stw	r3,1152(sp)
 144257c:	d8811f15 	stw	r2,1148(sp)
 1442580:	010001c4 	movi	r4,7
 1442584:	20becc16 	blt	r4,r2,14420b8 <__alt_data_end+0xfffdc8b8>
 1442588:	42000204 	addi	r8,r8,8
 144258c:	003ed106 	br	14420d4 <__alt_data_end+0xfffdc8d4>
 1442590:	01005174 	movhi	r4,325
 1442594:	21023284 	addi	r4,r4,2250
 1442598:	d9012c15 	stw	r4,1200(sp)
 144259c:	003ba306 	br	144142c <__alt_data_end+0xfffdbc2c>
 14425a0:	b809883a 	mov	r4,r23
 14425a4:	b00b883a 	mov	r5,r22
 14425a8:	d9811e04 	addi	r6,sp,1144
 14425ac:	144807c0 	call	144807c <__sprint_r>
 14425b0:	103aba1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 14425b4:	d8c12017 	ldw	r3,1152(sp)
 14425b8:	da000404 	addi	r8,sp,16
 14425bc:	003d6c06 	br	1441b70 <__alt_data_end+0xfffdc370>
 14425c0:	d8811f17 	ldw	r2,1148(sp)
 14425c4:	01405174 	movhi	r5,325
 14425c8:	01000044 	movi	r4,1
 14425cc:	18c00044 	addi	r3,r3,1
 14425d0:	10800044 	addi	r2,r2,1
 14425d4:	29423204 	addi	r5,r5,2248
 14425d8:	41000115 	stw	r4,4(r8)
 14425dc:	41400015 	stw	r5,0(r8)
 14425e0:	d8c12015 	stw	r3,1152(sp)
 14425e4:	d8811f15 	stw	r2,1148(sp)
 14425e8:	010001c4 	movi	r4,7
 14425ec:	20806716 	blt	r4,r2,144278c <___vfprintf_internal_r+0x1b50>
 14425f0:	42000204 	addi	r8,r8,8
 14425f4:	8000041e 	bne	r16,zero,1442608 <___vfprintf_internal_r+0x19cc>
 14425f8:	d8813317 	ldw	r2,1228(sp)
 14425fc:	1000021e 	bne	r2,zero,1442608 <___vfprintf_internal_r+0x19cc>
 1442600:	e080004c 	andi	r2,fp,1
 1442604:	103ba026 	beq	r2,zero,1441488 <__alt_data_end+0xfffdbc88>
 1442608:	d9013817 	ldw	r4,1248(sp)
 144260c:	d8811f17 	ldw	r2,1148(sp)
 1442610:	d9413517 	ldw	r5,1236(sp)
 1442614:	1907883a 	add	r3,r3,r4
 1442618:	10800044 	addi	r2,r2,1
 144261c:	41000115 	stw	r4,4(r8)
 1442620:	41400015 	stw	r5,0(r8)
 1442624:	d8c12015 	stw	r3,1152(sp)
 1442628:	d8811f15 	stw	r2,1148(sp)
 144262c:	010001c4 	movi	r4,7
 1442630:	20815716 	blt	r4,r2,1442b90 <___vfprintf_internal_r+0x1f54>
 1442634:	42000204 	addi	r8,r8,8
 1442638:	0421c83a 	sub	r16,zero,r16
 144263c:	0400810e 	bge	zero,r16,1442844 <___vfprintf_internal_r+0x1c08>
 1442640:	04400404 	movi	r17,16
 1442644:	8c00bd0e 	bge	r17,r16,144293c <___vfprintf_internal_r+0x1d00>
 1442648:	01405174 	movhi	r5,325
 144264c:	29423284 	addi	r5,r5,2250
 1442650:	d9412c15 	stw	r5,1200(sp)
 1442654:	04c001c4 	movi	r19,7
 1442658:	00000306 	br	1442668 <___vfprintf_internal_r+0x1a2c>
 144265c:	42000204 	addi	r8,r8,8
 1442660:	843ffc04 	addi	r16,r16,-16
 1442664:	8c00b80e 	bge	r17,r16,1442948 <___vfprintf_internal_r+0x1d0c>
 1442668:	18c00404 	addi	r3,r3,16
 144266c:	10800044 	addi	r2,r2,1
 1442670:	45000015 	stw	r20,0(r8)
 1442674:	44400115 	stw	r17,4(r8)
 1442678:	d8c12015 	stw	r3,1152(sp)
 144267c:	d8811f15 	stw	r2,1148(sp)
 1442680:	98bff60e 	bge	r19,r2,144265c <__alt_data_end+0xfffdce5c>
 1442684:	b809883a 	mov	r4,r23
 1442688:	b00b883a 	mov	r5,r22
 144268c:	d9811e04 	addi	r6,sp,1144
 1442690:	144807c0 	call	144807c <__sprint_r>
 1442694:	103a811e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1442698:	d8c12017 	ldw	r3,1152(sp)
 144269c:	d8811f17 	ldw	r2,1148(sp)
 14426a0:	da000404 	addi	r8,sp,16
 14426a4:	003fee06 	br	1442660 <__alt_data_end+0xfffdce60>
 14426a8:	008011c4 	movi	r2,71
 14426ac:	1400db16 	blt	r2,r16,1442a1c <___vfprintf_internal_r+0x1de0>
 14426b0:	01005174 	movhi	r4,325
 14426b4:	21022404 	addi	r4,r4,2192
 14426b8:	d9013115 	stw	r4,1220(sp)
 14426bc:	00c000c4 	movi	r3,3
 14426c0:	00bfdfc4 	movi	r2,-129
 14426c4:	d8c12b15 	stw	r3,1196(sp)
 14426c8:	e0b8703a 	and	fp,fp,r2
 14426cc:	dcc12783 	ldbu	r19,1182(sp)
 14426d0:	dc812d15 	stw	r18,1204(sp)
 14426d4:	1823883a 	mov	r17,r3
 14426d8:	d8013215 	stw	zero,1224(sp)
 14426dc:	d8013415 	stw	zero,1232(sp)
 14426e0:	003ad606 	br	144123c <__alt_data_end+0xfffdba3c>
 14426e4:	4823883a 	mov	r17,r9
 14426e8:	003cc906 	br	1441a10 <__alt_data_end+0xfffdc210>
 14426ec:	1c800017 	ldw	r18,0(r3)
 14426f0:	d8c12d17 	ldw	r3,1204(sp)
 14426f4:	902bd7fa 	srai	r21,r18,31
 14426f8:	18c00104 	addi	r3,r3,4
 14426fc:	d8c12d15 	stw	r3,1204(sp)
 1442700:	a805883a 	mov	r2,r21
 1442704:	003aa906 	br	14411ac <__alt_data_end+0xfffdb9ac>
 1442708:	d9412d17 	ldw	r5,1204(sp)
 144270c:	14800017 	ldw	r18,0(r2)
 1442710:	002b883a 	mov	r21,zero
 1442714:	29400104 	addi	r5,r5,4
 1442718:	d9412d15 	stw	r5,1204(sp)
 144271c:	003bf906 	br	1441704 <__alt_data_end+0xfffdbf04>
 1442720:	d8c12d17 	ldw	r3,1204(sp)
 1442724:	14800017 	ldw	r18,0(r2)
 1442728:	002b883a 	mov	r21,zero
 144272c:	18c00104 	addi	r3,r3,4
 1442730:	d8c12d15 	stw	r3,1204(sp)
 1442734:	00800044 	movi	r2,1
 1442738:	9007883a 	mov	r3,r18
 144273c:	003bcf06 	br	144167c <__alt_data_end+0xfffdbe7c>
 1442740:	d9012d17 	ldw	r4,1204(sp)
 1442744:	14800017 	ldw	r18,0(r2)
 1442748:	002b883a 	mov	r21,zero
 144274c:	21000104 	addi	r4,r4,4
 1442750:	d9012d15 	stw	r4,1204(sp)
 1442754:	0005883a 	mov	r2,zero
 1442758:	9007883a 	mov	r3,r18
 144275c:	003bc706 	br	144167c <__alt_data_end+0xfffdbe7c>
 1442760:	d9412d17 	ldw	r5,1204(sp)
 1442764:	d8c12f17 	ldw	r3,1212(sp)
 1442768:	28800017 	ldw	r2,0(r5)
 144276c:	29400104 	addi	r5,r5,4
 1442770:	d9412d15 	stw	r5,1204(sp)
 1442774:	10c00015 	stw	r3,0(r2)
 1442778:	00396d06 	br	1440d30 <__alt_data_end+0xfffdb530>
 144277c:	01005174 	movhi	r4,325
 1442780:	21022204 	addi	r4,r4,2184
 1442784:	d9013115 	stw	r4,1220(sp)
 1442788:	003ba206 	br	1441614 <__alt_data_end+0xfffdbe14>
 144278c:	b809883a 	mov	r4,r23
 1442790:	b00b883a 	mov	r5,r22
 1442794:	d9811e04 	addi	r6,sp,1144
 1442798:	144807c0 	call	144807c <__sprint_r>
 144279c:	103a3f1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 14427a0:	dc012617 	ldw	r16,1176(sp)
 14427a4:	d8c12017 	ldw	r3,1152(sp)
 14427a8:	da000404 	addi	r8,sp,16
 14427ac:	003f9106 	br	14425f4 <__alt_data_end+0xfffdcdf4>
 14427b0:	e0800044 	addi	r2,fp,1
 14427b4:	9cc00814 	ori	r19,r19,32
 14427b8:	e4000047 	ldb	r16,1(fp)
 14427bc:	00398706 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 14427c0:	d8812e17 	ldw	r2,1208(sp)
 14427c4:	d8c12d15 	stw	r3,1204(sp)
 14427c8:	0085c83a 	sub	r2,zero,r2
 14427cc:	d8812e15 	stw	r2,1208(sp)
 14427d0:	e005883a 	mov	r2,fp
 14427d4:	003a3a06 	br	14410c0 <__alt_data_end+0xfffdb8c0>
 14427d8:	b809883a 	mov	r4,r23
 14427dc:	b00b883a 	mov	r5,r22
 14427e0:	d9811e04 	addi	r6,sp,1144
 14427e4:	144807c0 	call	144807c <__sprint_r>
 14427e8:	103a2c1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 14427ec:	d8c12017 	ldw	r3,1152(sp)
 14427f0:	da000404 	addi	r8,sp,16
 14427f4:	003cf006 	br	1441bb8 <__alt_data_end+0xfffdc3b8>
 14427f8:	d8c12817 	ldw	r3,1184(sp)
 14427fc:	d9013117 	ldw	r4,1220(sp)
 1442800:	1923c83a 	sub	r17,r3,r4
 1442804:	003a8806 	br	1441228 <__alt_data_end+0xfffdba28>
 1442808:	da013f15 	stw	r8,1276(sp)
 144280c:	1440ba40 	call	1440ba4 <strlen>
 1442810:	1023883a 	mov	r17,r2
 1442814:	da013f17 	ldw	r8,1276(sp)
 1442818:	883c7f0e 	bge	r17,zero,1441a18 <__alt_data_end+0xfffdc218>
 144281c:	0005883a 	mov	r2,zero
 1442820:	003c7d06 	br	1441a18 <__alt_data_end+0xfffdc218>
 1442824:	b809883a 	mov	r4,r23
 1442828:	b00b883a 	mov	r5,r22
 144282c:	d9811e04 	addi	r6,sp,1144
 1442830:	144807c0 	call	144807c <__sprint_r>
 1442834:	103a191e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1442838:	d8c12017 	ldw	r3,1152(sp)
 144283c:	d8811f17 	ldw	r2,1148(sp)
 1442840:	da000404 	addi	r8,sp,16
 1442844:	d9413317 	ldw	r5,1228(sp)
 1442848:	d9013117 	ldw	r4,1220(sp)
 144284c:	10800044 	addi	r2,r2,1
 1442850:	28c7883a 	add	r3,r5,r3
 1442854:	41000015 	stw	r4,0(r8)
 1442858:	41400115 	stw	r5,4(r8)
 144285c:	d8c12015 	stw	r3,1152(sp)
 1442860:	d8811f15 	stw	r2,1148(sp)
 1442864:	010001c4 	movi	r4,7
 1442868:	20bb060e 	bge	r4,r2,1441484 <__alt_data_end+0xfffdbc84>
 144286c:	003d6206 	br	1441df8 <__alt_data_end+0xfffdc5f8>
 1442870:	01005174 	movhi	r4,325
 1442874:	21023684 	addi	r4,r4,2266
 1442878:	d9013615 	stw	r4,1240(sp)
 144287c:	003aa306 	br	144130c <__alt_data_end+0xfffdbb0c>
 1442880:	d8812604 	addi	r2,sp,1176
 1442884:	d8800115 	stw	r2,4(sp)
 1442888:	d9413717 	ldw	r5,1244(sp)
 144288c:	d8812504 	addi	r2,sp,1172
 1442890:	d8800215 	stw	r2,8(sp)
 1442894:	d8812104 	addi	r2,sp,1156
 1442898:	da400015 	stw	r9,0(sp)
 144289c:	d8800315 	stw	r2,12(sp)
 14428a0:	b809883a 	mov	r4,r23
 14428a4:	880d883a 	mov	r6,r17
 14428a8:	01c000c4 	movi	r7,3
 14428ac:	da013f15 	stw	r8,1276(sp)
 14428b0:	da413e15 	stw	r9,1272(sp)
 14428b4:	14430b40 	call	14430b4 <_dtoa_r>
 14428b8:	da413e17 	ldw	r9,1272(sp)
 14428bc:	da013f17 	ldw	r8,1276(sp)
 14428c0:	d8813115 	stw	r2,1220(sp)
 14428c4:	482b883a 	mov	r21,r9
 14428c8:	d8c13117 	ldw	r3,1220(sp)
 14428cc:	00801184 	movi	r2,70
 14428d0:	1d55883a 	add	r10,r3,r21
 14428d4:	98bebb1e 	bne	r19,r2,14423c4 <__alt_data_end+0xfffdcbc4>
 14428d8:	19000007 	ldb	r4,0(r3)
 14428dc:	00800c04 	movi	r2,48
 14428e0:	2080dd26 	beq	r4,r2,1442c58 <___vfprintf_internal_r+0x201c>
 14428e4:	d8c12617 	ldw	r3,1176(sp)
 14428e8:	50d5883a 	add	r10,r10,r3
 14428ec:	003eb506 	br	14423c4 <__alt_data_end+0xfffdcbc4>
 14428f0:	0023883a 	mov	r17,zero
 14428f4:	003d9b06 	br	1441f64 <__alt_data_end+0xfffdc764>
 14428f8:	b809883a 	mov	r4,r23
 14428fc:	b00b883a 	mov	r5,r22
 1442900:	d9811e04 	addi	r6,sp,1144
 1442904:	144807c0 	call	144807c <__sprint_r>
 1442908:	1039e41e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 144290c:	d8c12017 	ldw	r3,1152(sp)
 1442910:	da000404 	addi	r8,sp,16
 1442914:	003d9206 	br	1441f60 <__alt_data_end+0xfffdc760>
 1442918:	b809883a 	mov	r4,r23
 144291c:	b00b883a 	mov	r5,r22
 1442920:	d9811e04 	addi	r6,sp,1144
 1442924:	144807c0 	call	144807c <__sprint_r>
 1442928:	1039dc1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 144292c:	d8812617 	ldw	r2,1176(sp)
 1442930:	d8c12017 	ldw	r3,1152(sp)
 1442934:	da000404 	addi	r8,sp,16
 1442938:	003dfb06 	br	1442128 <__alt_data_end+0xfffdc928>
 144293c:	01005174 	movhi	r4,325
 1442940:	21023284 	addi	r4,r4,2250
 1442944:	d9012c15 	stw	r4,1200(sp)
 1442948:	d9012c17 	ldw	r4,1200(sp)
 144294c:	1c07883a 	add	r3,r3,r16
 1442950:	10800044 	addi	r2,r2,1
 1442954:	41000015 	stw	r4,0(r8)
 1442958:	44000115 	stw	r16,4(r8)
 144295c:	d8c12015 	stw	r3,1152(sp)
 1442960:	d8811f15 	stw	r2,1148(sp)
 1442964:	010001c4 	movi	r4,7
 1442968:	20bfae16 	blt	r4,r2,1442824 <__alt_data_end+0xfffdd024>
 144296c:	42000204 	addi	r8,r8,8
 1442970:	003fb406 	br	1442844 <__alt_data_end+0xfffdd044>
 1442974:	0021883a 	mov	r16,zero
 1442978:	003dfd06 	br	1442170 <__alt_data_end+0xfffdc970>
 144297c:	01405174 	movhi	r5,325
 1442980:	29423684 	addi	r5,r5,2266
 1442984:	d9413615 	stw	r5,1240(sp)
 1442988:	003ae306 	br	1441518 <__alt_data_end+0xfffdbd18>
 144298c:	b809883a 	mov	r4,r23
 1442990:	b00b883a 	mov	r5,r22
 1442994:	d9811e04 	addi	r6,sp,1144
 1442998:	144807c0 	call	144807c <__sprint_r>
 144299c:	1039bf1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 14429a0:	d8812617 	ldw	r2,1176(sp)
 14429a4:	d9413317 	ldw	r5,1228(sp)
 14429a8:	d8c12017 	ldw	r3,1152(sp)
 14429ac:	da000404 	addi	r8,sp,16
 14429b0:	2885c83a 	sub	r2,r5,r2
 14429b4:	003ded06 	br	144216c <__alt_data_end+0xfffdc96c>
 14429b8:	00800184 	movi	r2,6
 14429bc:	1240012e 	bgeu	r2,r9,14429c4 <___vfprintf_internal_r+0x1d88>
 14429c0:	1013883a 	mov	r9,r2
 14429c4:	4823883a 	mov	r17,r9
 14429c8:	4805883a 	mov	r2,r9
 14429cc:	4800b216 	blt	r9,zero,1442c98 <___vfprintf_internal_r+0x205c>
 14429d0:	01405174 	movhi	r5,325
 14429d4:	29423004 	addi	r5,r5,2240
 14429d8:	d8812b15 	stw	r2,1196(sp)
 14429dc:	dc812d15 	stw	r18,1204(sp)
 14429e0:	d8013215 	stw	zero,1224(sp)
 14429e4:	d8013415 	stw	zero,1232(sp)
 14429e8:	d9413115 	stw	r5,1220(sp)
 14429ec:	0005883a 	mov	r2,zero
 14429f0:	003a1906 	br	1441258 <__alt_data_end+0xfffdba58>
 14429f4:	04c00b44 	movi	r19,45
 14429f8:	dcc12785 	stb	r19,1182(sp)
 14429fc:	003b0006 	br	1441600 <__alt_data_end+0xfffdbe00>
 1442a00:	d8c12d17 	ldw	r3,1204(sp)
 1442a04:	d9012f17 	ldw	r4,1212(sp)
 1442a08:	18800017 	ldw	r2,0(r3)
 1442a0c:	18c00104 	addi	r3,r3,4
 1442a10:	d8c12d15 	stw	r3,1204(sp)
 1442a14:	11000015 	stw	r4,0(r2)
 1442a18:	0038c506 	br	1440d30 <__alt_data_end+0xfffdb530>
 1442a1c:	01405174 	movhi	r5,325
 1442a20:	29422504 	addi	r5,r5,2196
 1442a24:	d9413115 	stw	r5,1220(sp)
 1442a28:	003f2406 	br	14426bc <__alt_data_end+0xfffdcebc>
 1442a2c:	00800b44 	movi	r2,45
 1442a30:	d8812785 	stb	r2,1182(sp)
 1442a34:	df012b15 	stw	fp,1196(sp)
 1442a38:	d8013215 	stw	zero,1224(sp)
 1442a3c:	df012d17 	ldw	fp,1204(sp)
 1442a40:	00800b44 	movi	r2,45
 1442a44:	dc812d15 	stw	r18,1204(sp)
 1442a48:	003a0006 	br	144124c <__alt_data_end+0xfffdba4c>
 1442a4c:	d8c12617 	ldw	r3,1176(sp)
 1442a50:	00bfff44 	movi	r2,-3
 1442a54:	18800a16 	blt	r3,r2,1442a80 <___vfprintf_internal_r+0x1e44>
 1442a58:	48c00916 	blt	r9,r3,1442a80 <___vfprintf_internal_r+0x1e44>
 1442a5c:	d8c13415 	stw	r3,1232(sp)
 1442a60:	040019c4 	movi	r16,103
 1442a64:	003e7606 	br	1442440 <__alt_data_end+0xfffdcc40>
 1442a68:	01005174 	movhi	r4,325
 1442a6c:	21023284 	addi	r4,r4,2250
 1442a70:	d9012c15 	stw	r4,1200(sp)
 1442a74:	003c8e06 	br	1441cb0 <__alt_data_end+0xfffdc4b0>
 1442a78:	5005883a 	mov	r2,r10
 1442a7c:	003e6506 	br	1442414 <__alt_data_end+0xfffdcc14>
 1442a80:	843fff84 	addi	r16,r16,-2
 1442a84:	1d7fffc4 	addi	r21,r3,-1
 1442a88:	dd412615 	stw	r21,1176(sp)
 1442a8c:	dc0122c5 	stb	r16,1163(sp)
 1442a90:	a8009216 	blt	r21,zero,1442cdc <___vfprintf_internal_r+0x20a0>
 1442a94:	00800ac4 	movi	r2,43
 1442a98:	d8812305 	stb	r2,1164(sp)
 1442a9c:	00800244 	movi	r2,9
 1442aa0:	1540660e 	bge	r2,r21,1442c3c <___vfprintf_internal_r+0x2000>
 1442aa4:	dcc122c4 	addi	r19,sp,1163
 1442aa8:	dc012c15 	stw	r16,1200(sp)
 1442aac:	4023883a 	mov	r17,r8
 1442ab0:	9821883a 	mov	r16,r19
 1442ab4:	a809883a 	mov	r4,r21
 1442ab8:	01400284 	movi	r5,10
 1442abc:	144ab440 	call	144ab44 <__modsi3>
 1442ac0:	10800c04 	addi	r2,r2,48
 1442ac4:	843fffc4 	addi	r16,r16,-1
 1442ac8:	a809883a 	mov	r4,r21
 1442acc:	01400284 	movi	r5,10
 1442ad0:	80800005 	stb	r2,0(r16)
 1442ad4:	144aaf00 	call	144aaf0 <__divsi3>
 1442ad8:	01000244 	movi	r4,9
 1442adc:	102b883a 	mov	r21,r2
 1442ae0:	20bff416 	blt	r4,r2,1442ab4 <__alt_data_end+0xfffdd2b4>
 1442ae4:	8811883a 	mov	r8,r17
 1442ae8:	10800c04 	addi	r2,r2,48
 1442aec:	8023883a 	mov	r17,r16
 1442af0:	897fffc4 	addi	r5,r17,-1
 1442af4:	88bfffc5 	stb	r2,-1(r17)
 1442af8:	dc012c17 	ldw	r16,1200(sp)
 1442afc:	2cc08a2e 	bgeu	r5,r19,1442d28 <___vfprintf_internal_r+0x20ec>
 1442b00:	d9812384 	addi	r6,sp,1166
 1442b04:	344dc83a 	sub	r6,r6,r17
 1442b08:	d9012344 	addi	r4,sp,1165
 1442b0c:	998d883a 	add	r6,r19,r6
 1442b10:	00000106 	br	1442b18 <___vfprintf_internal_r+0x1edc>
 1442b14:	28800003 	ldbu	r2,0(r5)
 1442b18:	20800005 	stb	r2,0(r4)
 1442b1c:	21000044 	addi	r4,r4,1
 1442b20:	29400044 	addi	r5,r5,1
 1442b24:	21bffb1e 	bne	r4,r6,1442b14 <__alt_data_end+0xfffdd314>
 1442b28:	d8812304 	addi	r2,sp,1164
 1442b2c:	1445c83a 	sub	r2,r2,r17
 1442b30:	d9412344 	addi	r5,sp,1165
 1442b34:	2885883a 	add	r2,r5,r2
 1442b38:	14e7c83a 	sub	r19,r2,r19
 1442b3c:	d8813317 	ldw	r2,1228(sp)
 1442b40:	d8c13317 	ldw	r3,1228(sp)
 1442b44:	dcc13a15 	stw	r19,1256(sp)
 1442b48:	14e3883a 	add	r17,r2,r19
 1442b4c:	00800044 	movi	r2,1
 1442b50:	10c0550e 	bge	r2,r3,1442ca8 <___vfprintf_internal_r+0x206c>
 1442b54:	8c400044 	addi	r17,r17,1
 1442b58:	8839883a 	mov	fp,r17
 1442b5c:	88005016 	blt	r17,zero,1442ca0 <___vfprintf_internal_r+0x2064>
 1442b60:	d8013415 	stw	zero,1232(sp)
 1442b64:	003e3f06 	br	1442464 <__alt_data_end+0xfffdcc64>
 1442b68:	da412b15 	stw	r9,1196(sp)
 1442b6c:	dcc12783 	ldbu	r19,1182(sp)
 1442b70:	4823883a 	mov	r17,r9
 1442b74:	dc812d15 	stw	r18,1204(sp)
 1442b78:	d8013215 	stw	zero,1224(sp)
 1442b7c:	d8013415 	stw	zero,1232(sp)
 1442b80:	0039ae06 	br	144123c <__alt_data_end+0xfffdba3c>
 1442b84:	483de91e 	bne	r9,zero,144232c <__alt_data_end+0xfffdcb2c>
 1442b88:	8813883a 	mov	r9,r17
 1442b8c:	003de706 	br	144232c <__alt_data_end+0xfffdcb2c>
 1442b90:	b809883a 	mov	r4,r23
 1442b94:	b00b883a 	mov	r5,r22
 1442b98:	d9811e04 	addi	r6,sp,1144
 1442b9c:	144807c0 	call	144807c <__sprint_r>
 1442ba0:	10393e1e 	bne	r2,zero,144109c <__alt_data_end+0xfffdb89c>
 1442ba4:	dc012617 	ldw	r16,1176(sp)
 1442ba8:	d8c12017 	ldw	r3,1152(sp)
 1442bac:	d8811f17 	ldw	r2,1148(sp)
 1442bb0:	da000404 	addi	r8,sp,16
 1442bb4:	003ea006 	br	1442638 <__alt_data_end+0xfffdce38>
 1442bb8:	00c00b44 	movi	r3,45
 1442bbc:	2460003c 	xorhi	r17,r4,32768
 1442bc0:	d8c12b05 	stb	r3,1196(sp)
 1442bc4:	003ddf06 	br	1442344 <__alt_data_end+0xfffdcb44>
 1442bc8:	02400184 	movi	r9,6
 1442bcc:	003dd706 	br	144232c <__alt_data_end+0xfffdcb2c>
 1442bd0:	4d400044 	addi	r21,r9,1
 1442bd4:	003de206 	br	1442360 <__alt_data_end+0xfffdcb60>
 1442bd8:	d8c13417 	ldw	r3,1232(sp)
 1442bdc:	00c0490e 	bge	zero,r3,1442d04 <___vfprintf_internal_r+0x20c8>
 1442be0:	04400044 	movi	r17,1
 1442be4:	d9013317 	ldw	r4,1228(sp)
 1442be8:	8923883a 	add	r17,r17,r4
 1442bec:	8839883a 	mov	fp,r17
 1442bf0:	883e1c0e 	bge	r17,zero,1442464 <__alt_data_end+0xfffdcc64>
 1442bf4:	0039883a 	mov	fp,zero
 1442bf8:	003e1a06 	br	1442464 <__alt_data_end+0xfffdcc64>
 1442bfc:	00c03b0e 	bge	zero,r3,1442cec <___vfprintf_internal_r+0x20b0>
 1442c00:	4800021e 	bne	r9,zero,1442c0c <___vfprintf_internal_r+0x1fd0>
 1442c04:	e080004c 	andi	r2,fp,1
 1442c08:	10000626 	beq	r2,zero,1442c24 <___vfprintf_internal_r+0x1fe8>
 1442c0c:	d8c13417 	ldw	r3,1232(sp)
 1442c10:	4a400044 	addi	r9,r9,1
 1442c14:	1a63883a 	add	r17,r3,r9
 1442c18:	8839883a 	mov	fp,r17
 1442c1c:	883e110e 	bge	r17,zero,1442464 <__alt_data_end+0xfffdcc64>
 1442c20:	003ff406 	br	1442bf4 <__alt_data_end+0xfffdd3f4>
 1442c24:	1839883a 	mov	fp,r3
 1442c28:	18004116 	blt	r3,zero,1442d30 <___vfprintf_internal_r+0x20f4>
 1442c2c:	dc413417 	ldw	r17,1232(sp)
 1442c30:	003e0c06 	br	1442464 <__alt_data_end+0xfffdcc64>
 1442c34:	d8812117 	ldw	r2,1156(sp)
 1442c38:	003df606 	br	1442414 <__alt_data_end+0xfffdcc14>
 1442c3c:	00800c04 	movi	r2,48
 1442c40:	a8c00c04 	addi	r3,r21,48
 1442c44:	d8812345 	stb	r2,1165(sp)
 1442c48:	d8c12385 	stb	r3,1166(sp)
 1442c4c:	d88123c4 	addi	r2,sp,1167
 1442c50:	dcc122c4 	addi	r19,sp,1163
 1442c54:	003fb806 	br	1442b38 <__alt_data_end+0xfffdd338>
 1442c58:	d9013717 	ldw	r4,1244(sp)
 1442c5c:	880b883a 	mov	r5,r17
 1442c60:	000d883a 	mov	r6,zero
 1442c64:	000f883a 	mov	r7,zero
 1442c68:	da013f15 	stw	r8,1276(sp)
 1442c6c:	da413e15 	stw	r9,1272(sp)
 1442c70:	da813d15 	stw	r10,1268(sp)
 1442c74:	144bdcc0 	call	144bdcc <__eqdf2>
 1442c78:	da013f17 	ldw	r8,1276(sp)
 1442c7c:	da413e17 	ldw	r9,1272(sp)
 1442c80:	da813d17 	ldw	r10,1268(sp)
 1442c84:	103f1726 	beq	r2,zero,14428e4 <__alt_data_end+0xfffdd0e4>
 1442c88:	00800044 	movi	r2,1
 1442c8c:	1547c83a 	sub	r3,r2,r21
 1442c90:	d8c12615 	stw	r3,1176(sp)
 1442c94:	003f1406 	br	14428e8 <__alt_data_end+0xfffdd0e8>
 1442c98:	0005883a 	mov	r2,zero
 1442c9c:	003f4c06 	br	14429d0 <__alt_data_end+0xfffdd1d0>
 1442ca0:	0039883a 	mov	fp,zero
 1442ca4:	003fae06 	br	1442b60 <__alt_data_end+0xfffdd360>
 1442ca8:	e084703a 	and	r2,fp,r2
 1442cac:	103faa26 	beq	r2,zero,1442b58 <__alt_data_end+0xfffdd358>
 1442cb0:	003fa806 	br	1442b54 <__alt_data_end+0xfffdd354>
 1442cb4:	d9412d17 	ldw	r5,1204(sp)
 1442cb8:	2a400017 	ldw	r9,0(r5)
 1442cbc:	28c00104 	addi	r3,r5,4
 1442cc0:	d8c12d15 	stw	r3,1204(sp)
 1442cc4:	483ebc0e 	bge	r9,zero,14427b8 <__alt_data_end+0xfffdcfb8>
 1442cc8:	027fffc4 	movi	r9,-1
 1442ccc:	e4000047 	ldb	r16,1(fp)
 1442cd0:	00384206 	br	1440ddc <__alt_data_end+0xfffdb5dc>
 1442cd4:	043fffc4 	movi	r16,-1
 1442cd8:	0038ce06 	br	1441014 <__alt_data_end+0xfffdb814>
 1442cdc:	00800b44 	movi	r2,45
 1442ce0:	056bc83a 	sub	r21,zero,r21
 1442ce4:	d8812305 	stb	r2,1164(sp)
 1442ce8:	003f6c06 	br	1442a9c <__alt_data_end+0xfffdd29c>
 1442cec:	4800081e 	bne	r9,zero,1442d10 <___vfprintf_internal_r+0x20d4>
 1442cf0:	e080004c 	andi	r2,fp,1
 1442cf4:	1000061e 	bne	r2,zero,1442d10 <___vfprintf_internal_r+0x20d4>
 1442cf8:	07000044 	movi	fp,1
 1442cfc:	e023883a 	mov	r17,fp
 1442d00:	003dd806 	br	1442464 <__alt_data_end+0xfffdcc64>
 1442d04:	04400084 	movi	r17,2
 1442d08:	88e3c83a 	sub	r17,r17,r3
 1442d0c:	003fb506 	br	1442be4 <__alt_data_end+0xfffdd3e4>
 1442d10:	4c400084 	addi	r17,r9,2
 1442d14:	8839883a 	mov	fp,r17
 1442d18:	883dd20e 	bge	r17,zero,1442464 <__alt_data_end+0xfffdcc64>
 1442d1c:	003fb506 	br	1442bf4 <__alt_data_end+0xfffdd3f4>
 1442d20:	d8c12617 	ldw	r3,1176(sp)
 1442d24:	003f5706 	br	1442a84 <__alt_data_end+0xfffdd284>
 1442d28:	d8812344 	addi	r2,sp,1165
 1442d2c:	003f8206 	br	1442b38 <__alt_data_end+0xfffdd338>
 1442d30:	0039883a 	mov	fp,zero
 1442d34:	003fbd06 	br	1442c2c <__alt_data_end+0xfffdd42c>

01442d38 <__vfprintf_internal>:
 1442d38:	2007883a 	mov	r3,r4
 1442d3c:	01005174 	movhi	r4,325
 1442d40:	21059a04 	addi	r4,r4,5736
 1442d44:	21000017 	ldw	r4,0(r4)
 1442d48:	2805883a 	mov	r2,r5
 1442d4c:	300f883a 	mov	r7,r6
 1442d50:	180b883a 	mov	r5,r3
 1442d54:	100d883a 	mov	r6,r2
 1442d58:	1440c3c1 	jmpi	1440c3c <___vfprintf_internal_r>

01442d5c <__swsetup_r>:
 1442d5c:	00805174 	movhi	r2,325
 1442d60:	defffd04 	addi	sp,sp,-12
 1442d64:	10859a04 	addi	r2,r2,5736
 1442d68:	dc400115 	stw	r17,4(sp)
 1442d6c:	2023883a 	mov	r17,r4
 1442d70:	11000017 	ldw	r4,0(r2)
 1442d74:	dc000015 	stw	r16,0(sp)
 1442d78:	dfc00215 	stw	ra,8(sp)
 1442d7c:	2821883a 	mov	r16,r5
 1442d80:	20000226 	beq	r4,zero,1442d8c <__swsetup_r+0x30>
 1442d84:	20c00e17 	ldw	r3,56(r4)
 1442d88:	18002e26 	beq	r3,zero,1442e44 <__swsetup_r+0xe8>
 1442d8c:	8080030b 	ldhu	r2,12(r16)
 1442d90:	10c0020c 	andi	r3,r2,8
 1442d94:	100d883a 	mov	r6,r2
 1442d98:	18000f26 	beq	r3,zero,1442dd8 <__swsetup_r+0x7c>
 1442d9c:	80c00417 	ldw	r3,16(r16)
 1442da0:	18001526 	beq	r3,zero,1442df8 <__swsetup_r+0x9c>
 1442da4:	1100004c 	andi	r4,r2,1
 1442da8:	20001c1e 	bne	r4,zero,1442e1c <__swsetup_r+0xc0>
 1442dac:	1080008c 	andi	r2,r2,2
 1442db0:	1000261e 	bne	r2,zero,1442e4c <__swsetup_r+0xf0>
 1442db4:	80800517 	ldw	r2,20(r16)
 1442db8:	80800215 	stw	r2,8(r16)
 1442dbc:	18001c26 	beq	r3,zero,1442e30 <__swsetup_r+0xd4>
 1442dc0:	0005883a 	mov	r2,zero
 1442dc4:	dfc00217 	ldw	ra,8(sp)
 1442dc8:	dc400117 	ldw	r17,4(sp)
 1442dcc:	dc000017 	ldw	r16,0(sp)
 1442dd0:	dec00304 	addi	sp,sp,12
 1442dd4:	f800283a 	ret
 1442dd8:	3080040c 	andi	r2,r6,16
 1442ddc:	10001726 	beq	r2,zero,1442e3c <__swsetup_r+0xe0>
 1442de0:	3080010c 	andi	r2,r6,4
 1442de4:	10001b1e 	bne	r2,zero,1442e54 <__swsetup_r+0xf8>
 1442de8:	80c00417 	ldw	r3,16(r16)
 1442dec:	30800214 	ori	r2,r6,8
 1442df0:	8080030d 	sth	r2,12(r16)
 1442df4:	183feb1e 	bne	r3,zero,1442da4 <__alt_data_end+0xfffdd5a4>
 1442df8:	1140a00c 	andi	r5,r2,640
 1442dfc:	01008004 	movi	r4,512
 1442e00:	293fe826 	beq	r5,r4,1442da4 <__alt_data_end+0xfffdd5a4>
 1442e04:	8809883a 	mov	r4,r17
 1442e08:	800b883a 	mov	r5,r16
 1442e0c:	14458f00 	call	14458f0 <__smakebuf_r>
 1442e10:	8080030b 	ldhu	r2,12(r16)
 1442e14:	80c00417 	ldw	r3,16(r16)
 1442e18:	003fe206 	br	1442da4 <__alt_data_end+0xfffdd5a4>
 1442e1c:	80800517 	ldw	r2,20(r16)
 1442e20:	80000215 	stw	zero,8(r16)
 1442e24:	0085c83a 	sub	r2,zero,r2
 1442e28:	80800615 	stw	r2,24(r16)
 1442e2c:	183fe41e 	bne	r3,zero,1442dc0 <__alt_data_end+0xfffdd5c0>
 1442e30:	8080030b 	ldhu	r2,12(r16)
 1442e34:	1080200c 	andi	r2,r2,128
 1442e38:	103fe226 	beq	r2,zero,1442dc4 <__alt_data_end+0xfffdd5c4>
 1442e3c:	00bfffc4 	movi	r2,-1
 1442e40:	003fe006 	br	1442dc4 <__alt_data_end+0xfffdd5c4>
 1442e44:	1444d980 	call	1444d98 <__sinit>
 1442e48:	003fd006 	br	1442d8c <__alt_data_end+0xfffdd58c>
 1442e4c:	0005883a 	mov	r2,zero
 1442e50:	003fd906 	br	1442db8 <__alt_data_end+0xfffdd5b8>
 1442e54:	81400c17 	ldw	r5,48(r16)
 1442e58:	28000626 	beq	r5,zero,1442e74 <__swsetup_r+0x118>
 1442e5c:	80801004 	addi	r2,r16,64
 1442e60:	28800326 	beq	r5,r2,1442e70 <__swsetup_r+0x114>
 1442e64:	8809883a 	mov	r4,r17
 1442e68:	1444f0c0 	call	1444f0c <_free_r>
 1442e6c:	8180030b 	ldhu	r6,12(r16)
 1442e70:	80000c15 	stw	zero,48(r16)
 1442e74:	80c00417 	ldw	r3,16(r16)
 1442e78:	00bff6c4 	movi	r2,-37
 1442e7c:	118c703a 	and	r6,r2,r6
 1442e80:	80000115 	stw	zero,4(r16)
 1442e84:	80c00015 	stw	r3,0(r16)
 1442e88:	003fd806 	br	1442dec <__alt_data_end+0xfffdd5ec>

01442e8c <quorem>:
 1442e8c:	defff204 	addi	sp,sp,-56
 1442e90:	ddc00b15 	stw	r23,44(sp)
 1442e94:	20800417 	ldw	r2,16(r4)
 1442e98:	2dc00417 	ldw	r23,16(r5)
 1442e9c:	dfc00d15 	stw	ra,52(sp)
 1442ea0:	df000c15 	stw	fp,48(sp)
 1442ea4:	dd800a15 	stw	r22,40(sp)
 1442ea8:	dd400915 	stw	r21,36(sp)
 1442eac:	dd000815 	stw	r20,32(sp)
 1442eb0:	dcc00715 	stw	r19,28(sp)
 1442eb4:	dc800615 	stw	r18,24(sp)
 1442eb8:	dc400515 	stw	r17,20(sp)
 1442ebc:	dc000415 	stw	r16,16(sp)
 1442ec0:	15c07a16 	blt	r2,r23,14430ac <quorem+0x220>
 1442ec4:	bdffffc4 	addi	r23,r23,-1
 1442ec8:	bde9883a 	add	r20,r23,r23
 1442ecc:	28c00504 	addi	r3,r5,20
 1442ed0:	a529883a 	add	r20,r20,r20
 1442ed4:	1d39883a 	add	fp,r3,r20
 1442ed8:	24c00504 	addi	r19,r4,20
 1442edc:	d9400215 	stw	r5,8(sp)
 1442ee0:	9d29883a 	add	r20,r19,r20
 1442ee4:	e1400017 	ldw	r5,0(fp)
 1442ee8:	d9000015 	stw	r4,0(sp)
 1442eec:	a1000017 	ldw	r4,0(r20)
 1442ef0:	29400044 	addi	r5,r5,1
 1442ef4:	d8c00115 	stw	r3,4(sp)
 1442ef8:	dd000315 	stw	r20,12(sp)
 1442efc:	144aba00 	call	144aba0 <__udivsi3>
 1442f00:	1025883a 	mov	r18,r2
 1442f04:	10003026 	beq	r2,zero,1442fc8 <quorem+0x13c>
 1442f08:	dc400117 	ldw	r17,4(sp)
 1442f0c:	9829883a 	mov	r20,r19
 1442f10:	002d883a 	mov	r22,zero
 1442f14:	0021883a 	mov	r16,zero
 1442f18:	8d400017 	ldw	r21,0(r17)
 1442f1c:	900b883a 	mov	r5,r18
 1442f20:	8c400104 	addi	r17,r17,4
 1442f24:	a93fffcc 	andi	r4,r21,65535
 1442f28:	1440a480 	call	1440a48 <__mulsi3>
 1442f2c:	a808d43a 	srli	r4,r21,16
 1442f30:	900b883a 	mov	r5,r18
 1442f34:	b0ad883a 	add	r22,r22,r2
 1442f38:	1440a480 	call	1440a48 <__mulsi3>
 1442f3c:	a1000017 	ldw	r4,0(r20)
 1442f40:	b00cd43a 	srli	r6,r22,16
 1442f44:	b0ffffcc 	andi	r3,r22,65535
 1442f48:	217fffcc 	andi	r5,r4,65535
 1442f4c:	2c21883a 	add	r16,r5,r16
 1442f50:	80c7c83a 	sub	r3,r16,r3
 1442f54:	2008d43a 	srli	r4,r4,16
 1442f58:	3085883a 	add	r2,r6,r2
 1442f5c:	1821d43a 	srai	r16,r3,16
 1442f60:	117fffcc 	andi	r5,r2,65535
 1442f64:	2149c83a 	sub	r4,r4,r5
 1442f68:	2421883a 	add	r16,r4,r16
 1442f6c:	8008943a 	slli	r4,r16,16
 1442f70:	18ffffcc 	andi	r3,r3,65535
 1442f74:	102cd43a 	srli	r22,r2,16
 1442f78:	20c8b03a 	or	r4,r4,r3
 1442f7c:	a1000015 	stw	r4,0(r20)
 1442f80:	8021d43a 	srai	r16,r16,16
 1442f84:	a5000104 	addi	r20,r20,4
 1442f88:	e47fe32e 	bgeu	fp,r17,1442f18 <__alt_data_end+0xfffdd718>
 1442f8c:	d8c00317 	ldw	r3,12(sp)
 1442f90:	18800017 	ldw	r2,0(r3)
 1442f94:	10000c1e 	bne	r2,zero,1442fc8 <quorem+0x13c>
 1442f98:	18bfff04 	addi	r2,r3,-4
 1442f9c:	9880082e 	bgeu	r19,r2,1442fc0 <quorem+0x134>
 1442fa0:	18ffff17 	ldw	r3,-4(r3)
 1442fa4:	18000326 	beq	r3,zero,1442fb4 <quorem+0x128>
 1442fa8:	00000506 	br	1442fc0 <quorem+0x134>
 1442fac:	10c00017 	ldw	r3,0(r2)
 1442fb0:	1800031e 	bne	r3,zero,1442fc0 <quorem+0x134>
 1442fb4:	10bfff04 	addi	r2,r2,-4
 1442fb8:	bdffffc4 	addi	r23,r23,-1
 1442fbc:	98bffb36 	bltu	r19,r2,1442fac <__alt_data_end+0xfffdd7ac>
 1442fc0:	d8c00017 	ldw	r3,0(sp)
 1442fc4:	1dc00415 	stw	r23,16(r3)
 1442fc8:	d9000017 	ldw	r4,0(sp)
 1442fcc:	d9400217 	ldw	r5,8(sp)
 1442fd0:	144706c0 	call	144706c <__mcmp>
 1442fd4:	10002816 	blt	r2,zero,1443078 <quorem+0x1ec>
 1442fd8:	dc400117 	ldw	r17,4(sp)
 1442fdc:	94800044 	addi	r18,r18,1
 1442fe0:	980d883a 	mov	r6,r19
 1442fe4:	0007883a 	mov	r3,zero
 1442fe8:	31000017 	ldw	r4,0(r6)
 1442fec:	89400017 	ldw	r5,0(r17)
 1442ff0:	31800104 	addi	r6,r6,4
 1442ff4:	20bfffcc 	andi	r2,r4,65535
 1442ff8:	10c7883a 	add	r3,r2,r3
 1442ffc:	28bfffcc 	andi	r2,r5,65535
 1443000:	1885c83a 	sub	r2,r3,r2
 1443004:	280ad43a 	srli	r5,r5,16
 1443008:	2008d43a 	srli	r4,r4,16
 144300c:	1007d43a 	srai	r3,r2,16
 1443010:	10bfffcc 	andi	r2,r2,65535
 1443014:	2149c83a 	sub	r4,r4,r5
 1443018:	20c9883a 	add	r4,r4,r3
 144301c:	200a943a 	slli	r5,r4,16
 1443020:	8c400104 	addi	r17,r17,4
 1443024:	2007d43a 	srai	r3,r4,16
 1443028:	2884b03a 	or	r2,r5,r2
 144302c:	30bfff15 	stw	r2,-4(r6)
 1443030:	e47fed2e 	bgeu	fp,r17,1442fe8 <__alt_data_end+0xfffdd7e8>
 1443034:	bdc5883a 	add	r2,r23,r23
 1443038:	1085883a 	add	r2,r2,r2
 144303c:	9887883a 	add	r3,r19,r2
 1443040:	18800017 	ldw	r2,0(r3)
 1443044:	10000c1e 	bne	r2,zero,1443078 <quorem+0x1ec>
 1443048:	18bfff04 	addi	r2,r3,-4
 144304c:	9880082e 	bgeu	r19,r2,1443070 <quorem+0x1e4>
 1443050:	18ffff17 	ldw	r3,-4(r3)
 1443054:	18000326 	beq	r3,zero,1443064 <quorem+0x1d8>
 1443058:	00000506 	br	1443070 <quorem+0x1e4>
 144305c:	10c00017 	ldw	r3,0(r2)
 1443060:	1800031e 	bne	r3,zero,1443070 <quorem+0x1e4>
 1443064:	10bfff04 	addi	r2,r2,-4
 1443068:	bdffffc4 	addi	r23,r23,-1
 144306c:	98bffb36 	bltu	r19,r2,144305c <__alt_data_end+0xfffdd85c>
 1443070:	d8c00017 	ldw	r3,0(sp)
 1443074:	1dc00415 	stw	r23,16(r3)
 1443078:	9005883a 	mov	r2,r18
 144307c:	dfc00d17 	ldw	ra,52(sp)
 1443080:	df000c17 	ldw	fp,48(sp)
 1443084:	ddc00b17 	ldw	r23,44(sp)
 1443088:	dd800a17 	ldw	r22,40(sp)
 144308c:	dd400917 	ldw	r21,36(sp)
 1443090:	dd000817 	ldw	r20,32(sp)
 1443094:	dcc00717 	ldw	r19,28(sp)
 1443098:	dc800617 	ldw	r18,24(sp)
 144309c:	dc400517 	ldw	r17,20(sp)
 14430a0:	dc000417 	ldw	r16,16(sp)
 14430a4:	dec00e04 	addi	sp,sp,56
 14430a8:	f800283a 	ret
 14430ac:	0005883a 	mov	r2,zero
 14430b0:	003ff206 	br	144307c <__alt_data_end+0xfffdd87c>

014430b4 <_dtoa_r>:
 14430b4:	20801017 	ldw	r2,64(r4)
 14430b8:	deffde04 	addi	sp,sp,-136
 14430bc:	dd401d15 	stw	r21,116(sp)
 14430c0:	dcc01b15 	stw	r19,108(sp)
 14430c4:	dc801a15 	stw	r18,104(sp)
 14430c8:	dc401915 	stw	r17,100(sp)
 14430cc:	dc001815 	stw	r16,96(sp)
 14430d0:	dfc02115 	stw	ra,132(sp)
 14430d4:	df002015 	stw	fp,128(sp)
 14430d8:	ddc01f15 	stw	r23,124(sp)
 14430dc:	dd801e15 	stw	r22,120(sp)
 14430e0:	dd001c15 	stw	r20,112(sp)
 14430e4:	d9c00315 	stw	r7,12(sp)
 14430e8:	2021883a 	mov	r16,r4
 14430ec:	302b883a 	mov	r21,r6
 14430f0:	2825883a 	mov	r18,r5
 14430f4:	dc402417 	ldw	r17,144(sp)
 14430f8:	3027883a 	mov	r19,r6
 14430fc:	10000826 	beq	r2,zero,1443120 <_dtoa_r+0x6c>
 1443100:	21801117 	ldw	r6,68(r4)
 1443104:	00c00044 	movi	r3,1
 1443108:	100b883a 	mov	r5,r2
 144310c:	1986983a 	sll	r3,r3,r6
 1443110:	11800115 	stw	r6,4(r2)
 1443114:	10c00215 	stw	r3,8(r2)
 1443118:	14467980 	call	1446798 <_Bfree>
 144311c:	80001015 	stw	zero,64(r16)
 1443120:	a8002d16 	blt	r21,zero,14431d8 <_dtoa_r+0x124>
 1443124:	88000015 	stw	zero,0(r17)
 1443128:	a8dffc2c 	andhi	r3,r21,32752
 144312c:	009ffc34 	movhi	r2,32752
 1443130:	18801b26 	beq	r3,r2,14431a0 <_dtoa_r+0xec>
 1443134:	9009883a 	mov	r4,r18
 1443138:	980b883a 	mov	r5,r19
 144313c:	000d883a 	mov	r6,zero
 1443140:	000f883a 	mov	r7,zero
 1443144:	144bdcc0 	call	144bdcc <__eqdf2>
 1443148:	10002a1e 	bne	r2,zero,14431f4 <_dtoa_r+0x140>
 144314c:	d8c02317 	ldw	r3,140(sp)
 1443150:	d9002517 	ldw	r4,148(sp)
 1443154:	00800044 	movi	r2,1
 1443158:	18800015 	stw	r2,0(r3)
 144315c:	2001a226 	beq	r4,zero,14437e8 <_dtoa_r+0x734>
 1443160:	00805174 	movhi	r2,325
 1443164:	10823244 	addi	r2,r2,2249
 1443168:	20800015 	stw	r2,0(r4)
 144316c:	10bfffc4 	addi	r2,r2,-1
 1443170:	dfc02117 	ldw	ra,132(sp)
 1443174:	df002017 	ldw	fp,128(sp)
 1443178:	ddc01f17 	ldw	r23,124(sp)
 144317c:	dd801e17 	ldw	r22,120(sp)
 1443180:	dd401d17 	ldw	r21,116(sp)
 1443184:	dd001c17 	ldw	r20,112(sp)
 1443188:	dcc01b17 	ldw	r19,108(sp)
 144318c:	dc801a17 	ldw	r18,104(sp)
 1443190:	dc401917 	ldw	r17,100(sp)
 1443194:	dc001817 	ldw	r16,96(sp)
 1443198:	dec02204 	addi	sp,sp,136
 144319c:	f800283a 	ret
 14431a0:	d8c02317 	ldw	r3,140(sp)
 14431a4:	0089c3c4 	movi	r2,9999
 14431a8:	18800015 	stw	r2,0(r3)
 14431ac:	90017c26 	beq	r18,zero,14437a0 <_dtoa_r+0x6ec>
 14431b0:	00805174 	movhi	r2,325
 14431b4:	10823e04 	addi	r2,r2,2296
 14431b8:	d9002517 	ldw	r4,148(sp)
 14431bc:	203fec26 	beq	r4,zero,1443170 <__alt_data_end+0xfffdd970>
 14431c0:	10c000c7 	ldb	r3,3(r2)
 14431c4:	18017d1e 	bne	r3,zero,14437bc <_dtoa_r+0x708>
 14431c8:	10c000c4 	addi	r3,r2,3
 14431cc:	d9802517 	ldw	r6,148(sp)
 14431d0:	30c00015 	stw	r3,0(r6)
 14431d4:	003fe606 	br	1443170 <__alt_data_end+0xfffdd970>
 14431d8:	04e00034 	movhi	r19,32768
 14431dc:	9cffffc4 	addi	r19,r19,-1
 14431e0:	00800044 	movi	r2,1
 14431e4:	ace6703a 	and	r19,r21,r19
 14431e8:	88800015 	stw	r2,0(r17)
 14431ec:	982b883a 	mov	r21,r19
 14431f0:	003fcd06 	br	1443128 <__alt_data_end+0xfffdd928>
 14431f4:	d8800204 	addi	r2,sp,8
 14431f8:	a822d53a 	srli	r17,r21,20
 14431fc:	d8800015 	stw	r2,0(sp)
 1443200:	8009883a 	mov	r4,r16
 1443204:	900b883a 	mov	r5,r18
 1443208:	980d883a 	mov	r6,r19
 144320c:	d9c00104 	addi	r7,sp,4
 1443210:	14473e00 	call	14473e0 <__d2b>
 1443214:	1039883a 	mov	fp,r2
 1443218:	88016a1e 	bne	r17,zero,14437c4 <_dtoa_r+0x710>
 144321c:	dd000217 	ldw	r20,8(sp)
 1443220:	dc400117 	ldw	r17,4(sp)
 1443224:	00befbc4 	movi	r2,-1041
 1443228:	a463883a 	add	r17,r20,r17
 144322c:	8882ea16 	blt	r17,r2,1443dd8 <_dtoa_r+0xd24>
 1443230:	00bf0384 	movi	r2,-1010
 1443234:	1445c83a 	sub	r2,r2,r17
 1443238:	89010484 	addi	r4,r17,1042
 144323c:	a8aa983a 	sll	r21,r21,r2
 1443240:	9108d83a 	srl	r4,r18,r4
 1443244:	a908b03a 	or	r4,r21,r4
 1443248:	144d2a40 	call	144d2a4 <__floatunsidf>
 144324c:	017f8434 	movhi	r5,65040
 1443250:	01800044 	movi	r6,1
 1443254:	1009883a 	mov	r4,r2
 1443258:	194b883a 	add	r5,r3,r5
 144325c:	8c7fffc4 	addi	r17,r17,-1
 1443260:	d9800f15 	stw	r6,60(sp)
 1443264:	000d883a 	mov	r6,zero
 1443268:	01cffe34 	movhi	r7,16376
 144326c:	144c87c0 	call	144c87c <__subdf3>
 1443270:	0198dbf4 	movhi	r6,25455
 1443274:	01cff4f4 	movhi	r7,16339
 1443278:	1009883a 	mov	r4,r2
 144327c:	180b883a 	mov	r5,r3
 1443280:	3190d844 	addi	r6,r6,17249
 1443284:	39e1e9c4 	addi	r7,r7,-30809
 1443288:	144c0100 	call	144c010 <__muldf3>
 144328c:	01a2d874 	movhi	r6,35681
 1443290:	01cff1f4 	movhi	r7,16327
 1443294:	180b883a 	mov	r5,r3
 1443298:	31b22cc4 	addi	r6,r6,-14157
 144329c:	39e28a04 	addi	r7,r7,-30168
 14432a0:	1009883a 	mov	r4,r2
 14432a4:	144abb00 	call	144abb0 <__adddf3>
 14432a8:	8809883a 	mov	r4,r17
 14432ac:	102d883a 	mov	r22,r2
 14432b0:	182b883a 	mov	r21,r3
 14432b4:	144d1d40 	call	144d1d4 <__floatsidf>
 14432b8:	019427f4 	movhi	r6,20639
 14432bc:	01cff4f4 	movhi	r7,16339
 14432c0:	1009883a 	mov	r4,r2
 14432c4:	180b883a 	mov	r5,r3
 14432c8:	319e7ec4 	addi	r6,r6,31227
 14432cc:	39d104c4 	addi	r7,r7,17427
 14432d0:	144c0100 	call	144c010 <__muldf3>
 14432d4:	b009883a 	mov	r4,r22
 14432d8:	a80b883a 	mov	r5,r21
 14432dc:	100d883a 	mov	r6,r2
 14432e0:	180f883a 	mov	r7,r3
 14432e4:	144abb00 	call	144abb0 <__adddf3>
 14432e8:	1009883a 	mov	r4,r2
 14432ec:	180b883a 	mov	r5,r3
 14432f0:	102d883a 	mov	r22,r2
 14432f4:	182b883a 	mov	r21,r3
 14432f8:	144d14c0 	call	144d14c <__fixdfsi>
 14432fc:	b009883a 	mov	r4,r22
 1443300:	a80b883a 	mov	r5,r21
 1443304:	000d883a 	mov	r6,zero
 1443308:	000f883a 	mov	r7,zero
 144330c:	d8800515 	stw	r2,20(sp)
 1443310:	144bf300 	call	144bf30 <__ledf2>
 1443314:	10023116 	blt	r2,zero,1443bdc <_dtoa_r+0xb28>
 1443318:	d8c00517 	ldw	r3,20(sp)
 144331c:	00800584 	movi	r2,22
 1443320:	10c21f36 	bltu	r2,r3,1443ba0 <_dtoa_r+0xaec>
 1443324:	180490fa 	slli	r2,r3,3
 1443328:	00c05174 	movhi	r3,325
 144332c:	18c25a04 	addi	r3,r3,2408
 1443330:	1885883a 	add	r2,r3,r2
 1443334:	11000017 	ldw	r4,0(r2)
 1443338:	11400117 	ldw	r5,4(r2)
 144333c:	900d883a 	mov	r6,r18
 1443340:	980f883a 	mov	r7,r19
 1443344:	144be500 	call	144be50 <__gedf2>
 1443348:	0082a70e 	bge	zero,r2,1443de8 <_dtoa_r+0xd34>
 144334c:	d9000517 	ldw	r4,20(sp)
 1443350:	d8000c15 	stw	zero,48(sp)
 1443354:	213fffc4 	addi	r4,r4,-1
 1443358:	d9000515 	stw	r4,20(sp)
 144335c:	a463c83a 	sub	r17,r20,r17
 1443360:	8dbfffc4 	addi	r22,r17,-1
 1443364:	b0021916 	blt	r22,zero,1443bcc <_dtoa_r+0xb18>
 1443368:	d8000815 	stw	zero,32(sp)
 144336c:	d8800517 	ldw	r2,20(sp)
 1443370:	10020e16 	blt	r2,zero,1443bac <_dtoa_r+0xaf8>
 1443374:	b0ad883a 	add	r22,r22,r2
 1443378:	d8800a15 	stw	r2,40(sp)
 144337c:	d8000915 	stw	zero,36(sp)
 1443380:	d8c00317 	ldw	r3,12(sp)
 1443384:	00800244 	movi	r2,9
 1443388:	10c11a36 	bltu	r2,r3,14437f4 <_dtoa_r+0x740>
 144338c:	00800144 	movi	r2,5
 1443390:	10c4fc0e 	bge	r2,r3,1444784 <_dtoa_r+0x16d0>
 1443394:	18ffff04 	addi	r3,r3,-4
 1443398:	d8c00315 	stw	r3,12(sp)
 144339c:	0029883a 	mov	r20,zero
 14433a0:	d9800317 	ldw	r6,12(sp)
 14433a4:	008000c4 	movi	r2,3
 14433a8:	3083bd26 	beq	r6,r2,14442a0 <_dtoa_r+0x11ec>
 14433ac:	1183670e 	bge	r2,r6,144414c <_dtoa_r+0x1098>
 14433b0:	d8c00317 	ldw	r3,12(sp)
 14433b4:	00800104 	movi	r2,4
 14433b8:	1882e726 	beq	r3,r2,1443f58 <_dtoa_r+0xea4>
 14433bc:	00800144 	movi	r2,5
 14433c0:	1884f21e 	bne	r3,r2,144478c <_dtoa_r+0x16d8>
 14433c4:	00800044 	movi	r2,1
 14433c8:	d8800b15 	stw	r2,44(sp)
 14433cc:	d8c02217 	ldw	r3,136(sp)
 14433d0:	d9000517 	ldw	r4,20(sp)
 14433d4:	1907883a 	add	r3,r3,r4
 14433d8:	19800044 	addi	r6,r3,1
 14433dc:	d8c00d15 	stw	r3,52(sp)
 14433e0:	d9800615 	stw	r6,24(sp)
 14433e4:	0183c30e 	bge	zero,r6,14442f4 <_dtoa_r+0x1240>
 14433e8:	d9800617 	ldw	r6,24(sp)
 14433ec:	3023883a 	mov	r17,r6
 14433f0:	80001115 	stw	zero,68(r16)
 14433f4:	008005c4 	movi	r2,23
 14433f8:	1184f62e 	bgeu	r2,r6,14447d4 <_dtoa_r+0x1720>
 14433fc:	00c00044 	movi	r3,1
 1443400:	00800104 	movi	r2,4
 1443404:	1085883a 	add	r2,r2,r2
 1443408:	11000504 	addi	r4,r2,20
 144340c:	180b883a 	mov	r5,r3
 1443410:	18c00044 	addi	r3,r3,1
 1443414:	313ffb2e 	bgeu	r6,r4,1443404 <__alt_data_end+0xfffddc04>
 1443418:	81401115 	stw	r5,68(r16)
 144341c:	8009883a 	mov	r4,r16
 1443420:	14466f00 	call	14466f0 <_Balloc>
 1443424:	d8800715 	stw	r2,28(sp)
 1443428:	80801015 	stw	r2,64(r16)
 144342c:	00800384 	movi	r2,14
 1443430:	1440fd36 	bltu	r2,r17,1443828 <_dtoa_r+0x774>
 1443434:	a000fc26 	beq	r20,zero,1443828 <_dtoa_r+0x774>
 1443438:	d8800517 	ldw	r2,20(sp)
 144343c:	0083b90e 	bge	zero,r2,1444324 <_dtoa_r+0x1270>
 1443440:	d8c00517 	ldw	r3,20(sp)
 1443444:	108003cc 	andi	r2,r2,15
 1443448:	100490fa 	slli	r2,r2,3
 144344c:	182fd13a 	srai	r23,r3,4
 1443450:	00c05174 	movhi	r3,325
 1443454:	18c25a04 	addi	r3,r3,2408
 1443458:	1885883a 	add	r2,r3,r2
 144345c:	b8c0040c 	andi	r3,r23,16
 1443460:	12c00017 	ldw	r11,0(r2)
 1443464:	12800117 	ldw	r10,4(r2)
 1443468:	18039726 	beq	r3,zero,14442c8 <_dtoa_r+0x1214>
 144346c:	00805174 	movhi	r2,325
 1443470:	10825004 	addi	r2,r2,2368
 1443474:	11800817 	ldw	r6,32(r2)
 1443478:	11c00917 	ldw	r7,36(r2)
 144347c:	9009883a 	mov	r4,r18
 1443480:	980b883a 	mov	r5,r19
 1443484:	da801615 	stw	r10,88(sp)
 1443488:	dac01515 	stw	r11,84(sp)
 144348c:	144b44c0 	call	144b44c <__divdf3>
 1443490:	da801617 	ldw	r10,88(sp)
 1443494:	dac01517 	ldw	r11,84(sp)
 1443498:	bdc003cc 	andi	r23,r23,15
 144349c:	044000c4 	movi	r17,3
 14434a0:	d8800e15 	stw	r2,56(sp)
 14434a4:	182b883a 	mov	r21,r3
 14434a8:	b8001126 	beq	r23,zero,14434f0 <_dtoa_r+0x43c>
 14434ac:	05005174 	movhi	r20,325
 14434b0:	a5025004 	addi	r20,r20,2368
 14434b4:	5805883a 	mov	r2,r11
 14434b8:	5007883a 	mov	r3,r10
 14434bc:	b980004c 	andi	r6,r23,1
 14434c0:	1009883a 	mov	r4,r2
 14434c4:	b82fd07a 	srai	r23,r23,1
 14434c8:	180b883a 	mov	r5,r3
 14434cc:	30000426 	beq	r6,zero,14434e0 <_dtoa_r+0x42c>
 14434d0:	a1800017 	ldw	r6,0(r20)
 14434d4:	a1c00117 	ldw	r7,4(r20)
 14434d8:	8c400044 	addi	r17,r17,1
 14434dc:	144c0100 	call	144c010 <__muldf3>
 14434e0:	a5000204 	addi	r20,r20,8
 14434e4:	b83ff51e 	bne	r23,zero,14434bc <__alt_data_end+0xfffddcbc>
 14434e8:	1017883a 	mov	r11,r2
 14434ec:	1815883a 	mov	r10,r3
 14434f0:	d9000e17 	ldw	r4,56(sp)
 14434f4:	a80b883a 	mov	r5,r21
 14434f8:	580d883a 	mov	r6,r11
 14434fc:	500f883a 	mov	r7,r10
 1443500:	144b44c0 	call	144b44c <__divdf3>
 1443504:	1029883a 	mov	r20,r2
 1443508:	182b883a 	mov	r21,r3
 144350c:	d9800c17 	ldw	r6,48(sp)
 1443510:	30000626 	beq	r6,zero,144352c <_dtoa_r+0x478>
 1443514:	a009883a 	mov	r4,r20
 1443518:	a80b883a 	mov	r5,r21
 144351c:	000d883a 	mov	r6,zero
 1443520:	01cffc34 	movhi	r7,16368
 1443524:	144bf300 	call	144bf30 <__ledf2>
 1443528:	10043216 	blt	r2,zero,14445f4 <_dtoa_r+0x1540>
 144352c:	8809883a 	mov	r4,r17
 1443530:	144d1d40 	call	144d1d4 <__floatsidf>
 1443534:	1009883a 	mov	r4,r2
 1443538:	180b883a 	mov	r5,r3
 144353c:	a00d883a 	mov	r6,r20
 1443540:	a80f883a 	mov	r7,r21
 1443544:	144c0100 	call	144c010 <__muldf3>
 1443548:	000d883a 	mov	r6,zero
 144354c:	1009883a 	mov	r4,r2
 1443550:	180b883a 	mov	r5,r3
 1443554:	01d00734 	movhi	r7,16412
 1443558:	144abb00 	call	144abb0 <__adddf3>
 144355c:	1023883a 	mov	r17,r2
 1443560:	d9800617 	ldw	r6,24(sp)
 1443564:	00bf3034 	movhi	r2,64704
 1443568:	1885883a 	add	r2,r3,r2
 144356c:	d8800e15 	stw	r2,56(sp)
 1443570:	30032e26 	beq	r6,zero,144422c <_dtoa_r+0x1178>
 1443574:	d8c00517 	ldw	r3,20(sp)
 1443578:	da800617 	ldw	r10,24(sp)
 144357c:	d8c01215 	stw	r3,72(sp)
 1443580:	d9000b17 	ldw	r4,44(sp)
 1443584:	2003b026 	beq	r4,zero,1444448 <_dtoa_r+0x1394>
 1443588:	50bfffc4 	addi	r2,r10,-1
 144358c:	100490fa 	slli	r2,r2,3
 1443590:	00c05174 	movhi	r3,325
 1443594:	18c25a04 	addi	r3,r3,2408
 1443598:	1885883a 	add	r2,r3,r2
 144359c:	11800017 	ldw	r6,0(r2)
 14435a0:	11c00117 	ldw	r7,4(r2)
 14435a4:	d8800717 	ldw	r2,28(sp)
 14435a8:	0009883a 	mov	r4,zero
 14435ac:	014ff834 	movhi	r5,16352
 14435b0:	da801615 	stw	r10,88(sp)
 14435b4:	15c00044 	addi	r23,r2,1
 14435b8:	144b44c0 	call	144b44c <__divdf3>
 14435bc:	d9c00e17 	ldw	r7,56(sp)
 14435c0:	880d883a 	mov	r6,r17
 14435c4:	1009883a 	mov	r4,r2
 14435c8:	180b883a 	mov	r5,r3
 14435cc:	144c87c0 	call	144c87c <__subdf3>
 14435d0:	a80b883a 	mov	r5,r21
 14435d4:	a009883a 	mov	r4,r20
 14435d8:	d8c01015 	stw	r3,64(sp)
 14435dc:	d8800e15 	stw	r2,56(sp)
 14435e0:	144d14c0 	call	144d14c <__fixdfsi>
 14435e4:	1009883a 	mov	r4,r2
 14435e8:	d8801715 	stw	r2,92(sp)
 14435ec:	144d1d40 	call	144d1d4 <__floatsidf>
 14435f0:	a009883a 	mov	r4,r20
 14435f4:	a80b883a 	mov	r5,r21
 14435f8:	100d883a 	mov	r6,r2
 14435fc:	180f883a 	mov	r7,r3
 1443600:	144c87c0 	call	144c87c <__subdf3>
 1443604:	da001717 	ldw	r8,92(sp)
 1443608:	1829883a 	mov	r20,r3
 144360c:	d8c00717 	ldw	r3,28(sp)
 1443610:	d9000e17 	ldw	r4,56(sp)
 1443614:	d9401017 	ldw	r5,64(sp)
 1443618:	42000c04 	addi	r8,r8,48
 144361c:	1023883a 	mov	r17,r2
 1443620:	1a000005 	stb	r8,0(r3)
 1443624:	880d883a 	mov	r6,r17
 1443628:	a00f883a 	mov	r7,r20
 144362c:	402b883a 	mov	r21,r8
 1443630:	144be500 	call	144be50 <__gedf2>
 1443634:	00844516 	blt	zero,r2,144474c <_dtoa_r+0x1698>
 1443638:	0009883a 	mov	r4,zero
 144363c:	014ffc34 	movhi	r5,16368
 1443640:	880d883a 	mov	r6,r17
 1443644:	a00f883a 	mov	r7,r20
 1443648:	144c87c0 	call	144c87c <__subdf3>
 144364c:	d9000e17 	ldw	r4,56(sp)
 1443650:	d9401017 	ldw	r5,64(sp)
 1443654:	100d883a 	mov	r6,r2
 1443658:	180f883a 	mov	r7,r3
 144365c:	144be500 	call	144be50 <__gedf2>
 1443660:	da801617 	ldw	r10,88(sp)
 1443664:	00843616 	blt	zero,r2,1444740 <_dtoa_r+0x168c>
 1443668:	00800044 	movi	r2,1
 144366c:	12806e0e 	bge	r2,r10,1443828 <_dtoa_r+0x774>
 1443670:	d9000717 	ldw	r4,28(sp)
 1443674:	dd801315 	stw	r22,76(sp)
 1443678:	dc001115 	stw	r16,68(sp)
 144367c:	2295883a 	add	r10,r4,r10
 1443680:	dcc01415 	stw	r19,80(sp)
 1443684:	502d883a 	mov	r22,r10
 1443688:	dcc01017 	ldw	r19,64(sp)
 144368c:	b821883a 	mov	r16,r23
 1443690:	dc801015 	stw	r18,64(sp)
 1443694:	dc800e17 	ldw	r18,56(sp)
 1443698:	00000906 	br	14436c0 <_dtoa_r+0x60c>
 144369c:	144c87c0 	call	144c87c <__subdf3>
 14436a0:	1009883a 	mov	r4,r2
 14436a4:	180b883a 	mov	r5,r3
 14436a8:	900d883a 	mov	r6,r18
 14436ac:	980f883a 	mov	r7,r19
 14436b0:	144bf300 	call	144bf30 <__ledf2>
 14436b4:	10040e16 	blt	r2,zero,14446f0 <_dtoa_r+0x163c>
 14436b8:	b821883a 	mov	r16,r23
 14436bc:	bd841026 	beq	r23,r22,1444700 <_dtoa_r+0x164c>
 14436c0:	9009883a 	mov	r4,r18
 14436c4:	980b883a 	mov	r5,r19
 14436c8:	000d883a 	mov	r6,zero
 14436cc:	01d00934 	movhi	r7,16420
 14436d0:	144c0100 	call	144c010 <__muldf3>
 14436d4:	000d883a 	mov	r6,zero
 14436d8:	01d00934 	movhi	r7,16420
 14436dc:	8809883a 	mov	r4,r17
 14436e0:	a00b883a 	mov	r5,r20
 14436e4:	1025883a 	mov	r18,r2
 14436e8:	1827883a 	mov	r19,r3
 14436ec:	144c0100 	call	144c010 <__muldf3>
 14436f0:	180b883a 	mov	r5,r3
 14436f4:	1009883a 	mov	r4,r2
 14436f8:	1823883a 	mov	r17,r3
 14436fc:	1029883a 	mov	r20,r2
 1443700:	144d14c0 	call	144d14c <__fixdfsi>
 1443704:	1009883a 	mov	r4,r2
 1443708:	102b883a 	mov	r21,r2
 144370c:	144d1d40 	call	144d1d4 <__floatsidf>
 1443710:	a009883a 	mov	r4,r20
 1443714:	880b883a 	mov	r5,r17
 1443718:	100d883a 	mov	r6,r2
 144371c:	180f883a 	mov	r7,r3
 1443720:	144c87c0 	call	144c87c <__subdf3>
 1443724:	ad400c04 	addi	r21,r21,48
 1443728:	1009883a 	mov	r4,r2
 144372c:	180b883a 	mov	r5,r3
 1443730:	900d883a 	mov	r6,r18
 1443734:	980f883a 	mov	r7,r19
 1443738:	85400005 	stb	r21,0(r16)
 144373c:	1023883a 	mov	r17,r2
 1443740:	1829883a 	mov	r20,r3
 1443744:	144bf300 	call	144bf30 <__ledf2>
 1443748:	bdc00044 	addi	r23,r23,1
 144374c:	0009883a 	mov	r4,zero
 1443750:	014ffc34 	movhi	r5,16368
 1443754:	880d883a 	mov	r6,r17
 1443758:	a00f883a 	mov	r7,r20
 144375c:	103fcf0e 	bge	r2,zero,144369c <__alt_data_end+0xfffdde9c>
 1443760:	d9801217 	ldw	r6,72(sp)
 1443764:	dc001117 	ldw	r16,68(sp)
 1443768:	d9800515 	stw	r6,20(sp)
 144376c:	8009883a 	mov	r4,r16
 1443770:	e00b883a 	mov	r5,fp
 1443774:	14467980 	call	1446798 <_Bfree>
 1443778:	d8c00517 	ldw	r3,20(sp)
 144377c:	d9002317 	ldw	r4,140(sp)
 1443780:	d9802517 	ldw	r6,148(sp)
 1443784:	b8000005 	stb	zero,0(r23)
 1443788:	18800044 	addi	r2,r3,1
 144378c:	20800015 	stw	r2,0(r4)
 1443790:	30027226 	beq	r6,zero,144415c <_dtoa_r+0x10a8>
 1443794:	35c00015 	stw	r23,0(r6)
 1443798:	d8800717 	ldw	r2,28(sp)
 144379c:	003e7406 	br	1443170 <__alt_data_end+0xfffdd970>
 14437a0:	00800434 	movhi	r2,16
 14437a4:	10bfffc4 	addi	r2,r2,-1
 14437a8:	a8aa703a 	and	r21,r21,r2
 14437ac:	a83e801e 	bne	r21,zero,14431b0 <__alt_data_end+0xfffdd9b0>
 14437b0:	00805174 	movhi	r2,325
 14437b4:	10823b04 	addi	r2,r2,2284
 14437b8:	003e7f06 	br	14431b8 <__alt_data_end+0xfffdd9b8>
 14437bc:	10c00204 	addi	r3,r2,8
 14437c0:	003e8206 	br	14431cc <__alt_data_end+0xfffdd9cc>
 14437c4:	01400434 	movhi	r5,16
 14437c8:	297fffc4 	addi	r5,r5,-1
 14437cc:	994a703a 	and	r5,r19,r5
 14437d0:	9009883a 	mov	r4,r18
 14437d4:	8c7f0044 	addi	r17,r17,-1023
 14437d8:	294ffc34 	orhi	r5,r5,16368
 14437dc:	dd000217 	ldw	r20,8(sp)
 14437e0:	d8000f15 	stw	zero,60(sp)
 14437e4:	003e9f06 	br	1443264 <__alt_data_end+0xfffdda64>
 14437e8:	00805174 	movhi	r2,325
 14437ec:	10823204 	addi	r2,r2,2248
 14437f0:	003e5f06 	br	1443170 <__alt_data_end+0xfffdd970>
 14437f4:	80001115 	stw	zero,68(r16)
 14437f8:	8009883a 	mov	r4,r16
 14437fc:	000b883a 	mov	r5,zero
 1443800:	14466f00 	call	14466f0 <_Balloc>
 1443804:	01bfffc4 	movi	r6,-1
 1443808:	d8800715 	stw	r2,28(sp)
 144380c:	80801015 	stw	r2,64(r16)
 1443810:	00800044 	movi	r2,1
 1443814:	d9800615 	stw	r6,24(sp)
 1443818:	d8800b15 	stw	r2,44(sp)
 144381c:	d8002215 	stw	zero,136(sp)
 1443820:	d9800d15 	stw	r6,52(sp)
 1443824:	d8000315 	stw	zero,12(sp)
 1443828:	d8800117 	ldw	r2,4(sp)
 144382c:	10008e16 	blt	r2,zero,1443a68 <_dtoa_r+0x9b4>
 1443830:	d9000517 	ldw	r4,20(sp)
 1443834:	00c00384 	movi	r3,14
 1443838:	19008b16 	blt	r3,r4,1443a68 <_dtoa_r+0x9b4>
 144383c:	200490fa 	slli	r2,r4,3
 1443840:	00c05174 	movhi	r3,325
 1443844:	d9802217 	ldw	r6,136(sp)
 1443848:	18c25a04 	addi	r3,r3,2408
 144384c:	1885883a 	add	r2,r3,r2
 1443850:	14400017 	ldw	r17,0(r2)
 1443854:	15000117 	ldw	r20,4(r2)
 1443858:	3001c716 	blt	r6,zero,1443f78 <_dtoa_r+0xec4>
 144385c:	880d883a 	mov	r6,r17
 1443860:	a00f883a 	mov	r7,r20
 1443864:	9009883a 	mov	r4,r18
 1443868:	980b883a 	mov	r5,r19
 144386c:	144b44c0 	call	144b44c <__divdf3>
 1443870:	180b883a 	mov	r5,r3
 1443874:	1009883a 	mov	r4,r2
 1443878:	144d14c0 	call	144d14c <__fixdfsi>
 144387c:	1009883a 	mov	r4,r2
 1443880:	102d883a 	mov	r22,r2
 1443884:	144d1d40 	call	144d1d4 <__floatsidf>
 1443888:	1009883a 	mov	r4,r2
 144388c:	180b883a 	mov	r5,r3
 1443890:	880d883a 	mov	r6,r17
 1443894:	a00f883a 	mov	r7,r20
 1443898:	144c0100 	call	144c010 <__muldf3>
 144389c:	9009883a 	mov	r4,r18
 14438a0:	980b883a 	mov	r5,r19
 14438a4:	100d883a 	mov	r6,r2
 14438a8:	180f883a 	mov	r7,r3
 14438ac:	144c87c0 	call	144c87c <__subdf3>
 14438b0:	d9000717 	ldw	r4,28(sp)
 14438b4:	d9800617 	ldw	r6,24(sp)
 14438b8:	180b883a 	mov	r5,r3
 14438bc:	b0c00c04 	addi	r3,r22,48
 14438c0:	20c00005 	stb	r3,0(r4)
 14438c4:	25c00044 	addi	r23,r4,1
 14438c8:	01000044 	movi	r4,1
 14438cc:	1011883a 	mov	r8,r2
 14438d0:	2807883a 	mov	r3,r5
 14438d4:	31003d26 	beq	r6,r4,14439cc <_dtoa_r+0x918>
 14438d8:	000d883a 	mov	r6,zero
 14438dc:	01d00934 	movhi	r7,16420
 14438e0:	1009883a 	mov	r4,r2
 14438e4:	144c0100 	call	144c010 <__muldf3>
 14438e8:	1009883a 	mov	r4,r2
 14438ec:	180b883a 	mov	r5,r3
 14438f0:	000d883a 	mov	r6,zero
 14438f4:	000f883a 	mov	r7,zero
 14438f8:	1027883a 	mov	r19,r2
 14438fc:	182b883a 	mov	r21,r3
 1443900:	144bdcc0 	call	144bdcc <__eqdf2>
 1443904:	103f9926 	beq	r2,zero,144376c <__alt_data_end+0xfffddf6c>
 1443908:	d8c00617 	ldw	r3,24(sp)
 144390c:	d9000717 	ldw	r4,28(sp)
 1443910:	b825883a 	mov	r18,r23
 1443914:	18bfffc4 	addi	r2,r3,-1
 1443918:	20ad883a 	add	r22,r4,r2
 144391c:	dc000315 	stw	r16,12(sp)
 1443920:	00000a06 	br	144394c <_dtoa_r+0x898>
 1443924:	144c0100 	call	144c010 <__muldf3>
 1443928:	1009883a 	mov	r4,r2
 144392c:	180b883a 	mov	r5,r3
 1443930:	000d883a 	mov	r6,zero
 1443934:	000f883a 	mov	r7,zero
 1443938:	1027883a 	mov	r19,r2
 144393c:	182b883a 	mov	r21,r3
 1443940:	b825883a 	mov	r18,r23
 1443944:	144bdcc0 	call	144bdcc <__eqdf2>
 1443948:	10022626 	beq	r2,zero,14441e4 <_dtoa_r+0x1130>
 144394c:	880d883a 	mov	r6,r17
 1443950:	a00f883a 	mov	r7,r20
 1443954:	9809883a 	mov	r4,r19
 1443958:	a80b883a 	mov	r5,r21
 144395c:	144b44c0 	call	144b44c <__divdf3>
 1443960:	180b883a 	mov	r5,r3
 1443964:	1009883a 	mov	r4,r2
 1443968:	144d14c0 	call	144d14c <__fixdfsi>
 144396c:	1009883a 	mov	r4,r2
 1443970:	1021883a 	mov	r16,r2
 1443974:	144d1d40 	call	144d1d4 <__floatsidf>
 1443978:	1009883a 	mov	r4,r2
 144397c:	180b883a 	mov	r5,r3
 1443980:	880d883a 	mov	r6,r17
 1443984:	a00f883a 	mov	r7,r20
 1443988:	144c0100 	call	144c010 <__muldf3>
 144398c:	9809883a 	mov	r4,r19
 1443990:	a80b883a 	mov	r5,r21
 1443994:	100d883a 	mov	r6,r2
 1443998:	180f883a 	mov	r7,r3
 144399c:	144c87c0 	call	144c87c <__subdf3>
 14439a0:	82000c04 	addi	r8,r16,48
 14439a4:	92000005 	stb	r8,0(r18)
 14439a8:	1009883a 	mov	r4,r2
 14439ac:	180b883a 	mov	r5,r3
 14439b0:	000d883a 	mov	r6,zero
 14439b4:	01d00934 	movhi	r7,16420
 14439b8:	1011883a 	mov	r8,r2
 14439bc:	bdc00044 	addi	r23,r23,1
 14439c0:	95bfd81e 	bne	r18,r22,1443924 <__alt_data_end+0xfffde124>
 14439c4:	802d883a 	mov	r22,r16
 14439c8:	dc000317 	ldw	r16,12(sp)
 14439cc:	4009883a 	mov	r4,r8
 14439d0:	180b883a 	mov	r5,r3
 14439d4:	400d883a 	mov	r6,r8
 14439d8:	180f883a 	mov	r7,r3
 14439dc:	144abb00 	call	144abb0 <__adddf3>
 14439e0:	8809883a 	mov	r4,r17
 14439e4:	a00b883a 	mov	r5,r20
 14439e8:	100d883a 	mov	r6,r2
 14439ec:	180f883a 	mov	r7,r3
 14439f0:	1027883a 	mov	r19,r2
 14439f4:	1825883a 	mov	r18,r3
 14439f8:	144bf300 	call	144bf30 <__ledf2>
 14439fc:	10000816 	blt	r2,zero,1443a20 <_dtoa_r+0x96c>
 1443a00:	8809883a 	mov	r4,r17
 1443a04:	a00b883a 	mov	r5,r20
 1443a08:	980d883a 	mov	r6,r19
 1443a0c:	900f883a 	mov	r7,r18
 1443a10:	144bdcc0 	call	144bdcc <__eqdf2>
 1443a14:	103f551e 	bne	r2,zero,144376c <__alt_data_end+0xfffddf6c>
 1443a18:	b580004c 	andi	r22,r22,1
 1443a1c:	b03f5326 	beq	r22,zero,144376c <__alt_data_end+0xfffddf6c>
 1443a20:	bd7fffc3 	ldbu	r21,-1(r23)
 1443a24:	b8bfffc4 	addi	r2,r23,-1
 1443a28:	1007883a 	mov	r3,r2
 1443a2c:	01400e44 	movi	r5,57
 1443a30:	d9800717 	ldw	r6,28(sp)
 1443a34:	00000506 	br	1443a4c <_dtoa_r+0x998>
 1443a38:	18ffffc4 	addi	r3,r3,-1
 1443a3c:	30825e26 	beq	r6,r2,14443b8 <_dtoa_r+0x1304>
 1443a40:	1d400003 	ldbu	r21,0(r3)
 1443a44:	102f883a 	mov	r23,r2
 1443a48:	10bfffc4 	addi	r2,r2,-1
 1443a4c:	a9003fcc 	andi	r4,r21,255
 1443a50:	2100201c 	xori	r4,r4,128
 1443a54:	213fe004 	addi	r4,r4,-128
 1443a58:	217ff726 	beq	r4,r5,1443a38 <__alt_data_end+0xfffde238>
 1443a5c:	aa000044 	addi	r8,r21,1
 1443a60:	12000005 	stb	r8,0(r2)
 1443a64:	003f4106 	br	144376c <__alt_data_end+0xfffddf6c>
 1443a68:	d8c00b17 	ldw	r3,44(sp)
 1443a6c:	18006726 	beq	r3,zero,1443c0c <_dtoa_r+0xb58>
 1443a70:	d9000317 	ldw	r4,12(sp)
 1443a74:	00c00044 	movi	r3,1
 1443a78:	19016a0e 	bge	r3,r4,1444024 <_dtoa_r+0xf70>
 1443a7c:	d8800617 	ldw	r2,24(sp)
 1443a80:	d8c00917 	ldw	r3,36(sp)
 1443a84:	157fffc4 	addi	r21,r2,-1
 1443a88:	1d420716 	blt	r3,r21,14442a8 <_dtoa_r+0x11f4>
 1443a8c:	1d6bc83a 	sub	r21,r3,r21
 1443a90:	d8800617 	ldw	r2,24(sp)
 1443a94:	1002c716 	blt	r2,zero,14445b4 <_dtoa_r+0x1500>
 1443a98:	dd000817 	ldw	r20,32(sp)
 1443a9c:	d8800617 	ldw	r2,24(sp)
 1443aa0:	d9800817 	ldw	r6,32(sp)
 1443aa4:	8009883a 	mov	r4,r16
 1443aa8:	01400044 	movi	r5,1
 1443aac:	308d883a 	add	r6,r6,r2
 1443ab0:	d9800815 	stw	r6,32(sp)
 1443ab4:	b0ad883a 	add	r22,r22,r2
 1443ab8:	1446b180 	call	1446b18 <__i2b>
 1443abc:	1023883a 	mov	r17,r2
 1443ac0:	a0000826 	beq	r20,zero,1443ae4 <_dtoa_r+0xa30>
 1443ac4:	0580070e 	bge	zero,r22,1443ae4 <_dtoa_r+0xa30>
 1443ac8:	b005883a 	mov	r2,r22
 1443acc:	a5812016 	blt	r20,r22,1443f50 <_dtoa_r+0xe9c>
 1443ad0:	d8c00817 	ldw	r3,32(sp)
 1443ad4:	a0a9c83a 	sub	r20,r20,r2
 1443ad8:	b0adc83a 	sub	r22,r22,r2
 1443adc:	1887c83a 	sub	r3,r3,r2
 1443ae0:	d8c00815 	stw	r3,32(sp)
 1443ae4:	d9000917 	ldw	r4,36(sp)
 1443ae8:	0100140e 	bge	zero,r4,1443b3c <_dtoa_r+0xa88>
 1443aec:	d9800b17 	ldw	r6,44(sp)
 1443af0:	3001e526 	beq	r6,zero,1444288 <_dtoa_r+0x11d4>
 1443af4:	05400e0e 	bge	zero,r21,1443b30 <_dtoa_r+0xa7c>
 1443af8:	880b883a 	mov	r5,r17
 1443afc:	8009883a 	mov	r4,r16
 1443b00:	a80d883a 	mov	r6,r21
 1443b04:	1446de40 	call	1446de4 <__pow5mult>
 1443b08:	e00d883a 	mov	r6,fp
 1443b0c:	8009883a 	mov	r4,r16
 1443b10:	100b883a 	mov	r5,r2
 1443b14:	1023883a 	mov	r17,r2
 1443b18:	1446b540 	call	1446b54 <__multiply>
 1443b1c:	102f883a 	mov	r23,r2
 1443b20:	e00b883a 	mov	r5,fp
 1443b24:	8009883a 	mov	r4,r16
 1443b28:	14467980 	call	1446798 <_Bfree>
 1443b2c:	b839883a 	mov	fp,r23
 1443b30:	d8800917 	ldw	r2,36(sp)
 1443b34:	154dc83a 	sub	r6,r2,r21
 1443b38:	3001281e 	bne	r6,zero,1443fdc <_dtoa_r+0xf28>
 1443b3c:	05c00044 	movi	r23,1
 1443b40:	8009883a 	mov	r4,r16
 1443b44:	b80b883a 	mov	r5,r23
 1443b48:	1446b180 	call	1446b18 <__i2b>
 1443b4c:	d8c00a17 	ldw	r3,40(sp)
 1443b50:	102b883a 	mov	r21,r2
 1443b54:	00c0310e 	bge	zero,r3,1443c1c <_dtoa_r+0xb68>
 1443b58:	8009883a 	mov	r4,r16
 1443b5c:	100b883a 	mov	r5,r2
 1443b60:	180d883a 	mov	r6,r3
 1443b64:	1446de40 	call	1446de4 <__pow5mult>
 1443b68:	d9000317 	ldw	r4,12(sp)
 1443b6c:	102b883a 	mov	r21,r2
 1443b70:	b9011f0e 	bge	r23,r4,1443ff0 <_dtoa_r+0xf3c>
 1443b74:	0027883a 	mov	r19,zero
 1443b78:	a8800417 	ldw	r2,16(r21)
 1443b7c:	10800104 	addi	r2,r2,4
 1443b80:	1085883a 	add	r2,r2,r2
 1443b84:	1085883a 	add	r2,r2,r2
 1443b88:	a885883a 	add	r2,r21,r2
 1443b8c:	11000017 	ldw	r4,0(r2)
 1443b90:	1446a000 	call	1446a00 <__hi0bits>
 1443b94:	00c00804 	movi	r3,32
 1443b98:	1885c83a 	sub	r2,r3,r2
 1443b9c:	00002506 	br	1443c34 <_dtoa_r+0xb80>
 1443ba0:	01800044 	movi	r6,1
 1443ba4:	d9800c15 	stw	r6,48(sp)
 1443ba8:	003dec06 	br	144335c <__alt_data_end+0xfffddb5c>
 1443bac:	d8c00817 	ldw	r3,32(sp)
 1443bb0:	d9000517 	ldw	r4,20(sp)
 1443bb4:	d8000a15 	stw	zero,40(sp)
 1443bb8:	1907c83a 	sub	r3,r3,r4
 1443bbc:	010dc83a 	sub	r6,zero,r4
 1443bc0:	d8c00815 	stw	r3,32(sp)
 1443bc4:	d9800915 	stw	r6,36(sp)
 1443bc8:	003ded06 	br	1443380 <__alt_data_end+0xfffddb80>
 1443bcc:	05adc83a 	sub	r22,zero,r22
 1443bd0:	dd800815 	stw	r22,32(sp)
 1443bd4:	002d883a 	mov	r22,zero
 1443bd8:	003de406 	br	144336c <__alt_data_end+0xfffddb6c>
 1443bdc:	d9000517 	ldw	r4,20(sp)
 1443be0:	144d1d40 	call	144d1d4 <__floatsidf>
 1443be4:	1009883a 	mov	r4,r2
 1443be8:	180b883a 	mov	r5,r3
 1443bec:	b00d883a 	mov	r6,r22
 1443bf0:	a80f883a 	mov	r7,r21
 1443bf4:	144bdcc0 	call	144bdcc <__eqdf2>
 1443bf8:	103dc726 	beq	r2,zero,1443318 <__alt_data_end+0xfffddb18>
 1443bfc:	d8800517 	ldw	r2,20(sp)
 1443c00:	10bfffc4 	addi	r2,r2,-1
 1443c04:	d8800515 	stw	r2,20(sp)
 1443c08:	003dc306 	br	1443318 <__alt_data_end+0xfffddb18>
 1443c0c:	dd400917 	ldw	r21,36(sp)
 1443c10:	dd000817 	ldw	r20,32(sp)
 1443c14:	0023883a 	mov	r17,zero
 1443c18:	003fa906 	br	1443ac0 <__alt_data_end+0xfffde2c0>
 1443c1c:	d9800317 	ldw	r6,12(sp)
 1443c20:	b981670e 	bge	r23,r6,14441c0 <_dtoa_r+0x110c>
 1443c24:	0027883a 	mov	r19,zero
 1443c28:	d8c00a17 	ldw	r3,40(sp)
 1443c2c:	183fd21e 	bne	r3,zero,1443b78 <__alt_data_end+0xfffde378>
 1443c30:	00800044 	movi	r2,1
 1443c34:	1585883a 	add	r2,r2,r22
 1443c38:	108007cc 	andi	r2,r2,31
 1443c3c:	10005f26 	beq	r2,zero,1443dbc <_dtoa_r+0xd08>
 1443c40:	00c00804 	movi	r3,32
 1443c44:	1887c83a 	sub	r3,r3,r2
 1443c48:	01000104 	movi	r4,4
 1443c4c:	20c2dd0e 	bge	r4,r3,14447c4 <_dtoa_r+0x1710>
 1443c50:	d9000817 	ldw	r4,32(sp)
 1443c54:	00c00704 	movi	r3,28
 1443c58:	1885c83a 	sub	r2,r3,r2
 1443c5c:	2089883a 	add	r4,r4,r2
 1443c60:	d9000815 	stw	r4,32(sp)
 1443c64:	a0a9883a 	add	r20,r20,r2
 1443c68:	b0ad883a 	add	r22,r22,r2
 1443c6c:	d8800817 	ldw	r2,32(sp)
 1443c70:	0080050e 	bge	zero,r2,1443c88 <_dtoa_r+0xbd4>
 1443c74:	e00b883a 	mov	r5,fp
 1443c78:	8009883a 	mov	r4,r16
 1443c7c:	100d883a 	mov	r6,r2
 1443c80:	1446f240 	call	1446f24 <__lshift>
 1443c84:	1039883a 	mov	fp,r2
 1443c88:	0580050e 	bge	zero,r22,1443ca0 <_dtoa_r+0xbec>
 1443c8c:	a80b883a 	mov	r5,r21
 1443c90:	8009883a 	mov	r4,r16
 1443c94:	b00d883a 	mov	r6,r22
 1443c98:	1446f240 	call	1446f24 <__lshift>
 1443c9c:	102b883a 	mov	r21,r2
 1443ca0:	d8c00c17 	ldw	r3,48(sp)
 1443ca4:	1801161e 	bne	r3,zero,1444100 <_dtoa_r+0x104c>
 1443ca8:	d8c00617 	ldw	r3,24(sp)
 1443cac:	00c12d0e 	bge	zero,r3,1444164 <_dtoa_r+0x10b0>
 1443cb0:	d8c00b17 	ldw	r3,44(sp)
 1443cb4:	1800571e 	bne	r3,zero,1443e14 <_dtoa_r+0xd60>
 1443cb8:	dc800717 	ldw	r18,28(sp)
 1443cbc:	dcc00617 	ldw	r19,24(sp)
 1443cc0:	9029883a 	mov	r20,r18
 1443cc4:	00000206 	br	1443cd0 <_dtoa_r+0xc1c>
 1443cc8:	14467c00 	call	14467c0 <__multadd>
 1443ccc:	1039883a 	mov	fp,r2
 1443cd0:	e009883a 	mov	r4,fp
 1443cd4:	a80b883a 	mov	r5,r21
 1443cd8:	1442e8c0 	call	1442e8c <quorem>
 1443cdc:	10800c04 	addi	r2,r2,48
 1443ce0:	90800005 	stb	r2,0(r18)
 1443ce4:	94800044 	addi	r18,r18,1
 1443ce8:	9507c83a 	sub	r3,r18,r20
 1443cec:	8009883a 	mov	r4,r16
 1443cf0:	e00b883a 	mov	r5,fp
 1443cf4:	01800284 	movi	r6,10
 1443cf8:	000f883a 	mov	r7,zero
 1443cfc:	1cfff216 	blt	r3,r19,1443cc8 <__alt_data_end+0xfffde4c8>
 1443d00:	1011883a 	mov	r8,r2
 1443d04:	d8800617 	ldw	r2,24(sp)
 1443d08:	00822e0e 	bge	zero,r2,14445c4 <_dtoa_r+0x1510>
 1443d0c:	d9000717 	ldw	r4,28(sp)
 1443d10:	0025883a 	mov	r18,zero
 1443d14:	20af883a 	add	r23,r4,r2
 1443d18:	e00b883a 	mov	r5,fp
 1443d1c:	01800044 	movi	r6,1
 1443d20:	8009883a 	mov	r4,r16
 1443d24:	da001715 	stw	r8,92(sp)
 1443d28:	1446f240 	call	1446f24 <__lshift>
 1443d2c:	1009883a 	mov	r4,r2
 1443d30:	a80b883a 	mov	r5,r21
 1443d34:	1039883a 	mov	fp,r2
 1443d38:	144706c0 	call	144706c <__mcmp>
 1443d3c:	da001717 	ldw	r8,92(sp)
 1443d40:	00816e0e 	bge	zero,r2,14442fc <_dtoa_r+0x1248>
 1443d44:	b93fffc3 	ldbu	r4,-1(r23)
 1443d48:	b8bfffc4 	addi	r2,r23,-1
 1443d4c:	1007883a 	mov	r3,r2
 1443d50:	01800e44 	movi	r6,57
 1443d54:	d9c00717 	ldw	r7,28(sp)
 1443d58:	00000506 	br	1443d70 <_dtoa_r+0xcbc>
 1443d5c:	18ffffc4 	addi	r3,r3,-1
 1443d60:	38811926 	beq	r7,r2,14441c8 <_dtoa_r+0x1114>
 1443d64:	19000003 	ldbu	r4,0(r3)
 1443d68:	102f883a 	mov	r23,r2
 1443d6c:	10bfffc4 	addi	r2,r2,-1
 1443d70:	21403fcc 	andi	r5,r4,255
 1443d74:	2940201c 	xori	r5,r5,128
 1443d78:	297fe004 	addi	r5,r5,-128
 1443d7c:	29bff726 	beq	r5,r6,1443d5c <__alt_data_end+0xfffde55c>
 1443d80:	21000044 	addi	r4,r4,1
 1443d84:	11000005 	stb	r4,0(r2)
 1443d88:	8009883a 	mov	r4,r16
 1443d8c:	a80b883a 	mov	r5,r21
 1443d90:	14467980 	call	1446798 <_Bfree>
 1443d94:	883e7526 	beq	r17,zero,144376c <__alt_data_end+0xfffddf6c>
 1443d98:	90000426 	beq	r18,zero,1443dac <_dtoa_r+0xcf8>
 1443d9c:	94400326 	beq	r18,r17,1443dac <_dtoa_r+0xcf8>
 1443da0:	8009883a 	mov	r4,r16
 1443da4:	900b883a 	mov	r5,r18
 1443da8:	14467980 	call	1446798 <_Bfree>
 1443dac:	8009883a 	mov	r4,r16
 1443db0:	880b883a 	mov	r5,r17
 1443db4:	14467980 	call	1446798 <_Bfree>
 1443db8:	003e6c06 	br	144376c <__alt_data_end+0xfffddf6c>
 1443dbc:	00800704 	movi	r2,28
 1443dc0:	d9800817 	ldw	r6,32(sp)
 1443dc4:	a0a9883a 	add	r20,r20,r2
 1443dc8:	b0ad883a 	add	r22,r22,r2
 1443dcc:	308d883a 	add	r6,r6,r2
 1443dd0:	d9800815 	stw	r6,32(sp)
 1443dd4:	003fa506 	br	1443c6c <__alt_data_end+0xfffde46c>
 1443dd8:	013efb84 	movi	r4,-1042
 1443ddc:	246bc83a 	sub	r21,r4,r17
 1443de0:	9548983a 	sll	r4,r18,r21
 1443de4:	003d1806 	br	1443248 <__alt_data_end+0xfffdda48>
 1443de8:	d8000c15 	stw	zero,48(sp)
 1443dec:	003d5b06 	br	144335c <__alt_data_end+0xfffddb5c>
 1443df0:	880b883a 	mov	r5,r17
 1443df4:	8009883a 	mov	r4,r16
 1443df8:	01800284 	movi	r6,10
 1443dfc:	000f883a 	mov	r7,zero
 1443e00:	14467c00 	call	14467c0 <__multadd>
 1443e04:	1023883a 	mov	r17,r2
 1443e08:	d8800d17 	ldw	r2,52(sp)
 1443e0c:	0082550e 	bge	zero,r2,1444764 <_dtoa_r+0x16b0>
 1443e10:	d8800615 	stw	r2,24(sp)
 1443e14:	0500050e 	bge	zero,r20,1443e2c <_dtoa_r+0xd78>
 1443e18:	880b883a 	mov	r5,r17
 1443e1c:	8009883a 	mov	r4,r16
 1443e20:	a00d883a 	mov	r6,r20
 1443e24:	1446f240 	call	1446f24 <__lshift>
 1443e28:	1023883a 	mov	r17,r2
 1443e2c:	98016a1e 	bne	r19,zero,14443d8 <_dtoa_r+0x1324>
 1443e30:	8829883a 	mov	r20,r17
 1443e34:	d9000617 	ldw	r4,24(sp)
 1443e38:	dcc00717 	ldw	r19,28(sp)
 1443e3c:	9480004c 	andi	r18,r18,1
 1443e40:	20bfffc4 	addi	r2,r4,-1
 1443e44:	9885883a 	add	r2,r19,r2
 1443e48:	d8800415 	stw	r2,16(sp)
 1443e4c:	dc800615 	stw	r18,24(sp)
 1443e50:	e009883a 	mov	r4,fp
 1443e54:	a80b883a 	mov	r5,r21
 1443e58:	1442e8c0 	call	1442e8c <quorem>
 1443e5c:	e009883a 	mov	r4,fp
 1443e60:	880b883a 	mov	r5,r17
 1443e64:	102f883a 	mov	r23,r2
 1443e68:	144706c0 	call	144706c <__mcmp>
 1443e6c:	8009883a 	mov	r4,r16
 1443e70:	a80b883a 	mov	r5,r21
 1443e74:	a00d883a 	mov	r6,r20
 1443e78:	102d883a 	mov	r22,r2
 1443e7c:	14470cc0 	call	14470cc <__mdiff>
 1443e80:	1007883a 	mov	r3,r2
 1443e84:	10800317 	ldw	r2,12(r2)
 1443e88:	bc800c04 	addi	r18,r23,48
 1443e8c:	1000971e 	bne	r2,zero,14440ec <_dtoa_r+0x1038>
 1443e90:	180b883a 	mov	r5,r3
 1443e94:	e009883a 	mov	r4,fp
 1443e98:	d8c01515 	stw	r3,84(sp)
 1443e9c:	144706c0 	call	144706c <__mcmp>
 1443ea0:	d8c01517 	ldw	r3,84(sp)
 1443ea4:	8009883a 	mov	r4,r16
 1443ea8:	d8801515 	stw	r2,84(sp)
 1443eac:	180b883a 	mov	r5,r3
 1443eb0:	14467980 	call	1446798 <_Bfree>
 1443eb4:	d8801517 	ldw	r2,84(sp)
 1443eb8:	1000041e 	bne	r2,zero,1443ecc <_dtoa_r+0xe18>
 1443ebc:	d9800317 	ldw	r6,12(sp)
 1443ec0:	3000021e 	bne	r6,zero,1443ecc <_dtoa_r+0xe18>
 1443ec4:	d8c00617 	ldw	r3,24(sp)
 1443ec8:	18007626 	beq	r3,zero,14440a4 <_dtoa_r+0xff0>
 1443ecc:	b0005b16 	blt	r22,zero,144403c <_dtoa_r+0xf88>
 1443ed0:	b000041e 	bne	r22,zero,1443ee4 <_dtoa_r+0xe30>
 1443ed4:	d9000317 	ldw	r4,12(sp)
 1443ed8:	2000021e 	bne	r4,zero,1443ee4 <_dtoa_r+0xe30>
 1443edc:	d8c00617 	ldw	r3,24(sp)
 1443ee0:	18005626 	beq	r3,zero,144403c <_dtoa_r+0xf88>
 1443ee4:	00814d16 	blt	zero,r2,144441c <_dtoa_r+0x1368>
 1443ee8:	d8c00417 	ldw	r3,16(sp)
 1443eec:	9d800044 	addi	r22,r19,1
 1443ef0:	9c800005 	stb	r18,0(r19)
 1443ef4:	b02f883a 	mov	r23,r22
 1443ef8:	98c14c26 	beq	r19,r3,144442c <_dtoa_r+0x1378>
 1443efc:	e00b883a 	mov	r5,fp
 1443f00:	8009883a 	mov	r4,r16
 1443f04:	01800284 	movi	r6,10
 1443f08:	000f883a 	mov	r7,zero
 1443f0c:	14467c00 	call	14467c0 <__multadd>
 1443f10:	1039883a 	mov	fp,r2
 1443f14:	8d006d26 	beq	r17,r20,14440cc <_dtoa_r+0x1018>
 1443f18:	880b883a 	mov	r5,r17
 1443f1c:	01800284 	movi	r6,10
 1443f20:	000f883a 	mov	r7,zero
 1443f24:	8009883a 	mov	r4,r16
 1443f28:	14467c00 	call	14467c0 <__multadd>
 1443f2c:	a00b883a 	mov	r5,r20
 1443f30:	8009883a 	mov	r4,r16
 1443f34:	01800284 	movi	r6,10
 1443f38:	000f883a 	mov	r7,zero
 1443f3c:	1023883a 	mov	r17,r2
 1443f40:	14467c00 	call	14467c0 <__multadd>
 1443f44:	1029883a 	mov	r20,r2
 1443f48:	b027883a 	mov	r19,r22
 1443f4c:	003fc006 	br	1443e50 <__alt_data_end+0xfffde650>
 1443f50:	a005883a 	mov	r2,r20
 1443f54:	003ede06 	br	1443ad0 <__alt_data_end+0xfffde2d0>
 1443f58:	01000044 	movi	r4,1
 1443f5c:	d9000b15 	stw	r4,44(sp)
 1443f60:	d9802217 	ldw	r6,136(sp)
 1443f64:	0180dc0e 	bge	zero,r6,14442d8 <_dtoa_r+0x1224>
 1443f68:	3023883a 	mov	r17,r6
 1443f6c:	d9800d15 	stw	r6,52(sp)
 1443f70:	d9800615 	stw	r6,24(sp)
 1443f74:	003d1e06 	br	14433f0 <__alt_data_end+0xfffddbf0>
 1443f78:	d8800617 	ldw	r2,24(sp)
 1443f7c:	00be3716 	blt	zero,r2,144385c <__alt_data_end+0xfffde05c>
 1443f80:	1000be1e 	bne	r2,zero,144427c <_dtoa_r+0x11c8>
 1443f84:	8809883a 	mov	r4,r17
 1443f88:	a00b883a 	mov	r5,r20
 1443f8c:	000d883a 	mov	r6,zero
 1443f90:	01d00534 	movhi	r7,16404
 1443f94:	144c0100 	call	144c010 <__muldf3>
 1443f98:	1009883a 	mov	r4,r2
 1443f9c:	180b883a 	mov	r5,r3
 1443fa0:	900d883a 	mov	r6,r18
 1443fa4:	980f883a 	mov	r7,r19
 1443fa8:	144be500 	call	144be50 <__gedf2>
 1443fac:	002b883a 	mov	r21,zero
 1443fb0:	0023883a 	mov	r17,zero
 1443fb4:	10007a16 	blt	r2,zero,14441a0 <_dtoa_r+0x10ec>
 1443fb8:	d9002217 	ldw	r4,136(sp)
 1443fbc:	ddc00717 	ldw	r23,28(sp)
 1443fc0:	0108303a 	nor	r4,zero,r4
 1443fc4:	d9000515 	stw	r4,20(sp)
 1443fc8:	8009883a 	mov	r4,r16
 1443fcc:	a80b883a 	mov	r5,r21
 1443fd0:	14467980 	call	1446798 <_Bfree>
 1443fd4:	883f751e 	bne	r17,zero,1443dac <__alt_data_end+0xfffde5ac>
 1443fd8:	003de406 	br	144376c <__alt_data_end+0xfffddf6c>
 1443fdc:	e00b883a 	mov	r5,fp
 1443fe0:	8009883a 	mov	r4,r16
 1443fe4:	1446de40 	call	1446de4 <__pow5mult>
 1443fe8:	1039883a 	mov	fp,r2
 1443fec:	003ed306 	br	1443b3c <__alt_data_end+0xfffde33c>
 1443ff0:	903ee01e 	bne	r18,zero,1443b74 <__alt_data_end+0xfffde374>
 1443ff4:	00800434 	movhi	r2,16
 1443ff8:	10bfffc4 	addi	r2,r2,-1
 1443ffc:	9884703a 	and	r2,r19,r2
 1444000:	103f081e 	bne	r2,zero,1443c24 <__alt_data_end+0xfffde424>
 1444004:	9cdffc2c 	andhi	r19,r19,32752
 1444008:	983f0626 	beq	r19,zero,1443c24 <__alt_data_end+0xfffde424>
 144400c:	d8800817 	ldw	r2,32(sp)
 1444010:	b5800044 	addi	r22,r22,1
 1444014:	04c00044 	movi	r19,1
 1444018:	10800044 	addi	r2,r2,1
 144401c:	d8800815 	stw	r2,32(sp)
 1444020:	003f0106 	br	1443c28 <__alt_data_end+0xfffde428>
 1444024:	d9800f17 	ldw	r6,60(sp)
 1444028:	30016826 	beq	r6,zero,14445cc <_dtoa_r+0x1518>
 144402c:	10810cc4 	addi	r2,r2,1075
 1444030:	dd400917 	ldw	r21,36(sp)
 1444034:	dd000817 	ldw	r20,32(sp)
 1444038:	003e9906 	br	1443aa0 <__alt_data_end+0xfffde2a0>
 144403c:	9011883a 	mov	r8,r18
 1444040:	4007883a 	mov	r3,r8
 1444044:	e02d883a 	mov	r22,fp
 1444048:	0080100e 	bge	zero,r2,144408c <_dtoa_r+0xfd8>
 144404c:	01800044 	movi	r6,1
 1444050:	8009883a 	mov	r4,r16
 1444054:	e00b883a 	mov	r5,fp
 1444058:	da001515 	stw	r8,84(sp)
 144405c:	da001715 	stw	r8,92(sp)
 1444060:	1446f240 	call	1446f24 <__lshift>
 1444064:	1009883a 	mov	r4,r2
 1444068:	a80b883a 	mov	r5,r21
 144406c:	102d883a 	mov	r22,r2
 1444070:	144706c0 	call	144706c <__mcmp>
 1444074:	d8c01517 	ldw	r3,84(sp)
 1444078:	da001717 	ldw	r8,92(sp)
 144407c:	0081a50e 	bge	zero,r2,1444714 <_dtoa_r+0x1660>
 1444080:	00800e44 	movi	r2,57
 1444084:	40817b26 	beq	r8,r2,1444674 <_dtoa_r+0x15c0>
 1444088:	40c00044 	addi	r3,r8,1
 144408c:	8825883a 	mov	r18,r17
 1444090:	9dc00044 	addi	r23,r19,1
 1444094:	98c00005 	stb	r3,0(r19)
 1444098:	a023883a 	mov	r17,r20
 144409c:	b039883a 	mov	fp,r22
 14440a0:	003f3906 	br	1443d88 <__alt_data_end+0xfffde588>
 14440a4:	00800e44 	movi	r2,57
 14440a8:	9011883a 	mov	r8,r18
 14440ac:	90817226 	beq	r18,r2,1444678 <_dtoa_r+0x15c4>
 14440b0:	0580010e 	bge	zero,r22,14440b8 <_dtoa_r+0x1004>
 14440b4:	ba000c44 	addi	r8,r23,49
 14440b8:	8825883a 	mov	r18,r17
 14440bc:	9dc00044 	addi	r23,r19,1
 14440c0:	9a000005 	stb	r8,0(r19)
 14440c4:	a023883a 	mov	r17,r20
 14440c8:	003f2f06 	br	1443d88 <__alt_data_end+0xfffde588>
 14440cc:	880b883a 	mov	r5,r17
 14440d0:	8009883a 	mov	r4,r16
 14440d4:	01800284 	movi	r6,10
 14440d8:	000f883a 	mov	r7,zero
 14440dc:	14467c00 	call	14467c0 <__multadd>
 14440e0:	1023883a 	mov	r17,r2
 14440e4:	1029883a 	mov	r20,r2
 14440e8:	003f9706 	br	1443f48 <__alt_data_end+0xfffde748>
 14440ec:	8009883a 	mov	r4,r16
 14440f0:	180b883a 	mov	r5,r3
 14440f4:	14467980 	call	1446798 <_Bfree>
 14440f8:	00800044 	movi	r2,1
 14440fc:	003f7306 	br	1443ecc <__alt_data_end+0xfffde6cc>
 1444100:	e009883a 	mov	r4,fp
 1444104:	a80b883a 	mov	r5,r21
 1444108:	144706c0 	call	144706c <__mcmp>
 144410c:	103ee60e 	bge	r2,zero,1443ca8 <__alt_data_end+0xfffde4a8>
 1444110:	8009883a 	mov	r4,r16
 1444114:	e00b883a 	mov	r5,fp
 1444118:	01800284 	movi	r6,10
 144411c:	000f883a 	mov	r7,zero
 1444120:	14467c00 	call	14467c0 <__multadd>
 1444124:	d9000517 	ldw	r4,20(sp)
 1444128:	d9800b17 	ldw	r6,44(sp)
 144412c:	1039883a 	mov	fp,r2
 1444130:	213fffc4 	addi	r4,r4,-1
 1444134:	d9000515 	stw	r4,20(sp)
 1444138:	303f2d1e 	bne	r6,zero,1443df0 <__alt_data_end+0xfffde5f0>
 144413c:	d9000d17 	ldw	r4,52(sp)
 1444140:	0101780e 	bge	zero,r4,1444724 <_dtoa_r+0x1670>
 1444144:	d9000615 	stw	r4,24(sp)
 1444148:	003edb06 	br	1443cb8 <__alt_data_end+0xfffde4b8>
 144414c:	00800084 	movi	r2,2
 1444150:	30818e1e 	bne	r6,r2,144478c <_dtoa_r+0x16d8>
 1444154:	d8000b15 	stw	zero,44(sp)
 1444158:	003f8106 	br	1443f60 <__alt_data_end+0xfffde760>
 144415c:	d8800717 	ldw	r2,28(sp)
 1444160:	003c0306 	br	1443170 <__alt_data_end+0xfffdd970>
 1444164:	d9000317 	ldw	r4,12(sp)
 1444168:	00800084 	movi	r2,2
 144416c:	113ed00e 	bge	r2,r4,1443cb0 <__alt_data_end+0xfffde4b0>
 1444170:	d8c00617 	ldw	r3,24(sp)
 1444174:	183f901e 	bne	r3,zero,1443fb8 <__alt_data_end+0xfffde7b8>
 1444178:	a80b883a 	mov	r5,r21
 144417c:	8009883a 	mov	r4,r16
 1444180:	01800144 	movi	r6,5
 1444184:	000f883a 	mov	r7,zero
 1444188:	14467c00 	call	14467c0 <__multadd>
 144418c:	e009883a 	mov	r4,fp
 1444190:	100b883a 	mov	r5,r2
 1444194:	102b883a 	mov	r21,r2
 1444198:	144706c0 	call	144706c <__mcmp>
 144419c:	00bf860e 	bge	zero,r2,1443fb8 <__alt_data_end+0xfffde7b8>
 14441a0:	d9800717 	ldw	r6,28(sp)
 14441a4:	00800c44 	movi	r2,49
 14441a8:	30800005 	stb	r2,0(r6)
 14441ac:	d8800517 	ldw	r2,20(sp)
 14441b0:	35c00044 	addi	r23,r6,1
 14441b4:	10800044 	addi	r2,r2,1
 14441b8:	d8800515 	stw	r2,20(sp)
 14441bc:	003f8206 	br	1443fc8 <__alt_data_end+0xfffde7c8>
 14441c0:	903e981e 	bne	r18,zero,1443c24 <__alt_data_end+0xfffde424>
 14441c4:	003f8b06 	br	1443ff4 <__alt_data_end+0xfffde7f4>
 14441c8:	d9800517 	ldw	r6,20(sp)
 14441cc:	d8c00717 	ldw	r3,28(sp)
 14441d0:	00800c44 	movi	r2,49
 14441d4:	31800044 	addi	r6,r6,1
 14441d8:	d9800515 	stw	r6,20(sp)
 14441dc:	18800005 	stb	r2,0(r3)
 14441e0:	003ee906 	br	1443d88 <__alt_data_end+0xfffde588>
 14441e4:	dc000317 	ldw	r16,12(sp)
 14441e8:	003d6006 	br	144376c <__alt_data_end+0xfffddf6c>
 14441ec:	8809883a 	mov	r4,r17
 14441f0:	144d1d40 	call	144d1d4 <__floatsidf>
 14441f4:	a009883a 	mov	r4,r20
 14441f8:	a80b883a 	mov	r5,r21
 14441fc:	100d883a 	mov	r6,r2
 1444200:	180f883a 	mov	r7,r3
 1444204:	144c0100 	call	144c010 <__muldf3>
 1444208:	1009883a 	mov	r4,r2
 144420c:	180b883a 	mov	r5,r3
 1444210:	000d883a 	mov	r6,zero
 1444214:	01d00734 	movhi	r7,16412
 1444218:	144abb00 	call	144abb0 <__adddf3>
 144421c:	1023883a 	mov	r17,r2
 1444220:	00bf3034 	movhi	r2,64704
 1444224:	1885883a 	add	r2,r3,r2
 1444228:	d8800e15 	stw	r2,56(sp)
 144422c:	a009883a 	mov	r4,r20
 1444230:	a80b883a 	mov	r5,r21
 1444234:	000d883a 	mov	r6,zero
 1444238:	01d00534 	movhi	r7,16404
 144423c:	144c87c0 	call	144c87c <__subdf3>
 1444240:	d9c00e17 	ldw	r7,56(sp)
 1444244:	1009883a 	mov	r4,r2
 1444248:	180b883a 	mov	r5,r3
 144424c:	880d883a 	mov	r6,r17
 1444250:	102b883a 	mov	r21,r2
 1444254:	1829883a 	mov	r20,r3
 1444258:	144be500 	call	144be50 <__gedf2>
 144425c:	00807716 	blt	zero,r2,144443c <_dtoa_r+0x1388>
 1444260:	d8800e17 	ldw	r2,56(sp)
 1444264:	a809883a 	mov	r4,r21
 1444268:	a00b883a 	mov	r5,r20
 144426c:	11e0003c 	xorhi	r7,r2,32768
 1444270:	880d883a 	mov	r6,r17
 1444274:	144bf300 	call	144bf30 <__ledf2>
 1444278:	103d6b0e 	bge	r2,zero,1443828 <__alt_data_end+0xfffde028>
 144427c:	002b883a 	mov	r21,zero
 1444280:	0023883a 	mov	r17,zero
 1444284:	003f4c06 	br	1443fb8 <__alt_data_end+0xfffde7b8>
 1444288:	d9800917 	ldw	r6,36(sp)
 144428c:	e00b883a 	mov	r5,fp
 1444290:	8009883a 	mov	r4,r16
 1444294:	1446de40 	call	1446de4 <__pow5mult>
 1444298:	1039883a 	mov	fp,r2
 144429c:	003e2706 	br	1443b3c <__alt_data_end+0xfffde33c>
 14442a0:	d8000b15 	stw	zero,44(sp)
 14442a4:	003c4906 	br	14433cc <__alt_data_end+0xfffddbcc>
 14442a8:	d9000917 	ldw	r4,36(sp)
 14442ac:	d9800a17 	ldw	r6,40(sp)
 14442b0:	dd400915 	stw	r21,36(sp)
 14442b4:	a905c83a 	sub	r2,r21,r4
 14442b8:	308d883a 	add	r6,r6,r2
 14442bc:	d9800a15 	stw	r6,40(sp)
 14442c0:	002b883a 	mov	r21,zero
 14442c4:	003df206 	br	1443a90 <__alt_data_end+0xfffde290>
 14442c8:	dc800e15 	stw	r18,56(sp)
 14442cc:	982b883a 	mov	r21,r19
 14442d0:	04400084 	movi	r17,2
 14442d4:	003c7406 	br	14434a8 <__alt_data_end+0xfffddca8>
 14442d8:	04400044 	movi	r17,1
 14442dc:	dc400d15 	stw	r17,52(sp)
 14442e0:	dc400615 	stw	r17,24(sp)
 14442e4:	dc402215 	stw	r17,136(sp)
 14442e8:	80001115 	stw	zero,68(r16)
 14442ec:	000b883a 	mov	r5,zero
 14442f0:	003c4a06 	br	144341c <__alt_data_end+0xfffddc1c>
 14442f4:	3023883a 	mov	r17,r6
 14442f8:	003ffb06 	br	14442e8 <__alt_data_end+0xfffdeae8>
 14442fc:	1000021e 	bne	r2,zero,1444308 <_dtoa_r+0x1254>
 1444300:	4200004c 	andi	r8,r8,1
 1444304:	403e8f1e 	bne	r8,zero,1443d44 <__alt_data_end+0xfffde544>
 1444308:	01000c04 	movi	r4,48
 144430c:	00000106 	br	1444314 <_dtoa_r+0x1260>
 1444310:	102f883a 	mov	r23,r2
 1444314:	b8bfffc4 	addi	r2,r23,-1
 1444318:	10c00007 	ldb	r3,0(r2)
 144431c:	193ffc26 	beq	r3,r4,1444310 <__alt_data_end+0xfffdeb10>
 1444320:	003e9906 	br	1443d88 <__alt_data_end+0xfffde588>
 1444324:	d9000517 	ldw	r4,20(sp)
 1444328:	012fc83a 	sub	r23,zero,r4
 144432c:	b800ad26 	beq	r23,zero,14445e4 <_dtoa_r+0x1530>
 1444330:	b88003cc 	andi	r2,r23,15
 1444334:	100490fa 	slli	r2,r2,3
 1444338:	00c05174 	movhi	r3,325
 144433c:	18c25a04 	addi	r3,r3,2408
 1444340:	1885883a 	add	r2,r3,r2
 1444344:	11800017 	ldw	r6,0(r2)
 1444348:	11c00117 	ldw	r7,4(r2)
 144434c:	b82fd13a 	srai	r23,r23,4
 1444350:	9009883a 	mov	r4,r18
 1444354:	980b883a 	mov	r5,r19
 1444358:	144c0100 	call	144c010 <__muldf3>
 144435c:	1029883a 	mov	r20,r2
 1444360:	182b883a 	mov	r21,r3
 1444364:	b800f426 	beq	r23,zero,1444738 <_dtoa_r+0x1684>
 1444368:	02005174 	movhi	r8,325
 144436c:	42025004 	addi	r8,r8,2368
 1444370:	8029883a 	mov	r20,r16
 1444374:	04400084 	movi	r17,2
 1444378:	4021883a 	mov	r16,r8
 144437c:	b980004c 	andi	r6,r23,1
 1444380:	1009883a 	mov	r4,r2
 1444384:	b82fd07a 	srai	r23,r23,1
 1444388:	180b883a 	mov	r5,r3
 144438c:	30000426 	beq	r6,zero,14443a0 <_dtoa_r+0x12ec>
 1444390:	81800017 	ldw	r6,0(r16)
 1444394:	81c00117 	ldw	r7,4(r16)
 1444398:	8c400044 	addi	r17,r17,1
 144439c:	144c0100 	call	144c010 <__muldf3>
 14443a0:	84000204 	addi	r16,r16,8
 14443a4:	b83ff51e 	bne	r23,zero,144437c <__alt_data_end+0xfffdeb7c>
 14443a8:	a021883a 	mov	r16,r20
 14443ac:	182b883a 	mov	r21,r3
 14443b0:	1029883a 	mov	r20,r2
 14443b4:	003c5506 	br	144350c <__alt_data_end+0xfffddd0c>
 14443b8:	d9800517 	ldw	r6,20(sp)
 14443bc:	d9000717 	ldw	r4,28(sp)
 14443c0:	00c00c04 	movi	r3,48
 14443c4:	31800044 	addi	r6,r6,1
 14443c8:	d9800515 	stw	r6,20(sp)
 14443cc:	20c00005 	stb	r3,0(r4)
 14443d0:	02000c44 	movi	r8,49
 14443d4:	003da206 	br	1443a60 <__alt_data_end+0xfffde260>
 14443d8:	89400117 	ldw	r5,4(r17)
 14443dc:	8009883a 	mov	r4,r16
 14443e0:	14466f00 	call	14466f0 <_Balloc>
 14443e4:	89800417 	ldw	r6,16(r17)
 14443e8:	11000304 	addi	r4,r2,12
 14443ec:	89400304 	addi	r5,r17,12
 14443f0:	31800084 	addi	r6,r6,2
 14443f4:	318d883a 	add	r6,r6,r6
 14443f8:	318d883a 	add	r6,r6,r6
 14443fc:	1027883a 	mov	r19,r2
 1444400:	14463380 	call	1446338 <memcpy>
 1444404:	8009883a 	mov	r4,r16
 1444408:	980b883a 	mov	r5,r19
 144440c:	01800044 	movi	r6,1
 1444410:	1446f240 	call	1446f24 <__lshift>
 1444414:	1029883a 	mov	r20,r2
 1444418:	003e8606 	br	1443e34 <__alt_data_end+0xfffde634>
 144441c:	00800e44 	movi	r2,57
 1444420:	90809526 	beq	r18,r2,1444678 <_dtoa_r+0x15c4>
 1444424:	92000044 	addi	r8,r18,1
 1444428:	003f2306 	br	14440b8 <__alt_data_end+0xfffde8b8>
 144442c:	9011883a 	mov	r8,r18
 1444430:	8825883a 	mov	r18,r17
 1444434:	a023883a 	mov	r17,r20
 1444438:	003e3706 	br	1443d18 <__alt_data_end+0xfffde518>
 144443c:	002b883a 	mov	r21,zero
 1444440:	0023883a 	mov	r17,zero
 1444444:	003f5606 	br	14441a0 <__alt_data_end+0xfffde9a0>
 1444448:	51bfffc4 	addi	r6,r10,-1
 144444c:	300490fa 	slli	r2,r6,3
 1444450:	00c05174 	movhi	r3,325
 1444454:	18c25a04 	addi	r3,r3,2408
 1444458:	1885883a 	add	r2,r3,r2
 144445c:	d9c00e17 	ldw	r7,56(sp)
 1444460:	11000017 	ldw	r4,0(r2)
 1444464:	11400117 	ldw	r5,4(r2)
 1444468:	d8800717 	ldw	r2,28(sp)
 144446c:	d9801015 	stw	r6,64(sp)
 1444470:	880d883a 	mov	r6,r17
 1444474:	da801615 	stw	r10,88(sp)
 1444478:	15c00044 	addi	r23,r2,1
 144447c:	144c0100 	call	144c010 <__muldf3>
 1444480:	a80b883a 	mov	r5,r21
 1444484:	a009883a 	mov	r4,r20
 1444488:	d8c01115 	stw	r3,68(sp)
 144448c:	d8800e15 	stw	r2,56(sp)
 1444490:	144d14c0 	call	144d14c <__fixdfsi>
 1444494:	1009883a 	mov	r4,r2
 1444498:	1023883a 	mov	r17,r2
 144449c:	144d1d40 	call	144d1d4 <__floatsidf>
 14444a0:	a009883a 	mov	r4,r20
 14444a4:	a80b883a 	mov	r5,r21
 14444a8:	100d883a 	mov	r6,r2
 14444ac:	180f883a 	mov	r7,r3
 14444b0:	144c87c0 	call	144c87c <__subdf3>
 14444b4:	1813883a 	mov	r9,r3
 14444b8:	d8c00717 	ldw	r3,28(sp)
 14444bc:	8c400c04 	addi	r17,r17,48
 14444c0:	1011883a 	mov	r8,r2
 14444c4:	1c400005 	stb	r17,0(r3)
 14444c8:	da801617 	ldw	r10,88(sp)
 14444cc:	00800044 	movi	r2,1
 14444d0:	50802326 	beq	r10,r2,1444560 <_dtoa_r+0x14ac>
 14444d4:	d8800717 	ldw	r2,28(sp)
 14444d8:	b82b883a 	mov	r21,r23
 14444dc:	dc001315 	stw	r16,76(sp)
 14444e0:	12a9883a 	add	r20,r2,r10
 14444e4:	4807883a 	mov	r3,r9
 14444e8:	4005883a 	mov	r2,r8
 14444ec:	dc801415 	stw	r18,80(sp)
 14444f0:	000d883a 	mov	r6,zero
 14444f4:	01d00934 	movhi	r7,16420
 14444f8:	1009883a 	mov	r4,r2
 14444fc:	180b883a 	mov	r5,r3
 1444500:	144c0100 	call	144c010 <__muldf3>
 1444504:	180b883a 	mov	r5,r3
 1444508:	1009883a 	mov	r4,r2
 144450c:	1821883a 	mov	r16,r3
 1444510:	1025883a 	mov	r18,r2
 1444514:	144d14c0 	call	144d14c <__fixdfsi>
 1444518:	1009883a 	mov	r4,r2
 144451c:	1023883a 	mov	r17,r2
 1444520:	144d1d40 	call	144d1d4 <__floatsidf>
 1444524:	9009883a 	mov	r4,r18
 1444528:	800b883a 	mov	r5,r16
 144452c:	100d883a 	mov	r6,r2
 1444530:	180f883a 	mov	r7,r3
 1444534:	8c400c04 	addi	r17,r17,48
 1444538:	144c87c0 	call	144c87c <__subdf3>
 144453c:	ad400044 	addi	r21,r21,1
 1444540:	ac7fffc5 	stb	r17,-1(r21)
 1444544:	ad3fea1e 	bne	r21,r20,14444f0 <__alt_data_end+0xfffdecf0>
 1444548:	1813883a 	mov	r9,r3
 144454c:	d8c01017 	ldw	r3,64(sp)
 1444550:	dc001317 	ldw	r16,76(sp)
 1444554:	dc801417 	ldw	r18,80(sp)
 1444558:	1011883a 	mov	r8,r2
 144455c:	b8ef883a 	add	r23,r23,r3
 1444560:	d9000e17 	ldw	r4,56(sp)
 1444564:	d9401117 	ldw	r5,68(sp)
 1444568:	000d883a 	mov	r6,zero
 144456c:	01cff834 	movhi	r7,16352
 1444570:	da001715 	stw	r8,92(sp)
 1444574:	da401515 	stw	r9,84(sp)
 1444578:	144abb00 	call	144abb0 <__adddf3>
 144457c:	da001717 	ldw	r8,92(sp)
 1444580:	da401517 	ldw	r9,84(sp)
 1444584:	1009883a 	mov	r4,r2
 1444588:	400d883a 	mov	r6,r8
 144458c:	480f883a 	mov	r7,r9
 1444590:	180b883a 	mov	r5,r3
 1444594:	144bf300 	call	144bf30 <__ledf2>
 1444598:	da001717 	ldw	r8,92(sp)
 144459c:	da401517 	ldw	r9,84(sp)
 14445a0:	10003b0e 	bge	r2,zero,1444690 <_dtoa_r+0x15dc>
 14445a4:	d9001217 	ldw	r4,72(sp)
 14445a8:	bd7fffc3 	ldbu	r21,-1(r23)
 14445ac:	d9000515 	stw	r4,20(sp)
 14445b0:	003d1c06 	br	1443a24 <__alt_data_end+0xfffde224>
 14445b4:	d8c00817 	ldw	r3,32(sp)
 14445b8:	18a9c83a 	sub	r20,r3,r2
 14445bc:	0005883a 	mov	r2,zero
 14445c0:	003d3706 	br	1443aa0 <__alt_data_end+0xfffde2a0>
 14445c4:	00800044 	movi	r2,1
 14445c8:	003dd006 	br	1443d0c <__alt_data_end+0xfffde50c>
 14445cc:	d8c00217 	ldw	r3,8(sp)
 14445d0:	00800d84 	movi	r2,54
 14445d4:	dd400917 	ldw	r21,36(sp)
 14445d8:	10c5c83a 	sub	r2,r2,r3
 14445dc:	dd000817 	ldw	r20,32(sp)
 14445e0:	003d2f06 	br	1443aa0 <__alt_data_end+0xfffde2a0>
 14445e4:	9029883a 	mov	r20,r18
 14445e8:	982b883a 	mov	r21,r19
 14445ec:	04400084 	movi	r17,2
 14445f0:	003bc606 	br	144350c <__alt_data_end+0xfffddd0c>
 14445f4:	d8800617 	ldw	r2,24(sp)
 14445f8:	103efc26 	beq	r2,zero,14441ec <__alt_data_end+0xfffde9ec>
 14445fc:	d8c00d17 	ldw	r3,52(sp)
 1444600:	00fc890e 	bge	zero,r3,1443828 <__alt_data_end+0xfffde028>
 1444604:	a80b883a 	mov	r5,r21
 1444608:	a009883a 	mov	r4,r20
 144460c:	000d883a 	mov	r6,zero
 1444610:	01d00934 	movhi	r7,16420
 1444614:	144c0100 	call	144c010 <__muldf3>
 1444618:	89000044 	addi	r4,r17,1
 144461c:	1029883a 	mov	r20,r2
 1444620:	182b883a 	mov	r21,r3
 1444624:	144d1d40 	call	144d1d4 <__floatsidf>
 1444628:	a009883a 	mov	r4,r20
 144462c:	a80b883a 	mov	r5,r21
 1444630:	100d883a 	mov	r6,r2
 1444634:	180f883a 	mov	r7,r3
 1444638:	144c0100 	call	144c010 <__muldf3>
 144463c:	1009883a 	mov	r4,r2
 1444640:	180b883a 	mov	r5,r3
 1444644:	000d883a 	mov	r6,zero
 1444648:	01d00734 	movhi	r7,16412
 144464c:	144abb00 	call	144abb0 <__adddf3>
 1444650:	d9000517 	ldw	r4,20(sp)
 1444654:	1023883a 	mov	r17,r2
 1444658:	00bf3034 	movhi	r2,64704
 144465c:	213fffc4 	addi	r4,r4,-1
 1444660:	1885883a 	add	r2,r3,r2
 1444664:	d9001215 	stw	r4,72(sp)
 1444668:	d8800e15 	stw	r2,56(sp)
 144466c:	da800d17 	ldw	r10,52(sp)
 1444670:	003bc306 	br	1443580 <__alt_data_end+0xfffddd80>
 1444674:	b039883a 	mov	fp,r22
 1444678:	01000e44 	movi	r4,57
 144467c:	8825883a 	mov	r18,r17
 1444680:	9dc00044 	addi	r23,r19,1
 1444684:	99000005 	stb	r4,0(r19)
 1444688:	a023883a 	mov	r17,r20
 144468c:	003dae06 	br	1443d48 <__alt_data_end+0xfffde548>
 1444690:	d9800e17 	ldw	r6,56(sp)
 1444694:	d9c01117 	ldw	r7,68(sp)
 1444698:	0009883a 	mov	r4,zero
 144469c:	014ff834 	movhi	r5,16352
 14446a0:	da001715 	stw	r8,92(sp)
 14446a4:	da401515 	stw	r9,84(sp)
 14446a8:	144c87c0 	call	144c87c <__subdf3>
 14446ac:	da001717 	ldw	r8,92(sp)
 14446b0:	da401517 	ldw	r9,84(sp)
 14446b4:	1009883a 	mov	r4,r2
 14446b8:	180b883a 	mov	r5,r3
 14446bc:	400d883a 	mov	r6,r8
 14446c0:	480f883a 	mov	r7,r9
 14446c4:	144be500 	call	144be50 <__gedf2>
 14446c8:	00bc570e 	bge	zero,r2,1443828 <__alt_data_end+0xfffde028>
 14446cc:	01000c04 	movi	r4,48
 14446d0:	00000106 	br	14446d8 <_dtoa_r+0x1624>
 14446d4:	102f883a 	mov	r23,r2
 14446d8:	b8bfffc4 	addi	r2,r23,-1
 14446dc:	10c00007 	ldb	r3,0(r2)
 14446e0:	193ffc26 	beq	r3,r4,14446d4 <__alt_data_end+0xfffdeed4>
 14446e4:	d9801217 	ldw	r6,72(sp)
 14446e8:	d9800515 	stw	r6,20(sp)
 14446ec:	003c1f06 	br	144376c <__alt_data_end+0xfffddf6c>
 14446f0:	d8801217 	ldw	r2,72(sp)
 14446f4:	dc001117 	ldw	r16,68(sp)
 14446f8:	d8800515 	stw	r2,20(sp)
 14446fc:	003cc906 	br	1443a24 <__alt_data_end+0xfffde224>
 1444700:	dd801317 	ldw	r22,76(sp)
 1444704:	dc001117 	ldw	r16,68(sp)
 1444708:	dcc01417 	ldw	r19,80(sp)
 144470c:	dc801017 	ldw	r18,64(sp)
 1444710:	003c4506 	br	1443828 <__alt_data_end+0xfffde028>
 1444714:	103e5d1e 	bne	r2,zero,144408c <__alt_data_end+0xfffde88c>
 1444718:	4080004c 	andi	r2,r8,1
 144471c:	103e5b26 	beq	r2,zero,144408c <__alt_data_end+0xfffde88c>
 1444720:	003e5706 	br	1444080 <__alt_data_end+0xfffde880>
 1444724:	d8c00317 	ldw	r3,12(sp)
 1444728:	00800084 	movi	r2,2
 144472c:	10c00a16 	blt	r2,r3,1444758 <_dtoa_r+0x16a4>
 1444730:	d9000d17 	ldw	r4,52(sp)
 1444734:	003e8306 	br	1444144 <__alt_data_end+0xfffde944>
 1444738:	04400084 	movi	r17,2
 144473c:	003b7306 	br	144350c <__alt_data_end+0xfffddd0c>
 1444740:	d9801217 	ldw	r6,72(sp)
 1444744:	d9800515 	stw	r6,20(sp)
 1444748:	003cb606 	br	1443a24 <__alt_data_end+0xfffde224>
 144474c:	d9001217 	ldw	r4,72(sp)
 1444750:	d9000515 	stw	r4,20(sp)
 1444754:	003c0506 	br	144376c <__alt_data_end+0xfffddf6c>
 1444758:	d9800d17 	ldw	r6,52(sp)
 144475c:	d9800615 	stw	r6,24(sp)
 1444760:	003e8306 	br	1444170 <__alt_data_end+0xfffde970>
 1444764:	d9800317 	ldw	r6,12(sp)
 1444768:	00800084 	movi	r2,2
 144476c:	11800216 	blt	r2,r6,1444778 <_dtoa_r+0x16c4>
 1444770:	d8800d17 	ldw	r2,52(sp)
 1444774:	003da606 	br	1443e10 <__alt_data_end+0xfffde610>
 1444778:	d8800d17 	ldw	r2,52(sp)
 144477c:	d8800615 	stw	r2,24(sp)
 1444780:	003e7b06 	br	1444170 <__alt_data_end+0xfffde970>
 1444784:	05000044 	movi	r20,1
 1444788:	003b0506 	br	14433a0 <__alt_data_end+0xfffddba0>
 144478c:	8009883a 	mov	r4,r16
 1444790:	80001115 	stw	zero,68(r16)
 1444794:	000b883a 	mov	r5,zero
 1444798:	14466f00 	call	14466f0 <_Balloc>
 144479c:	d8800715 	stw	r2,28(sp)
 14447a0:	d8c00717 	ldw	r3,28(sp)
 14447a4:	00bfffc4 	movi	r2,-1
 14447a8:	01000044 	movi	r4,1
 14447ac:	d8800615 	stw	r2,24(sp)
 14447b0:	80c01015 	stw	r3,64(r16)
 14447b4:	d9000b15 	stw	r4,44(sp)
 14447b8:	d8002215 	stw	zero,136(sp)
 14447bc:	d8800d15 	stw	r2,52(sp)
 14447c0:	003c1906 	br	1443828 <__alt_data_end+0xfffde028>
 14447c4:	193d2926 	beq	r3,r4,1443c6c <__alt_data_end+0xfffde46c>
 14447c8:	00c00f04 	movi	r3,60
 14447cc:	1885c83a 	sub	r2,r3,r2
 14447d0:	003d7b06 	br	1443dc0 <__alt_data_end+0xfffde5c0>
 14447d4:	000b883a 	mov	r5,zero
 14447d8:	003b1006 	br	144341c <__alt_data_end+0xfffddc1c>

014447dc <_fflush_r>:
 14447dc:	defffb04 	addi	sp,sp,-20
 14447e0:	dcc00315 	stw	r19,12(sp)
 14447e4:	dc000015 	stw	r16,0(sp)
 14447e8:	dfc00415 	stw	ra,16(sp)
 14447ec:	dc800215 	stw	r18,8(sp)
 14447f0:	dc400115 	stw	r17,4(sp)
 14447f4:	2027883a 	mov	r19,r4
 14447f8:	2821883a 	mov	r16,r5
 14447fc:	20000226 	beq	r4,zero,1444808 <_fflush_r+0x2c>
 1444800:	20800e17 	ldw	r2,56(r4)
 1444804:	10005326 	beq	r2,zero,1444954 <_fflush_r+0x178>
 1444808:	8080030b 	ldhu	r2,12(r16)
 144480c:	10ffffcc 	andi	r3,r2,65535
 1444810:	18e0001c 	xori	r3,r3,32768
 1444814:	18e00004 	addi	r3,r3,-32768
 1444818:	18002c26 	beq	r3,zero,14448cc <_fflush_r+0xf0>
 144481c:	10c0020c 	andi	r3,r2,8
 1444820:	1800321e 	bne	r3,zero,14448ec <_fflush_r+0x110>
 1444824:	80c00117 	ldw	r3,4(r16)
 1444828:	10820014 	ori	r2,r2,2048
 144482c:	8080030d 	sth	r2,12(r16)
 1444830:	00c0570e 	bge	zero,r3,1444990 <_fflush_r+0x1b4>
 1444834:	82000a17 	ldw	r8,40(r16)
 1444838:	40002426 	beq	r8,zero,14448cc <_fflush_r+0xf0>
 144483c:	9c400017 	ldw	r17,0(r19)
 1444840:	10c4000c 	andi	r3,r2,4096
 1444844:	98000015 	stw	zero,0(r19)
 1444848:	18004626 	beq	r3,zero,1444964 <_fflush_r+0x188>
 144484c:	81801417 	ldw	r6,80(r16)
 1444850:	10c0010c 	andi	r3,r2,4
 1444854:	18000626 	beq	r3,zero,1444870 <_fflush_r+0x94>
 1444858:	80c00117 	ldw	r3,4(r16)
 144485c:	80800c17 	ldw	r2,48(r16)
 1444860:	30cdc83a 	sub	r6,r6,r3
 1444864:	10000226 	beq	r2,zero,1444870 <_fflush_r+0x94>
 1444868:	80800f17 	ldw	r2,60(r16)
 144486c:	308dc83a 	sub	r6,r6,r2
 1444870:	81400717 	ldw	r5,28(r16)
 1444874:	9809883a 	mov	r4,r19
 1444878:	000f883a 	mov	r7,zero
 144487c:	403ee83a 	callr	r8
 1444880:	00ffffc4 	movi	r3,-1
 1444884:	10c04526 	beq	r2,r3,144499c <_fflush_r+0x1c0>
 1444888:	80c0030b 	ldhu	r3,12(r16)
 144488c:	81000417 	ldw	r4,16(r16)
 1444890:	80000115 	stw	zero,4(r16)
 1444894:	197dffcc 	andi	r5,r3,63487
 1444898:	8140030d 	sth	r5,12(r16)
 144489c:	81000015 	stw	r4,0(r16)
 14448a0:	18c4000c 	andi	r3,r3,4096
 14448a4:	18000126 	beq	r3,zero,14448ac <_fflush_r+0xd0>
 14448a8:	80801415 	stw	r2,80(r16)
 14448ac:	81400c17 	ldw	r5,48(r16)
 14448b0:	9c400015 	stw	r17,0(r19)
 14448b4:	28000526 	beq	r5,zero,14448cc <_fflush_r+0xf0>
 14448b8:	80801004 	addi	r2,r16,64
 14448bc:	28800226 	beq	r5,r2,14448c8 <_fflush_r+0xec>
 14448c0:	9809883a 	mov	r4,r19
 14448c4:	1444f0c0 	call	1444f0c <_free_r>
 14448c8:	80000c15 	stw	zero,48(r16)
 14448cc:	0005883a 	mov	r2,zero
 14448d0:	dfc00417 	ldw	ra,16(sp)
 14448d4:	dcc00317 	ldw	r19,12(sp)
 14448d8:	dc800217 	ldw	r18,8(sp)
 14448dc:	dc400117 	ldw	r17,4(sp)
 14448e0:	dc000017 	ldw	r16,0(sp)
 14448e4:	dec00504 	addi	sp,sp,20
 14448e8:	f800283a 	ret
 14448ec:	84800417 	ldw	r18,16(r16)
 14448f0:	903ff626 	beq	r18,zero,14448cc <__alt_data_end+0xfffdf0cc>
 14448f4:	84400017 	ldw	r17,0(r16)
 14448f8:	108000cc 	andi	r2,r2,3
 14448fc:	84800015 	stw	r18,0(r16)
 1444900:	8ca3c83a 	sub	r17,r17,r18
 1444904:	10001526 	beq	r2,zero,144495c <_fflush_r+0x180>
 1444908:	0005883a 	mov	r2,zero
 144490c:	80800215 	stw	r2,8(r16)
 1444910:	04400316 	blt	zero,r17,1444920 <_fflush_r+0x144>
 1444914:	003fed06 	br	14448cc <__alt_data_end+0xfffdf0cc>
 1444918:	90a5883a 	add	r18,r18,r2
 144491c:	047feb0e 	bge	zero,r17,14448cc <__alt_data_end+0xfffdf0cc>
 1444920:	80800917 	ldw	r2,36(r16)
 1444924:	81400717 	ldw	r5,28(r16)
 1444928:	880f883a 	mov	r7,r17
 144492c:	900d883a 	mov	r6,r18
 1444930:	9809883a 	mov	r4,r19
 1444934:	103ee83a 	callr	r2
 1444938:	88a3c83a 	sub	r17,r17,r2
 144493c:	00bff616 	blt	zero,r2,1444918 <__alt_data_end+0xfffdf118>
 1444940:	80c0030b 	ldhu	r3,12(r16)
 1444944:	00bfffc4 	movi	r2,-1
 1444948:	18c01014 	ori	r3,r3,64
 144494c:	80c0030d 	sth	r3,12(r16)
 1444950:	003fdf06 	br	14448d0 <__alt_data_end+0xfffdf0d0>
 1444954:	1444d980 	call	1444d98 <__sinit>
 1444958:	003fab06 	br	1444808 <__alt_data_end+0xfffdf008>
 144495c:	80800517 	ldw	r2,20(r16)
 1444960:	003fea06 	br	144490c <__alt_data_end+0xfffdf10c>
 1444964:	81400717 	ldw	r5,28(r16)
 1444968:	000d883a 	mov	r6,zero
 144496c:	9809883a 	mov	r4,r19
 1444970:	01c00044 	movi	r7,1
 1444974:	403ee83a 	callr	r8
 1444978:	100d883a 	mov	r6,r2
 144497c:	00bfffc4 	movi	r2,-1
 1444980:	30801326 	beq	r6,r2,14449d0 <_fflush_r+0x1f4>
 1444984:	8080030b 	ldhu	r2,12(r16)
 1444988:	82000a17 	ldw	r8,40(r16)
 144498c:	003fb006 	br	1444850 <__alt_data_end+0xfffdf050>
 1444990:	80c00f17 	ldw	r3,60(r16)
 1444994:	00ffa716 	blt	zero,r3,1444834 <__alt_data_end+0xfffdf034>
 1444998:	003fcc06 	br	14448cc <__alt_data_end+0xfffdf0cc>
 144499c:	98c00017 	ldw	r3,0(r19)
 14449a0:	183fb926 	beq	r3,zero,1444888 <__alt_data_end+0xfffdf088>
 14449a4:	01000744 	movi	r4,29
 14449a8:	19000226 	beq	r3,r4,14449b4 <_fflush_r+0x1d8>
 14449ac:	01000584 	movi	r4,22
 14449b0:	1900101e 	bne	r3,r4,14449f4 <_fflush_r+0x218>
 14449b4:	8080030b 	ldhu	r2,12(r16)
 14449b8:	80c00417 	ldw	r3,16(r16)
 14449bc:	80000115 	stw	zero,4(r16)
 14449c0:	10bdffcc 	andi	r2,r2,63487
 14449c4:	8080030d 	sth	r2,12(r16)
 14449c8:	80c00015 	stw	r3,0(r16)
 14449cc:	003fb706 	br	14448ac <__alt_data_end+0xfffdf0ac>
 14449d0:	98800017 	ldw	r2,0(r19)
 14449d4:	103feb26 	beq	r2,zero,1444984 <__alt_data_end+0xfffdf184>
 14449d8:	00c00744 	movi	r3,29
 14449dc:	10c00226 	beq	r2,r3,14449e8 <_fflush_r+0x20c>
 14449e0:	00c00584 	movi	r3,22
 14449e4:	10ffd61e 	bne	r2,r3,1444940 <__alt_data_end+0xfffdf140>
 14449e8:	9c400015 	stw	r17,0(r19)
 14449ec:	0005883a 	mov	r2,zero
 14449f0:	003fb706 	br	14448d0 <__alt_data_end+0xfffdf0d0>
 14449f4:	80c0030b 	ldhu	r3,12(r16)
 14449f8:	18c01014 	ori	r3,r3,64
 14449fc:	80c0030d 	sth	r3,12(r16)
 1444a00:	003fb306 	br	14448d0 <__alt_data_end+0xfffdf0d0>

01444a04 <fflush>:
 1444a04:	20000526 	beq	r4,zero,1444a1c <fflush+0x18>
 1444a08:	00805174 	movhi	r2,325
 1444a0c:	10859a04 	addi	r2,r2,5736
 1444a10:	200b883a 	mov	r5,r4
 1444a14:	11000017 	ldw	r4,0(r2)
 1444a18:	14447dc1 	jmpi	14447dc <_fflush_r>
 1444a1c:	00805174 	movhi	r2,325
 1444a20:	10859904 	addi	r2,r2,5732
 1444a24:	11000017 	ldw	r4,0(r2)
 1444a28:	01405134 	movhi	r5,324
 1444a2c:	2951f704 	addi	r5,r5,18396
 1444a30:	14457581 	jmpi	1445758 <_fwalk_reent>

01444a34 <__fp_lock>:
 1444a34:	0005883a 	mov	r2,zero
 1444a38:	f800283a 	ret

01444a3c <__fp_unlock>:
 1444a3c:	0005883a 	mov	r2,zero
 1444a40:	f800283a 	ret

01444a44 <_cleanup_r>:
 1444a44:	01405174 	movhi	r5,325
 1444a48:	2965d904 	addi	r5,r5,-26780
 1444a4c:	14456a01 	jmpi	14456a0 <_fwalk>

01444a50 <__sinit.part.1>:
 1444a50:	defff604 	addi	sp,sp,-40
 1444a54:	00c05134 	movhi	r3,324
 1444a58:	dfc00915 	stw	ra,36(sp)
 1444a5c:	df000815 	stw	fp,32(sp)
 1444a60:	ddc00715 	stw	r23,28(sp)
 1444a64:	dd800615 	stw	r22,24(sp)
 1444a68:	dd400515 	stw	r21,20(sp)
 1444a6c:	dd000415 	stw	r20,16(sp)
 1444a70:	dcc00315 	stw	r19,12(sp)
 1444a74:	dc800215 	stw	r18,8(sp)
 1444a78:	dc400115 	stw	r17,4(sp)
 1444a7c:	dc000015 	stw	r16,0(sp)
 1444a80:	18d29104 	addi	r3,r3,19012
 1444a84:	24000117 	ldw	r16,4(r4)
 1444a88:	20c00f15 	stw	r3,60(r4)
 1444a8c:	07000044 	movi	fp,1
 1444a90:	00c000c4 	movi	r3,3
 1444a94:	2080bb04 	addi	r2,r4,748
 1444a98:	20c0b915 	stw	r3,740(r4)
 1444a9c:	27000e15 	stw	fp,56(r4)
 1444aa0:	2080ba15 	stw	r2,744(r4)
 1444aa4:	2000b815 	stw	zero,736(r4)
 1444aa8:	05c00204 	movi	r23,8
 1444aac:	00800104 	movi	r2,4
 1444ab0:	2025883a 	mov	r18,r4
 1444ab4:	b80d883a 	mov	r6,r23
 1444ab8:	81001704 	addi	r4,r16,92
 1444abc:	000b883a 	mov	r5,zero
 1444ac0:	80000015 	stw	zero,0(r16)
 1444ac4:	80000115 	stw	zero,4(r16)
 1444ac8:	80000215 	stw	zero,8(r16)
 1444acc:	8080030d 	sth	r2,12(r16)
 1444ad0:	80001915 	stw	zero,100(r16)
 1444ad4:	8000038d 	sth	zero,14(r16)
 1444ad8:	80000415 	stw	zero,16(r16)
 1444adc:	80000515 	stw	zero,20(r16)
 1444ae0:	80000615 	stw	zero,24(r16)
 1444ae4:	14465cc0 	call	14465cc <memset>
 1444ae8:	05805134 	movhi	r22,324
 1444aec:	94400217 	ldw	r17,8(r18)
 1444af0:	05405134 	movhi	r21,324
 1444af4:	05005134 	movhi	r20,324
 1444af8:	04c05134 	movhi	r19,324
 1444afc:	b59f6804 	addi	r22,r22,32160
 1444b00:	ad5f7f04 	addi	r21,r21,32252
 1444b04:	a51f9e04 	addi	r20,r20,32376
 1444b08:	9cdfb504 	addi	r19,r19,32468
 1444b0c:	85800815 	stw	r22,32(r16)
 1444b10:	85400915 	stw	r21,36(r16)
 1444b14:	85000a15 	stw	r20,40(r16)
 1444b18:	84c00b15 	stw	r19,44(r16)
 1444b1c:	84000715 	stw	r16,28(r16)
 1444b20:	00800284 	movi	r2,10
 1444b24:	89001704 	addi	r4,r17,92
 1444b28:	b80d883a 	mov	r6,r23
 1444b2c:	000b883a 	mov	r5,zero
 1444b30:	88000015 	stw	zero,0(r17)
 1444b34:	88000115 	stw	zero,4(r17)
 1444b38:	88000215 	stw	zero,8(r17)
 1444b3c:	8880030d 	sth	r2,12(r17)
 1444b40:	88001915 	stw	zero,100(r17)
 1444b44:	8f00038d 	sth	fp,14(r17)
 1444b48:	88000415 	stw	zero,16(r17)
 1444b4c:	88000515 	stw	zero,20(r17)
 1444b50:	88000615 	stw	zero,24(r17)
 1444b54:	14465cc0 	call	14465cc <memset>
 1444b58:	94000317 	ldw	r16,12(r18)
 1444b5c:	00800484 	movi	r2,18
 1444b60:	8c400715 	stw	r17,28(r17)
 1444b64:	8d800815 	stw	r22,32(r17)
 1444b68:	8d400915 	stw	r21,36(r17)
 1444b6c:	8d000a15 	stw	r20,40(r17)
 1444b70:	8cc00b15 	stw	r19,44(r17)
 1444b74:	8080030d 	sth	r2,12(r16)
 1444b78:	00800084 	movi	r2,2
 1444b7c:	80000015 	stw	zero,0(r16)
 1444b80:	80000115 	stw	zero,4(r16)
 1444b84:	80000215 	stw	zero,8(r16)
 1444b88:	80001915 	stw	zero,100(r16)
 1444b8c:	8080038d 	sth	r2,14(r16)
 1444b90:	80000415 	stw	zero,16(r16)
 1444b94:	80000515 	stw	zero,20(r16)
 1444b98:	80000615 	stw	zero,24(r16)
 1444b9c:	81001704 	addi	r4,r16,92
 1444ba0:	000b883a 	mov	r5,zero
 1444ba4:	b80d883a 	mov	r6,r23
 1444ba8:	14465cc0 	call	14465cc <memset>
 1444bac:	84000715 	stw	r16,28(r16)
 1444bb0:	85800815 	stw	r22,32(r16)
 1444bb4:	85400915 	stw	r21,36(r16)
 1444bb8:	85000a15 	stw	r20,40(r16)
 1444bbc:	84c00b15 	stw	r19,44(r16)
 1444bc0:	dfc00917 	ldw	ra,36(sp)
 1444bc4:	df000817 	ldw	fp,32(sp)
 1444bc8:	ddc00717 	ldw	r23,28(sp)
 1444bcc:	dd800617 	ldw	r22,24(sp)
 1444bd0:	dd400517 	ldw	r21,20(sp)
 1444bd4:	dd000417 	ldw	r20,16(sp)
 1444bd8:	dcc00317 	ldw	r19,12(sp)
 1444bdc:	dc800217 	ldw	r18,8(sp)
 1444be0:	dc400117 	ldw	r17,4(sp)
 1444be4:	dc000017 	ldw	r16,0(sp)
 1444be8:	dec00a04 	addi	sp,sp,40
 1444bec:	f800283a 	ret

01444bf0 <__sfmoreglue>:
 1444bf0:	defffc04 	addi	sp,sp,-16
 1444bf4:	dc800215 	stw	r18,8(sp)
 1444bf8:	2825883a 	mov	r18,r5
 1444bfc:	dc000015 	stw	r16,0(sp)
 1444c00:	01401a04 	movi	r5,104
 1444c04:	2021883a 	mov	r16,r4
 1444c08:	9009883a 	mov	r4,r18
 1444c0c:	dfc00315 	stw	ra,12(sp)
 1444c10:	dc400115 	stw	r17,4(sp)
 1444c14:	1440a480 	call	1440a48 <__mulsi3>
 1444c18:	8009883a 	mov	r4,r16
 1444c1c:	11400304 	addi	r5,r2,12
 1444c20:	1023883a 	mov	r17,r2
 1444c24:	1445aa80 	call	1445aa8 <_malloc_r>
 1444c28:	1021883a 	mov	r16,r2
 1444c2c:	10000726 	beq	r2,zero,1444c4c <__sfmoreglue+0x5c>
 1444c30:	11000304 	addi	r4,r2,12
 1444c34:	10000015 	stw	zero,0(r2)
 1444c38:	14800115 	stw	r18,4(r2)
 1444c3c:	11000215 	stw	r4,8(r2)
 1444c40:	000b883a 	mov	r5,zero
 1444c44:	880d883a 	mov	r6,r17
 1444c48:	14465cc0 	call	14465cc <memset>
 1444c4c:	8005883a 	mov	r2,r16
 1444c50:	dfc00317 	ldw	ra,12(sp)
 1444c54:	dc800217 	ldw	r18,8(sp)
 1444c58:	dc400117 	ldw	r17,4(sp)
 1444c5c:	dc000017 	ldw	r16,0(sp)
 1444c60:	dec00404 	addi	sp,sp,16
 1444c64:	f800283a 	ret

01444c68 <__sfp>:
 1444c68:	00805174 	movhi	r2,325
 1444c6c:	defffb04 	addi	sp,sp,-20
 1444c70:	10859904 	addi	r2,r2,5732
 1444c74:	dc800215 	stw	r18,8(sp)
 1444c78:	14800017 	ldw	r18,0(r2)
 1444c7c:	dcc00315 	stw	r19,12(sp)
 1444c80:	dfc00415 	stw	ra,16(sp)
 1444c84:	90800e17 	ldw	r2,56(r18)
 1444c88:	dc400115 	stw	r17,4(sp)
 1444c8c:	dc000015 	stw	r16,0(sp)
 1444c90:	2027883a 	mov	r19,r4
 1444c94:	1000021e 	bne	r2,zero,1444ca0 <__sfp+0x38>
 1444c98:	9009883a 	mov	r4,r18
 1444c9c:	1444a500 	call	1444a50 <__sinit.part.1>
 1444ca0:	9480b804 	addi	r18,r18,736
 1444ca4:	047fffc4 	movi	r17,-1
 1444ca8:	91400117 	ldw	r5,4(r18)
 1444cac:	94000217 	ldw	r16,8(r18)
 1444cb0:	297fffc4 	addi	r5,r5,-1
 1444cb4:	28000a16 	blt	r5,zero,1444ce0 <__sfp+0x78>
 1444cb8:	8080030f 	ldh	r2,12(r16)
 1444cbc:	10000c26 	beq	r2,zero,1444cf0 <__sfp+0x88>
 1444cc0:	80c01d04 	addi	r3,r16,116
 1444cc4:	00000206 	br	1444cd0 <__sfp+0x68>
 1444cc8:	18bfe60f 	ldh	r2,-104(r3)
 1444ccc:	10000826 	beq	r2,zero,1444cf0 <__sfp+0x88>
 1444cd0:	297fffc4 	addi	r5,r5,-1
 1444cd4:	1c3ffd04 	addi	r16,r3,-12
 1444cd8:	18c01a04 	addi	r3,r3,104
 1444cdc:	2c7ffa1e 	bne	r5,r17,1444cc8 <__alt_data_end+0xfffdf4c8>
 1444ce0:	90800017 	ldw	r2,0(r18)
 1444ce4:	10001d26 	beq	r2,zero,1444d5c <__sfp+0xf4>
 1444ce8:	1025883a 	mov	r18,r2
 1444cec:	003fee06 	br	1444ca8 <__alt_data_end+0xfffdf4a8>
 1444cf0:	00bfffc4 	movi	r2,-1
 1444cf4:	8080038d 	sth	r2,14(r16)
 1444cf8:	00800044 	movi	r2,1
 1444cfc:	8080030d 	sth	r2,12(r16)
 1444d00:	80001915 	stw	zero,100(r16)
 1444d04:	80000015 	stw	zero,0(r16)
 1444d08:	80000215 	stw	zero,8(r16)
 1444d0c:	80000115 	stw	zero,4(r16)
 1444d10:	80000415 	stw	zero,16(r16)
 1444d14:	80000515 	stw	zero,20(r16)
 1444d18:	80000615 	stw	zero,24(r16)
 1444d1c:	81001704 	addi	r4,r16,92
 1444d20:	000b883a 	mov	r5,zero
 1444d24:	01800204 	movi	r6,8
 1444d28:	14465cc0 	call	14465cc <memset>
 1444d2c:	8005883a 	mov	r2,r16
 1444d30:	80000c15 	stw	zero,48(r16)
 1444d34:	80000d15 	stw	zero,52(r16)
 1444d38:	80001115 	stw	zero,68(r16)
 1444d3c:	80001215 	stw	zero,72(r16)
 1444d40:	dfc00417 	ldw	ra,16(sp)
 1444d44:	dcc00317 	ldw	r19,12(sp)
 1444d48:	dc800217 	ldw	r18,8(sp)
 1444d4c:	dc400117 	ldw	r17,4(sp)
 1444d50:	dc000017 	ldw	r16,0(sp)
 1444d54:	dec00504 	addi	sp,sp,20
 1444d58:	f800283a 	ret
 1444d5c:	9809883a 	mov	r4,r19
 1444d60:	01400104 	movi	r5,4
 1444d64:	1444bf00 	call	1444bf0 <__sfmoreglue>
 1444d68:	90800015 	stw	r2,0(r18)
 1444d6c:	103fde1e 	bne	r2,zero,1444ce8 <__alt_data_end+0xfffdf4e8>
 1444d70:	00800304 	movi	r2,12
 1444d74:	98800015 	stw	r2,0(r19)
 1444d78:	0005883a 	mov	r2,zero
 1444d7c:	003ff006 	br	1444d40 <__alt_data_end+0xfffdf540>

01444d80 <_cleanup>:
 1444d80:	00805174 	movhi	r2,325
 1444d84:	10859904 	addi	r2,r2,5732
 1444d88:	11000017 	ldw	r4,0(r2)
 1444d8c:	01405174 	movhi	r5,325
 1444d90:	2965d904 	addi	r5,r5,-26780
 1444d94:	14456a01 	jmpi	14456a0 <_fwalk>

01444d98 <__sinit>:
 1444d98:	20800e17 	ldw	r2,56(r4)
 1444d9c:	10000126 	beq	r2,zero,1444da4 <__sinit+0xc>
 1444da0:	f800283a 	ret
 1444da4:	1444a501 	jmpi	1444a50 <__sinit.part.1>

01444da8 <__sfp_lock_acquire>:
 1444da8:	f800283a 	ret

01444dac <__sfp_lock_release>:
 1444dac:	f800283a 	ret

01444db0 <__sinit_lock_acquire>:
 1444db0:	f800283a 	ret

01444db4 <__sinit_lock_release>:
 1444db4:	f800283a 	ret

01444db8 <__fp_lock_all>:
 1444db8:	00805174 	movhi	r2,325
 1444dbc:	10859a04 	addi	r2,r2,5736
 1444dc0:	11000017 	ldw	r4,0(r2)
 1444dc4:	01405134 	movhi	r5,324
 1444dc8:	29528d04 	addi	r5,r5,18996
 1444dcc:	14456a01 	jmpi	14456a0 <_fwalk>

01444dd0 <__fp_unlock_all>:
 1444dd0:	00805174 	movhi	r2,325
 1444dd4:	10859a04 	addi	r2,r2,5736
 1444dd8:	11000017 	ldw	r4,0(r2)
 1444ddc:	01405134 	movhi	r5,324
 1444de0:	29528f04 	addi	r5,r5,19004
 1444de4:	14456a01 	jmpi	14456a0 <_fwalk>

01444de8 <_malloc_trim_r>:
 1444de8:	defffb04 	addi	sp,sp,-20
 1444dec:	dcc00315 	stw	r19,12(sp)
 1444df0:	04c05174 	movhi	r19,325
 1444df4:	dc800215 	stw	r18,8(sp)
 1444df8:	dc400115 	stw	r17,4(sp)
 1444dfc:	dc000015 	stw	r16,0(sp)
 1444e00:	dfc00415 	stw	ra,16(sp)
 1444e04:	2821883a 	mov	r16,r5
 1444e08:	9cc3d304 	addi	r19,r19,3916
 1444e0c:	2025883a 	mov	r18,r4
 1444e10:	144d9180 	call	144d918 <__malloc_lock>
 1444e14:	98800217 	ldw	r2,8(r19)
 1444e18:	14400117 	ldw	r17,4(r2)
 1444e1c:	00bfff04 	movi	r2,-4
 1444e20:	88a2703a 	and	r17,r17,r2
 1444e24:	8c21c83a 	sub	r16,r17,r16
 1444e28:	8403fbc4 	addi	r16,r16,4079
 1444e2c:	8020d33a 	srli	r16,r16,12
 1444e30:	0083ffc4 	movi	r2,4095
 1444e34:	843fffc4 	addi	r16,r16,-1
 1444e38:	8020933a 	slli	r16,r16,12
 1444e3c:	1400060e 	bge	r2,r16,1444e58 <_malloc_trim_r+0x70>
 1444e40:	9009883a 	mov	r4,r18
 1444e44:	000b883a 	mov	r5,zero
 1444e48:	1447d4c0 	call	1447d4c <_sbrk_r>
 1444e4c:	98c00217 	ldw	r3,8(r19)
 1444e50:	1c47883a 	add	r3,r3,r17
 1444e54:	10c00a26 	beq	r2,r3,1444e80 <_malloc_trim_r+0x98>
 1444e58:	9009883a 	mov	r4,r18
 1444e5c:	144d9380 	call	144d938 <__malloc_unlock>
 1444e60:	0005883a 	mov	r2,zero
 1444e64:	dfc00417 	ldw	ra,16(sp)
 1444e68:	dcc00317 	ldw	r19,12(sp)
 1444e6c:	dc800217 	ldw	r18,8(sp)
 1444e70:	dc400117 	ldw	r17,4(sp)
 1444e74:	dc000017 	ldw	r16,0(sp)
 1444e78:	dec00504 	addi	sp,sp,20
 1444e7c:	f800283a 	ret
 1444e80:	9009883a 	mov	r4,r18
 1444e84:	040bc83a 	sub	r5,zero,r16
 1444e88:	1447d4c0 	call	1447d4c <_sbrk_r>
 1444e8c:	00ffffc4 	movi	r3,-1
 1444e90:	10c00d26 	beq	r2,r3,1444ec8 <_malloc_trim_r+0xe0>
 1444e94:	00c05174 	movhi	r3,325
 1444e98:	18c8c004 	addi	r3,r3,8960
 1444e9c:	18800017 	ldw	r2,0(r3)
 1444ea0:	99000217 	ldw	r4,8(r19)
 1444ea4:	8c23c83a 	sub	r17,r17,r16
 1444ea8:	8c400054 	ori	r17,r17,1
 1444eac:	1421c83a 	sub	r16,r2,r16
 1444eb0:	24400115 	stw	r17,4(r4)
 1444eb4:	9009883a 	mov	r4,r18
 1444eb8:	1c000015 	stw	r16,0(r3)
 1444ebc:	144d9380 	call	144d938 <__malloc_unlock>
 1444ec0:	00800044 	movi	r2,1
 1444ec4:	003fe706 	br	1444e64 <__alt_data_end+0xfffdf664>
 1444ec8:	9009883a 	mov	r4,r18
 1444ecc:	000b883a 	mov	r5,zero
 1444ed0:	1447d4c0 	call	1447d4c <_sbrk_r>
 1444ed4:	99000217 	ldw	r4,8(r19)
 1444ed8:	014003c4 	movi	r5,15
 1444edc:	1107c83a 	sub	r3,r2,r4
 1444ee0:	28ffdd0e 	bge	r5,r3,1444e58 <__alt_data_end+0xfffdf658>
 1444ee4:	01405174 	movhi	r5,325
 1444ee8:	29459c04 	addi	r5,r5,5744
 1444eec:	29400017 	ldw	r5,0(r5)
 1444ef0:	18c00054 	ori	r3,r3,1
 1444ef4:	20c00115 	stw	r3,4(r4)
 1444ef8:	00c05174 	movhi	r3,325
 1444efc:	1145c83a 	sub	r2,r2,r5
 1444f00:	18c8c004 	addi	r3,r3,8960
 1444f04:	18800015 	stw	r2,0(r3)
 1444f08:	003fd306 	br	1444e58 <__alt_data_end+0xfffdf658>

01444f0c <_free_r>:
 1444f0c:	28004c26 	beq	r5,zero,1445040 <_free_r+0x134>
 1444f10:	defffd04 	addi	sp,sp,-12
 1444f14:	dc400115 	stw	r17,4(sp)
 1444f18:	dc000015 	stw	r16,0(sp)
 1444f1c:	2023883a 	mov	r17,r4
 1444f20:	2821883a 	mov	r16,r5
 1444f24:	dfc00215 	stw	ra,8(sp)
 1444f28:	144d9180 	call	144d918 <__malloc_lock>
 1444f2c:	813fff17 	ldw	r4,-4(r16)
 1444f30:	00bfff84 	movi	r2,-2
 1444f34:	02405174 	movhi	r9,325
 1444f38:	81bffe04 	addi	r6,r16,-8
 1444f3c:	2084703a 	and	r2,r4,r2
 1444f40:	4a43d304 	addi	r9,r9,3916
 1444f44:	308b883a 	add	r5,r6,r2
 1444f48:	2a000117 	ldw	r8,4(r5)
 1444f4c:	49c00217 	ldw	r7,8(r9)
 1444f50:	00ffff04 	movi	r3,-4
 1444f54:	40c6703a 	and	r3,r8,r3
 1444f58:	39405326 	beq	r7,r5,14450a8 <_free_r+0x19c>
 1444f5c:	28c00115 	stw	r3,4(r5)
 1444f60:	2100004c 	andi	r4,r4,1
 1444f64:	2000091e 	bne	r4,zero,1444f8c <_free_r+0x80>
 1444f68:	81fffe17 	ldw	r7,-8(r16)
 1444f6c:	4a000204 	addi	r8,r9,8
 1444f70:	31cdc83a 	sub	r6,r6,r7
 1444f74:	31000217 	ldw	r4,8(r6)
 1444f78:	11c5883a 	add	r2,r2,r7
 1444f7c:	22006126 	beq	r4,r8,1445104 <_free_r+0x1f8>
 1444f80:	31c00317 	ldw	r7,12(r6)
 1444f84:	21c00315 	stw	r7,12(r4)
 1444f88:	39000215 	stw	r4,8(r7)
 1444f8c:	28c9883a 	add	r4,r5,r3
 1444f90:	21c00117 	ldw	r7,4(r4)
 1444f94:	39c0004c 	andi	r7,r7,1
 1444f98:	38000d1e 	bne	r7,zero,1444fd0 <_free_r+0xc4>
 1444f9c:	29000217 	ldw	r4,8(r5)
 1444fa0:	10c5883a 	add	r2,r2,r3
 1444fa4:	00c05174 	movhi	r3,325
 1444fa8:	18c3d504 	addi	r3,r3,3924
 1444fac:	20c07526 	beq	r4,r3,1445184 <_free_r+0x278>
 1444fb0:	29c00317 	ldw	r7,12(r5)
 1444fb4:	11400054 	ori	r5,r2,1
 1444fb8:	3087883a 	add	r3,r6,r2
 1444fbc:	21c00315 	stw	r7,12(r4)
 1444fc0:	39000215 	stw	r4,8(r7)
 1444fc4:	31400115 	stw	r5,4(r6)
 1444fc8:	18800015 	stw	r2,0(r3)
 1444fcc:	00000406 	br	1444fe0 <_free_r+0xd4>
 1444fd0:	10c00054 	ori	r3,r2,1
 1444fd4:	30c00115 	stw	r3,4(r6)
 1444fd8:	3087883a 	add	r3,r6,r2
 1444fdc:	18800015 	stw	r2,0(r3)
 1444fe0:	00c07fc4 	movi	r3,511
 1444fe4:	18801736 	bltu	r3,r2,1445044 <_free_r+0x138>
 1444fe8:	1004d0fa 	srli	r2,r2,3
 1444fec:	01400044 	movi	r5,1
 1444ff0:	49000117 	ldw	r4,4(r9)
 1444ff4:	1087883a 	add	r3,r2,r2
 1444ff8:	18c7883a 	add	r3,r3,r3
 1444ffc:	1005d0ba 	srai	r2,r2,2
 1445000:	18c7883a 	add	r3,r3,r3
 1445004:	1a47883a 	add	r3,r3,r9
 1445008:	19c00217 	ldw	r7,8(r3)
 144500c:	2884983a 	sll	r2,r5,r2
 1445010:	30c00315 	stw	r3,12(r6)
 1445014:	31c00215 	stw	r7,8(r6)
 1445018:	1104b03a 	or	r2,r2,r4
 144501c:	19800215 	stw	r6,8(r3)
 1445020:	48800115 	stw	r2,4(r9)
 1445024:	39800315 	stw	r6,12(r7)
 1445028:	8809883a 	mov	r4,r17
 144502c:	dfc00217 	ldw	ra,8(sp)
 1445030:	dc400117 	ldw	r17,4(sp)
 1445034:	dc000017 	ldw	r16,0(sp)
 1445038:	dec00304 	addi	sp,sp,12
 144503c:	144d9381 	jmpi	144d938 <__malloc_unlock>
 1445040:	f800283a 	ret
 1445044:	1006d27a 	srli	r3,r2,9
 1445048:	01000104 	movi	r4,4
 144504c:	20c04036 	bltu	r4,r3,1445150 <_free_r+0x244>
 1445050:	1006d1ba 	srli	r3,r2,6
 1445054:	19400e04 	addi	r5,r3,56
 1445058:	2947883a 	add	r3,r5,r5
 144505c:	18c7883a 	add	r3,r3,r3
 1445060:	18c7883a 	add	r3,r3,r3
 1445064:	1a49883a 	add	r4,r3,r9
 1445068:	20c00217 	ldw	r3,8(r4)
 144506c:	01c05174 	movhi	r7,325
 1445070:	39c3d304 	addi	r7,r7,3916
 1445074:	19003b26 	beq	r3,r4,1445164 <_free_r+0x258>
 1445078:	01ffff04 	movi	r7,-4
 144507c:	19400117 	ldw	r5,4(r3)
 1445080:	29ca703a 	and	r5,r5,r7
 1445084:	1140022e 	bgeu	r2,r5,1445090 <_free_r+0x184>
 1445088:	18c00217 	ldw	r3,8(r3)
 144508c:	20fffb1e 	bne	r4,r3,144507c <__alt_data_end+0xfffdf87c>
 1445090:	18800317 	ldw	r2,12(r3)
 1445094:	30800315 	stw	r2,12(r6)
 1445098:	30c00215 	stw	r3,8(r6)
 144509c:	11800215 	stw	r6,8(r2)
 14450a0:	19800315 	stw	r6,12(r3)
 14450a4:	003fe006 	br	1445028 <__alt_data_end+0xfffdf828>
 14450a8:	2100004c 	andi	r4,r4,1
 14450ac:	1885883a 	add	r2,r3,r2
 14450b0:	2000071e 	bne	r4,zero,14450d0 <_free_r+0x1c4>
 14450b4:	817ffe17 	ldw	r5,-8(r16)
 14450b8:	314dc83a 	sub	r6,r6,r5
 14450bc:	30c00317 	ldw	r3,12(r6)
 14450c0:	31000217 	ldw	r4,8(r6)
 14450c4:	1145883a 	add	r2,r2,r5
 14450c8:	20c00315 	stw	r3,12(r4)
 14450cc:	19000215 	stw	r4,8(r3)
 14450d0:	10c00054 	ori	r3,r2,1
 14450d4:	30c00115 	stw	r3,4(r6)
 14450d8:	00c05174 	movhi	r3,325
 14450dc:	18c59d04 	addi	r3,r3,5748
 14450e0:	18c00017 	ldw	r3,0(r3)
 14450e4:	49800215 	stw	r6,8(r9)
 14450e8:	10ffcf36 	bltu	r2,r3,1445028 <__alt_data_end+0xfffdf828>
 14450ec:	00805174 	movhi	r2,325
 14450f0:	1088b704 	addi	r2,r2,8924
 14450f4:	11400017 	ldw	r5,0(r2)
 14450f8:	8809883a 	mov	r4,r17
 14450fc:	1444de80 	call	1444de8 <_malloc_trim_r>
 1445100:	003fc906 	br	1445028 <__alt_data_end+0xfffdf828>
 1445104:	28c9883a 	add	r4,r5,r3
 1445108:	21000117 	ldw	r4,4(r4)
 144510c:	2100004c 	andi	r4,r4,1
 1445110:	20000a1e 	bne	r4,zero,144513c <_free_r+0x230>
 1445114:	29000317 	ldw	r4,12(r5)
 1445118:	29400217 	ldw	r5,8(r5)
 144511c:	10c5883a 	add	r2,r2,r3
 1445120:	10c00054 	ori	r3,r2,1
 1445124:	29000315 	stw	r4,12(r5)
 1445128:	21400215 	stw	r5,8(r4)
 144512c:	30c00115 	stw	r3,4(r6)
 1445130:	308d883a 	add	r6,r6,r2
 1445134:	30800015 	stw	r2,0(r6)
 1445138:	003fbb06 	br	1445028 <__alt_data_end+0xfffdf828>
 144513c:	10c00054 	ori	r3,r2,1
 1445140:	30c00115 	stw	r3,4(r6)
 1445144:	308d883a 	add	r6,r6,r2
 1445148:	30800015 	stw	r2,0(r6)
 144514c:	003fb606 	br	1445028 <__alt_data_end+0xfffdf828>
 1445150:	01000504 	movi	r4,20
 1445154:	20c01436 	bltu	r4,r3,14451a8 <_free_r+0x29c>
 1445158:	194016c4 	addi	r5,r3,91
 144515c:	2947883a 	add	r3,r5,r5
 1445160:	003fbe06 	br	144505c <__alt_data_end+0xfffdf85c>
 1445164:	280bd0ba 	srai	r5,r5,2
 1445168:	00800044 	movi	r2,1
 144516c:	39000117 	ldw	r4,4(r7)
 1445170:	114a983a 	sll	r5,r2,r5
 1445174:	1805883a 	mov	r2,r3
 1445178:	2908b03a 	or	r4,r5,r4
 144517c:	39000115 	stw	r4,4(r7)
 1445180:	003fc406 	br	1445094 <__alt_data_end+0xfffdf894>
 1445184:	49800515 	stw	r6,20(r9)
 1445188:	49800415 	stw	r6,16(r9)
 144518c:	10c00054 	ori	r3,r2,1
 1445190:	31000315 	stw	r4,12(r6)
 1445194:	31000215 	stw	r4,8(r6)
 1445198:	30c00115 	stw	r3,4(r6)
 144519c:	308d883a 	add	r6,r6,r2
 14451a0:	30800015 	stw	r2,0(r6)
 14451a4:	003fa006 	br	1445028 <__alt_data_end+0xfffdf828>
 14451a8:	01001504 	movi	r4,84
 14451ac:	20c00436 	bltu	r4,r3,14451c0 <_free_r+0x2b4>
 14451b0:	1006d33a 	srli	r3,r2,12
 14451b4:	19401b84 	addi	r5,r3,110
 14451b8:	2947883a 	add	r3,r5,r5
 14451bc:	003fa706 	br	144505c <__alt_data_end+0xfffdf85c>
 14451c0:	01005504 	movi	r4,340
 14451c4:	20c00436 	bltu	r4,r3,14451d8 <_free_r+0x2cc>
 14451c8:	1006d3fa 	srli	r3,r2,15
 14451cc:	19401dc4 	addi	r5,r3,119
 14451d0:	2947883a 	add	r3,r5,r5
 14451d4:	003fa106 	br	144505c <__alt_data_end+0xfffdf85c>
 14451d8:	01015504 	movi	r4,1364
 14451dc:	20c00436 	bltu	r4,r3,14451f0 <_free_r+0x2e4>
 14451e0:	1006d4ba 	srli	r3,r2,18
 14451e4:	19401f04 	addi	r5,r3,124
 14451e8:	2947883a 	add	r3,r5,r5
 14451ec:	003f9b06 	br	144505c <__alt_data_end+0xfffdf85c>
 14451f0:	00c03f04 	movi	r3,252
 14451f4:	01401f84 	movi	r5,126
 14451f8:	003f9806 	br	144505c <__alt_data_end+0xfffdf85c>

014451fc <__sfvwrite_r>:
 14451fc:	30800217 	ldw	r2,8(r6)
 1445200:	10004526 	beq	r2,zero,1445318 <__sfvwrite_r+0x11c>
 1445204:	28c0030b 	ldhu	r3,12(r5)
 1445208:	defff404 	addi	sp,sp,-48
 144520c:	dd400715 	stw	r21,28(sp)
 1445210:	dcc00515 	stw	r19,20(sp)
 1445214:	dc000215 	stw	r16,8(sp)
 1445218:	dfc00b15 	stw	ra,44(sp)
 144521c:	df000a15 	stw	fp,40(sp)
 1445220:	ddc00915 	stw	r23,36(sp)
 1445224:	dd800815 	stw	r22,32(sp)
 1445228:	dd000615 	stw	r20,24(sp)
 144522c:	dc800415 	stw	r18,16(sp)
 1445230:	dc400315 	stw	r17,12(sp)
 1445234:	1880020c 	andi	r2,r3,8
 1445238:	2821883a 	mov	r16,r5
 144523c:	202b883a 	mov	r21,r4
 1445240:	3027883a 	mov	r19,r6
 1445244:	10002526 	beq	r2,zero,14452dc <__sfvwrite_r+0xe0>
 1445248:	28800417 	ldw	r2,16(r5)
 144524c:	10002326 	beq	r2,zero,14452dc <__sfvwrite_r+0xe0>
 1445250:	1880008c 	andi	r2,r3,2
 1445254:	9c400017 	ldw	r17,0(r19)
 1445258:	10003126 	beq	r2,zero,1445320 <__sfvwrite_r+0x124>
 144525c:	0029883a 	mov	r20,zero
 1445260:	0025883a 	mov	r18,zero
 1445264:	05810004 	movi	r22,1024
 1445268:	a00d883a 	mov	r6,r20
 144526c:	a809883a 	mov	r4,r21
 1445270:	90002526 	beq	r18,zero,1445308 <__sfvwrite_r+0x10c>
 1445274:	900f883a 	mov	r7,r18
 1445278:	81400717 	ldw	r5,28(r16)
 144527c:	b480012e 	bgeu	r22,r18,1445284 <__sfvwrite_r+0x88>
 1445280:	01c10004 	movi	r7,1024
 1445284:	80800917 	ldw	r2,36(r16)
 1445288:	103ee83a 	callr	r2
 144528c:	0080510e 	bge	zero,r2,14453d4 <__sfvwrite_r+0x1d8>
 1445290:	98c00217 	ldw	r3,8(r19)
 1445294:	a0a9883a 	add	r20,r20,r2
 1445298:	90a5c83a 	sub	r18,r18,r2
 144529c:	1885c83a 	sub	r2,r3,r2
 14452a0:	98800215 	stw	r2,8(r19)
 14452a4:	103ff01e 	bne	r2,zero,1445268 <__alt_data_end+0xfffdfa68>
 14452a8:	0005883a 	mov	r2,zero
 14452ac:	dfc00b17 	ldw	ra,44(sp)
 14452b0:	df000a17 	ldw	fp,40(sp)
 14452b4:	ddc00917 	ldw	r23,36(sp)
 14452b8:	dd800817 	ldw	r22,32(sp)
 14452bc:	dd400717 	ldw	r21,28(sp)
 14452c0:	dd000617 	ldw	r20,24(sp)
 14452c4:	dcc00517 	ldw	r19,20(sp)
 14452c8:	dc800417 	ldw	r18,16(sp)
 14452cc:	dc400317 	ldw	r17,12(sp)
 14452d0:	dc000217 	ldw	r16,8(sp)
 14452d4:	dec00c04 	addi	sp,sp,48
 14452d8:	f800283a 	ret
 14452dc:	a809883a 	mov	r4,r21
 14452e0:	800b883a 	mov	r5,r16
 14452e4:	1442d5c0 	call	1442d5c <__swsetup_r>
 14452e8:	80c0030b 	ldhu	r3,12(r16)
 14452ec:	103fd826 	beq	r2,zero,1445250 <__alt_data_end+0xfffdfa50>
 14452f0:	18c01014 	ori	r3,r3,64
 14452f4:	80c0030d 	sth	r3,12(r16)
 14452f8:	00c00244 	movi	r3,9
 14452fc:	00bfffc4 	movi	r2,-1
 1445300:	a8c00015 	stw	r3,0(r21)
 1445304:	003fe906 	br	14452ac <__alt_data_end+0xfffdfaac>
 1445308:	8d000017 	ldw	r20,0(r17)
 144530c:	8c800117 	ldw	r18,4(r17)
 1445310:	8c400204 	addi	r17,r17,8
 1445314:	003fd406 	br	1445268 <__alt_data_end+0xfffdfa68>
 1445318:	0005883a 	mov	r2,zero
 144531c:	f800283a 	ret
 1445320:	1880004c 	andi	r2,r3,1
 1445324:	1000301e 	bne	r2,zero,14453e8 <__sfvwrite_r+0x1ec>
 1445328:	002f883a 	mov	r23,zero
 144532c:	0025883a 	mov	r18,zero
 1445330:	90001c26 	beq	r18,zero,14453a4 <__sfvwrite_r+0x1a8>
 1445334:	1880800c 	andi	r2,r3,512
 1445338:	85000217 	ldw	r20,8(r16)
 144533c:	10006c26 	beq	r2,zero,14454f0 <__sfvwrite_r+0x2f4>
 1445340:	a02d883a 	mov	r22,r20
 1445344:	95008536 	bltu	r18,r20,144555c <__sfvwrite_r+0x360>
 1445348:	1881200c 	andi	r2,r3,1152
 144534c:	10009d1e 	bne	r2,zero,14455c4 <__sfvwrite_r+0x3c8>
 1445350:	81000017 	ldw	r4,0(r16)
 1445354:	a039883a 	mov	fp,r20
 1445358:	9029883a 	mov	r20,r18
 144535c:	b80b883a 	mov	r5,r23
 1445360:	b00d883a 	mov	r6,r22
 1445364:	14464700 	call	1446470 <memmove>
 1445368:	80c00217 	ldw	r3,8(r16)
 144536c:	81000017 	ldw	r4,0(r16)
 1445370:	9005883a 	mov	r2,r18
 1445374:	1f39c83a 	sub	fp,r3,fp
 1445378:	258f883a 	add	r7,r4,r22
 144537c:	87000215 	stw	fp,8(r16)
 1445380:	81c00015 	stw	r7,0(r16)
 1445384:	98c00217 	ldw	r3,8(r19)
 1445388:	b8af883a 	add	r23,r23,r2
 144538c:	90a5c83a 	sub	r18,r18,r2
 1445390:	1d05c83a 	sub	r2,r3,r20
 1445394:	98800215 	stw	r2,8(r19)
 1445398:	103fc326 	beq	r2,zero,14452a8 <__alt_data_end+0xfffdfaa8>
 144539c:	80c0030b 	ldhu	r3,12(r16)
 14453a0:	903fe41e 	bne	r18,zero,1445334 <__alt_data_end+0xfffdfb34>
 14453a4:	8dc00017 	ldw	r23,0(r17)
 14453a8:	8c800117 	ldw	r18,4(r17)
 14453ac:	8c400204 	addi	r17,r17,8
 14453b0:	003fdf06 	br	1445330 <__alt_data_end+0xfffdfb30>
 14453b4:	14477380 	call	1447738 <_realloc_r>
 14453b8:	102d883a 	mov	r22,r2
 14453bc:	1000a01e 	bne	r2,zero,1445640 <__sfvwrite_r+0x444>
 14453c0:	81400417 	ldw	r5,16(r16)
 14453c4:	a809883a 	mov	r4,r21
 14453c8:	1444f0c0 	call	1444f0c <_free_r>
 14453cc:	00800304 	movi	r2,12
 14453d0:	a8800015 	stw	r2,0(r21)
 14453d4:	80c0030b 	ldhu	r3,12(r16)
 14453d8:	00bfffc4 	movi	r2,-1
 14453dc:	18c01014 	ori	r3,r3,64
 14453e0:	80c0030d 	sth	r3,12(r16)
 14453e4:	003fb106 	br	14452ac <__alt_data_end+0xfffdfaac>
 14453e8:	0029883a 	mov	r20,zero
 14453ec:	0011883a 	mov	r8,zero
 14453f0:	0039883a 	mov	fp,zero
 14453f4:	0025883a 	mov	r18,zero
 14453f8:	90001f26 	beq	r18,zero,1445478 <__sfvwrite_r+0x27c>
 14453fc:	40006826 	beq	r8,zero,14455a0 <__sfvwrite_r+0x3a4>
 1445400:	a02f883a 	mov	r23,r20
 1445404:	9500012e 	bgeu	r18,r20,144540c <__sfvwrite_r+0x210>
 1445408:	902f883a 	mov	r23,r18
 144540c:	81000017 	ldw	r4,0(r16)
 1445410:	80800417 	ldw	r2,16(r16)
 1445414:	b82d883a 	mov	r22,r23
 1445418:	81800217 	ldw	r6,8(r16)
 144541c:	81c00517 	ldw	r7,20(r16)
 1445420:	1100022e 	bgeu	r2,r4,144542c <__sfvwrite_r+0x230>
 1445424:	31c7883a 	add	r3,r6,r7
 1445428:	1dc01816 	blt	r3,r23,144548c <__sfvwrite_r+0x290>
 144542c:	b9c03f16 	blt	r23,r7,144552c <__sfvwrite_r+0x330>
 1445430:	80800917 	ldw	r2,36(r16)
 1445434:	81400717 	ldw	r5,28(r16)
 1445438:	a809883a 	mov	r4,r21
 144543c:	da000115 	stw	r8,4(sp)
 1445440:	e00d883a 	mov	r6,fp
 1445444:	103ee83a 	callr	r2
 1445448:	102d883a 	mov	r22,r2
 144544c:	da000117 	ldw	r8,4(sp)
 1445450:	00bfe00e 	bge	zero,r2,14453d4 <__alt_data_end+0xfffdfbd4>
 1445454:	a5a9c83a 	sub	r20,r20,r22
 1445458:	a0001f26 	beq	r20,zero,14454d8 <__sfvwrite_r+0x2dc>
 144545c:	98800217 	ldw	r2,8(r19)
 1445460:	e5b9883a 	add	fp,fp,r22
 1445464:	95a5c83a 	sub	r18,r18,r22
 1445468:	15adc83a 	sub	r22,r2,r22
 144546c:	9d800215 	stw	r22,8(r19)
 1445470:	b03f8d26 	beq	r22,zero,14452a8 <__alt_data_end+0xfffdfaa8>
 1445474:	903fe11e 	bne	r18,zero,14453fc <__alt_data_end+0xfffdfbfc>
 1445478:	8f000017 	ldw	fp,0(r17)
 144547c:	8c800117 	ldw	r18,4(r17)
 1445480:	0011883a 	mov	r8,zero
 1445484:	8c400204 	addi	r17,r17,8
 1445488:	003fdb06 	br	14453f8 <__alt_data_end+0xfffdfbf8>
 144548c:	180d883a 	mov	r6,r3
 1445490:	e00b883a 	mov	r5,fp
 1445494:	da000115 	stw	r8,4(sp)
 1445498:	d8c00015 	stw	r3,0(sp)
 144549c:	14464700 	call	1446470 <memmove>
 14454a0:	d8c00017 	ldw	r3,0(sp)
 14454a4:	80800017 	ldw	r2,0(r16)
 14454a8:	a809883a 	mov	r4,r21
 14454ac:	800b883a 	mov	r5,r16
 14454b0:	10c5883a 	add	r2,r2,r3
 14454b4:	80800015 	stw	r2,0(r16)
 14454b8:	d8c00015 	stw	r3,0(sp)
 14454bc:	14447dc0 	call	14447dc <_fflush_r>
 14454c0:	d8c00017 	ldw	r3,0(sp)
 14454c4:	da000117 	ldw	r8,4(sp)
 14454c8:	103fc21e 	bne	r2,zero,14453d4 <__alt_data_end+0xfffdfbd4>
 14454cc:	182d883a 	mov	r22,r3
 14454d0:	a5a9c83a 	sub	r20,r20,r22
 14454d4:	a03fe11e 	bne	r20,zero,144545c <__alt_data_end+0xfffdfc5c>
 14454d8:	a809883a 	mov	r4,r21
 14454dc:	800b883a 	mov	r5,r16
 14454e0:	14447dc0 	call	14447dc <_fflush_r>
 14454e4:	103fbb1e 	bne	r2,zero,14453d4 <__alt_data_end+0xfffdfbd4>
 14454e8:	0011883a 	mov	r8,zero
 14454ec:	003fdb06 	br	144545c <__alt_data_end+0xfffdfc5c>
 14454f0:	81000017 	ldw	r4,0(r16)
 14454f4:	80800417 	ldw	r2,16(r16)
 14454f8:	1100012e 	bgeu	r2,r4,1445500 <__sfvwrite_r+0x304>
 14454fc:	a4805a36 	bltu	r20,r18,1445668 <__sfvwrite_r+0x46c>
 1445500:	81c00517 	ldw	r7,20(r16)
 1445504:	91c01a36 	bltu	r18,r7,1445570 <__sfvwrite_r+0x374>
 1445508:	80800917 	ldw	r2,36(r16)
 144550c:	81400717 	ldw	r5,28(r16)
 1445510:	a809883a 	mov	r4,r21
 1445514:	b80d883a 	mov	r6,r23
 1445518:	103ee83a 	callr	r2
 144551c:	1029883a 	mov	r20,r2
 1445520:	00bfac0e 	bge	zero,r2,14453d4 <__alt_data_end+0xfffdfbd4>
 1445524:	a005883a 	mov	r2,r20
 1445528:	003f9606 	br	1445384 <__alt_data_end+0xfffdfb84>
 144552c:	b80d883a 	mov	r6,r23
 1445530:	e00b883a 	mov	r5,fp
 1445534:	da000115 	stw	r8,4(sp)
 1445538:	14464700 	call	1446470 <memmove>
 144553c:	80800217 	ldw	r2,8(r16)
 1445540:	80c00017 	ldw	r3,0(r16)
 1445544:	da000117 	ldw	r8,4(sp)
 1445548:	15c5c83a 	sub	r2,r2,r23
 144554c:	1def883a 	add	r23,r3,r23
 1445550:	80800215 	stw	r2,8(r16)
 1445554:	85c00015 	stw	r23,0(r16)
 1445558:	003fbe06 	br	1445454 <__alt_data_end+0xfffdfc54>
 144555c:	81000017 	ldw	r4,0(r16)
 1445560:	9039883a 	mov	fp,r18
 1445564:	9029883a 	mov	r20,r18
 1445568:	902d883a 	mov	r22,r18
 144556c:	003f7b06 	br	144535c <__alt_data_end+0xfffdfb5c>
 1445570:	b80b883a 	mov	r5,r23
 1445574:	900d883a 	mov	r6,r18
 1445578:	14464700 	call	1446470 <memmove>
 144557c:	80c00217 	ldw	r3,8(r16)
 1445580:	80800017 	ldw	r2,0(r16)
 1445584:	9029883a 	mov	r20,r18
 1445588:	1c87c83a 	sub	r3,r3,r18
 144558c:	1485883a 	add	r2,r2,r18
 1445590:	80800015 	stw	r2,0(r16)
 1445594:	80c00215 	stw	r3,8(r16)
 1445598:	9005883a 	mov	r2,r18
 144559c:	003f7906 	br	1445384 <__alt_data_end+0xfffdfb84>
 14455a0:	e009883a 	mov	r4,fp
 14455a4:	01400284 	movi	r5,10
 14455a8:	900d883a 	mov	r6,r18
 14455ac:	14462500 	call	1446250 <memchr>
 14455b0:	10003826 	beq	r2,zero,1445694 <__sfvwrite_r+0x498>
 14455b4:	10800044 	addi	r2,r2,1
 14455b8:	1729c83a 	sub	r20,r2,fp
 14455bc:	02000044 	movi	r8,1
 14455c0:	003f8f06 	br	1445400 <__alt_data_end+0xfffdfc00>
 14455c4:	80800517 	ldw	r2,20(r16)
 14455c8:	81400417 	ldw	r5,16(r16)
 14455cc:	87000017 	ldw	fp,0(r16)
 14455d0:	10a9883a 	add	r20,r2,r2
 14455d4:	a085883a 	add	r2,r20,r2
 14455d8:	1028d7fa 	srli	r20,r2,31
 14455dc:	e179c83a 	sub	fp,fp,r5
 14455e0:	e1000044 	addi	r4,fp,1
 14455e4:	a085883a 	add	r2,r20,r2
 14455e8:	1029d07a 	srai	r20,r2,1
 14455ec:	2485883a 	add	r2,r4,r18
 14455f0:	a00d883a 	mov	r6,r20
 14455f4:	a080022e 	bgeu	r20,r2,1445600 <__sfvwrite_r+0x404>
 14455f8:	1029883a 	mov	r20,r2
 14455fc:	100d883a 	mov	r6,r2
 1445600:	18c1000c 	andi	r3,r3,1024
 1445604:	a809883a 	mov	r4,r21
 1445608:	183f6a26 	beq	r3,zero,14453b4 <__alt_data_end+0xfffdfbb4>
 144560c:	300b883a 	mov	r5,r6
 1445610:	1445aa80 	call	1445aa8 <_malloc_r>
 1445614:	102d883a 	mov	r22,r2
 1445618:	103f6c26 	beq	r2,zero,14453cc <__alt_data_end+0xfffdfbcc>
 144561c:	81400417 	ldw	r5,16(r16)
 1445620:	1009883a 	mov	r4,r2
 1445624:	e00d883a 	mov	r6,fp
 1445628:	14463380 	call	1446338 <memcpy>
 144562c:	8080030b 	ldhu	r2,12(r16)
 1445630:	00fedfc4 	movi	r3,-1153
 1445634:	10c4703a 	and	r2,r2,r3
 1445638:	10802014 	ori	r2,r2,128
 144563c:	8080030d 	sth	r2,12(r16)
 1445640:	b709883a 	add	r4,r22,fp
 1445644:	a707c83a 	sub	r3,r20,fp
 1445648:	85800415 	stw	r22,16(r16)
 144564c:	85000515 	stw	r20,20(r16)
 1445650:	81000015 	stw	r4,0(r16)
 1445654:	9039883a 	mov	fp,r18
 1445658:	80c00215 	stw	r3,8(r16)
 144565c:	9029883a 	mov	r20,r18
 1445660:	902d883a 	mov	r22,r18
 1445664:	003f3d06 	br	144535c <__alt_data_end+0xfffdfb5c>
 1445668:	b80b883a 	mov	r5,r23
 144566c:	a00d883a 	mov	r6,r20
 1445670:	14464700 	call	1446470 <memmove>
 1445674:	80800017 	ldw	r2,0(r16)
 1445678:	a809883a 	mov	r4,r21
 144567c:	800b883a 	mov	r5,r16
 1445680:	1505883a 	add	r2,r2,r20
 1445684:	80800015 	stw	r2,0(r16)
 1445688:	14447dc0 	call	14447dc <_fflush_r>
 144568c:	103fa526 	beq	r2,zero,1445524 <__alt_data_end+0xfffdfd24>
 1445690:	003f5006 	br	14453d4 <__alt_data_end+0xfffdfbd4>
 1445694:	95000044 	addi	r20,r18,1
 1445698:	02000044 	movi	r8,1
 144569c:	003f5806 	br	1445400 <__alt_data_end+0xfffdfc00>

014456a0 <_fwalk>:
 14456a0:	defff804 	addi	sp,sp,-32
 14456a4:	dd400515 	stw	r21,20(sp)
 14456a8:	2540b804 	addi	r21,r4,736
 14456ac:	dd800615 	stw	r22,24(sp)
 14456b0:	dd000415 	stw	r20,16(sp)
 14456b4:	dfc00715 	stw	ra,28(sp)
 14456b8:	dcc00315 	stw	r19,12(sp)
 14456bc:	dc800215 	stw	r18,8(sp)
 14456c0:	dc400115 	stw	r17,4(sp)
 14456c4:	dc000015 	stw	r16,0(sp)
 14456c8:	2829883a 	mov	r20,r5
 14456cc:	002d883a 	mov	r22,zero
 14456d0:	1444da80 	call	1444da8 <__sfp_lock_acquire>
 14456d4:	a8001426 	beq	r21,zero,1445728 <_fwalk+0x88>
 14456d8:	04ffffc4 	movi	r19,-1
 14456dc:	ac400117 	ldw	r17,4(r21)
 14456e0:	ac800217 	ldw	r18,8(r21)
 14456e4:	8c7fffc4 	addi	r17,r17,-1
 14456e8:	88000d16 	blt	r17,zero,1445720 <_fwalk+0x80>
 14456ec:	94000304 	addi	r16,r18,12
 14456f0:	94800384 	addi	r18,r18,14
 14456f4:	80c0000f 	ldh	r3,0(r16)
 14456f8:	8c7fffc4 	addi	r17,r17,-1
 14456fc:	813ffd04 	addi	r4,r16,-12
 1445700:	18000426 	beq	r3,zero,1445714 <_fwalk+0x74>
 1445704:	90c0000f 	ldh	r3,0(r18)
 1445708:	1cc00226 	beq	r3,r19,1445714 <_fwalk+0x74>
 144570c:	a03ee83a 	callr	r20
 1445710:	b0acb03a 	or	r22,r22,r2
 1445714:	84001a04 	addi	r16,r16,104
 1445718:	94801a04 	addi	r18,r18,104
 144571c:	8cfff51e 	bne	r17,r19,14456f4 <__alt_data_end+0xfffdfef4>
 1445720:	ad400017 	ldw	r21,0(r21)
 1445724:	a83fed1e 	bne	r21,zero,14456dc <__alt_data_end+0xfffdfedc>
 1445728:	1444dac0 	call	1444dac <__sfp_lock_release>
 144572c:	b005883a 	mov	r2,r22
 1445730:	dfc00717 	ldw	ra,28(sp)
 1445734:	dd800617 	ldw	r22,24(sp)
 1445738:	dd400517 	ldw	r21,20(sp)
 144573c:	dd000417 	ldw	r20,16(sp)
 1445740:	dcc00317 	ldw	r19,12(sp)
 1445744:	dc800217 	ldw	r18,8(sp)
 1445748:	dc400117 	ldw	r17,4(sp)
 144574c:	dc000017 	ldw	r16,0(sp)
 1445750:	dec00804 	addi	sp,sp,32
 1445754:	f800283a 	ret

01445758 <_fwalk_reent>:
 1445758:	defff804 	addi	sp,sp,-32
 144575c:	dd400515 	stw	r21,20(sp)
 1445760:	2540b804 	addi	r21,r4,736
 1445764:	dd800615 	stw	r22,24(sp)
 1445768:	dd000415 	stw	r20,16(sp)
 144576c:	dcc00315 	stw	r19,12(sp)
 1445770:	dfc00715 	stw	ra,28(sp)
 1445774:	dc800215 	stw	r18,8(sp)
 1445778:	dc400115 	stw	r17,4(sp)
 144577c:	dc000015 	stw	r16,0(sp)
 1445780:	2027883a 	mov	r19,r4
 1445784:	2829883a 	mov	r20,r5
 1445788:	002d883a 	mov	r22,zero
 144578c:	1444da80 	call	1444da8 <__sfp_lock_acquire>
 1445790:	a8001326 	beq	r21,zero,14457e0 <_fwalk_reent+0x88>
 1445794:	04bfffc4 	movi	r18,-1
 1445798:	ac400117 	ldw	r17,4(r21)
 144579c:	ac000217 	ldw	r16,8(r21)
 14457a0:	8c7fffc4 	addi	r17,r17,-1
 14457a4:	88000c16 	blt	r17,zero,14457d8 <_fwalk_reent+0x80>
 14457a8:	84000304 	addi	r16,r16,12
 14457ac:	80c0000f 	ldh	r3,0(r16)
 14457b0:	8c7fffc4 	addi	r17,r17,-1
 14457b4:	817ffd04 	addi	r5,r16,-12
 14457b8:	18000526 	beq	r3,zero,14457d0 <_fwalk_reent+0x78>
 14457bc:	80c0008f 	ldh	r3,2(r16)
 14457c0:	9809883a 	mov	r4,r19
 14457c4:	1c800226 	beq	r3,r18,14457d0 <_fwalk_reent+0x78>
 14457c8:	a03ee83a 	callr	r20
 14457cc:	b0acb03a 	or	r22,r22,r2
 14457d0:	84001a04 	addi	r16,r16,104
 14457d4:	8cbff51e 	bne	r17,r18,14457ac <__alt_data_end+0xfffdffac>
 14457d8:	ad400017 	ldw	r21,0(r21)
 14457dc:	a83fee1e 	bne	r21,zero,1445798 <__alt_data_end+0xfffdff98>
 14457e0:	1444dac0 	call	1444dac <__sfp_lock_release>
 14457e4:	b005883a 	mov	r2,r22
 14457e8:	dfc00717 	ldw	ra,28(sp)
 14457ec:	dd800617 	ldw	r22,24(sp)
 14457f0:	dd400517 	ldw	r21,20(sp)
 14457f4:	dd000417 	ldw	r20,16(sp)
 14457f8:	dcc00317 	ldw	r19,12(sp)
 14457fc:	dc800217 	ldw	r18,8(sp)
 1445800:	dc400117 	ldw	r17,4(sp)
 1445804:	dc000017 	ldw	r16,0(sp)
 1445808:	dec00804 	addi	sp,sp,32
 144580c:	f800283a 	ret

01445810 <_setlocale_r>:
 1445810:	30001b26 	beq	r6,zero,1445880 <_setlocale_r+0x70>
 1445814:	01405174 	movhi	r5,325
 1445818:	defffe04 	addi	sp,sp,-8
 144581c:	29424004 	addi	r5,r5,2304
 1445820:	3009883a 	mov	r4,r6
 1445824:	dc000015 	stw	r16,0(sp)
 1445828:	dfc00115 	stw	ra,4(sp)
 144582c:	3021883a 	mov	r16,r6
 1445830:	1447edc0 	call	1447edc <strcmp>
 1445834:	1000061e 	bne	r2,zero,1445850 <_setlocale_r+0x40>
 1445838:	00805174 	movhi	r2,325
 144583c:	10823f04 	addi	r2,r2,2300
 1445840:	dfc00117 	ldw	ra,4(sp)
 1445844:	dc000017 	ldw	r16,0(sp)
 1445848:	dec00204 	addi	sp,sp,8
 144584c:	f800283a 	ret
 1445850:	01405174 	movhi	r5,325
 1445854:	29423f04 	addi	r5,r5,2300
 1445858:	8009883a 	mov	r4,r16
 144585c:	1447edc0 	call	1447edc <strcmp>
 1445860:	103ff526 	beq	r2,zero,1445838 <__alt_data_end+0xfffe0038>
 1445864:	01405174 	movhi	r5,325
 1445868:	29422a04 	addi	r5,r5,2216
 144586c:	8009883a 	mov	r4,r16
 1445870:	1447edc0 	call	1447edc <strcmp>
 1445874:	103ff026 	beq	r2,zero,1445838 <__alt_data_end+0xfffe0038>
 1445878:	0005883a 	mov	r2,zero
 144587c:	003ff006 	br	1445840 <__alt_data_end+0xfffe0040>
 1445880:	00805174 	movhi	r2,325
 1445884:	10823f04 	addi	r2,r2,2300
 1445888:	f800283a 	ret

0144588c <__locale_charset>:
 144588c:	00805174 	movhi	r2,325
 1445890:	1083bd04 	addi	r2,r2,3828
 1445894:	f800283a 	ret

01445898 <__locale_mb_cur_max>:
 1445898:	00805174 	movhi	r2,325
 144589c:	10859b04 	addi	r2,r2,5740
 14458a0:	10800017 	ldw	r2,0(r2)
 14458a4:	f800283a 	ret

014458a8 <__locale_msgcharset>:
 14458a8:	00805174 	movhi	r2,325
 14458ac:	1083b504 	addi	r2,r2,3796
 14458b0:	f800283a 	ret

014458b4 <__locale_cjk_lang>:
 14458b4:	0005883a 	mov	r2,zero
 14458b8:	f800283a 	ret

014458bc <_localeconv_r>:
 14458bc:	00805174 	movhi	r2,325
 14458c0:	1083c504 	addi	r2,r2,3860
 14458c4:	f800283a 	ret

014458c8 <setlocale>:
 14458c8:	00c05174 	movhi	r3,325
 14458cc:	18c59a04 	addi	r3,r3,5736
 14458d0:	2005883a 	mov	r2,r4
 14458d4:	19000017 	ldw	r4,0(r3)
 14458d8:	280d883a 	mov	r6,r5
 14458dc:	100b883a 	mov	r5,r2
 14458e0:	14458101 	jmpi	1445810 <_setlocale_r>

014458e4 <localeconv>:
 14458e4:	00805174 	movhi	r2,325
 14458e8:	1083c504 	addi	r2,r2,3860
 14458ec:	f800283a 	ret

014458f0 <__smakebuf_r>:
 14458f0:	2880030b 	ldhu	r2,12(r5)
 14458f4:	10c0008c 	andi	r3,r2,2
 14458f8:	1800401e 	bne	r3,zero,14459fc <__smakebuf_r+0x10c>
 14458fc:	deffec04 	addi	sp,sp,-80
 1445900:	dc000f15 	stw	r16,60(sp)
 1445904:	2821883a 	mov	r16,r5
 1445908:	2940038f 	ldh	r5,14(r5)
 144590c:	dc401015 	stw	r17,64(sp)
 1445910:	dfc01315 	stw	ra,76(sp)
 1445914:	dcc01215 	stw	r19,72(sp)
 1445918:	dc801115 	stw	r18,68(sp)
 144591c:	2023883a 	mov	r17,r4
 1445920:	28001b16 	blt	r5,zero,1445990 <__smakebuf_r+0xa0>
 1445924:	d80d883a 	mov	r6,sp
 1445928:	14499540 	call	1449954 <_fstat_r>
 144592c:	10001716 	blt	r2,zero,144598c <__smakebuf_r+0x9c>
 1445930:	d8800117 	ldw	r2,4(sp)
 1445934:	00e00014 	movui	r3,32768
 1445938:	10bc000c 	andi	r2,r2,61440
 144593c:	10c03726 	beq	r2,r3,1445a1c <__smakebuf_r+0x12c>
 1445940:	80c0030b 	ldhu	r3,12(r16)
 1445944:	18c20014 	ori	r3,r3,2048
 1445948:	80c0030d 	sth	r3,12(r16)
 144594c:	00c80004 	movi	r3,8192
 1445950:	10c03c1e 	bne	r2,r3,1445a44 <__smakebuf_r+0x154>
 1445954:	8140038f 	ldh	r5,14(r16)
 1445958:	8809883a 	mov	r4,r17
 144595c:	14499ac0 	call	14499ac <_isatty_r>
 1445960:	10004e26 	beq	r2,zero,1445a9c <__smakebuf_r+0x1ac>
 1445964:	8080030b 	ldhu	r2,12(r16)
 1445968:	04c00044 	movi	r19,1
 144596c:	80c010c4 	addi	r3,r16,67
 1445970:	14c4b03a 	or	r2,r2,r19
 1445974:	8080030d 	sth	r2,12(r16)
 1445978:	80c00015 	stw	r3,0(r16)
 144597c:	80c00415 	stw	r3,16(r16)
 1445980:	84c00515 	stw	r19,20(r16)
 1445984:	04810004 	movi	r18,1024
 1445988:	00000706 	br	14459a8 <__smakebuf_r+0xb8>
 144598c:	8080030b 	ldhu	r2,12(r16)
 1445990:	10c0200c 	andi	r3,r2,128
 1445994:	18001f1e 	bne	r3,zero,1445a14 <__smakebuf_r+0x124>
 1445998:	04810004 	movi	r18,1024
 144599c:	10820014 	ori	r2,r2,2048
 14459a0:	8080030d 	sth	r2,12(r16)
 14459a4:	0027883a 	mov	r19,zero
 14459a8:	8809883a 	mov	r4,r17
 14459ac:	900b883a 	mov	r5,r18
 14459b0:	1445aa80 	call	1445aa8 <_malloc_r>
 14459b4:	10002e26 	beq	r2,zero,1445a70 <__smakebuf_r+0x180>
 14459b8:	80c0030b 	ldhu	r3,12(r16)
 14459bc:	01005134 	movhi	r4,324
 14459c0:	21129104 	addi	r4,r4,19012
 14459c4:	89000f15 	stw	r4,60(r17)
 14459c8:	18c02014 	ori	r3,r3,128
 14459cc:	80c0030d 	sth	r3,12(r16)
 14459d0:	80800015 	stw	r2,0(r16)
 14459d4:	80800415 	stw	r2,16(r16)
 14459d8:	84800515 	stw	r18,20(r16)
 14459dc:	98001c1e 	bne	r19,zero,1445a50 <__smakebuf_r+0x160>
 14459e0:	dfc01317 	ldw	ra,76(sp)
 14459e4:	dcc01217 	ldw	r19,72(sp)
 14459e8:	dc801117 	ldw	r18,68(sp)
 14459ec:	dc401017 	ldw	r17,64(sp)
 14459f0:	dc000f17 	ldw	r16,60(sp)
 14459f4:	dec01404 	addi	sp,sp,80
 14459f8:	f800283a 	ret
 14459fc:	288010c4 	addi	r2,r5,67
 1445a00:	28800015 	stw	r2,0(r5)
 1445a04:	28800415 	stw	r2,16(r5)
 1445a08:	00800044 	movi	r2,1
 1445a0c:	28800515 	stw	r2,20(r5)
 1445a10:	f800283a 	ret
 1445a14:	04801004 	movi	r18,64
 1445a18:	003fe006 	br	144599c <__alt_data_end+0xfffe019c>
 1445a1c:	81000a17 	ldw	r4,40(r16)
 1445a20:	00c05134 	movhi	r3,324
 1445a24:	18df9e04 	addi	r3,r3,32376
 1445a28:	20ffc51e 	bne	r4,r3,1445940 <__alt_data_end+0xfffe0140>
 1445a2c:	80c0030b 	ldhu	r3,12(r16)
 1445a30:	01010004 	movi	r4,1024
 1445a34:	81001315 	stw	r4,76(r16)
 1445a38:	1906b03a 	or	r3,r3,r4
 1445a3c:	80c0030d 	sth	r3,12(r16)
 1445a40:	003fc206 	br	144594c <__alt_data_end+0xfffe014c>
 1445a44:	0027883a 	mov	r19,zero
 1445a48:	04810004 	movi	r18,1024
 1445a4c:	003fd606 	br	14459a8 <__alt_data_end+0xfffe01a8>
 1445a50:	8140038f 	ldh	r5,14(r16)
 1445a54:	8809883a 	mov	r4,r17
 1445a58:	14499ac0 	call	14499ac <_isatty_r>
 1445a5c:	103fe026 	beq	r2,zero,14459e0 <__alt_data_end+0xfffe01e0>
 1445a60:	8080030b 	ldhu	r2,12(r16)
 1445a64:	10800054 	ori	r2,r2,1
 1445a68:	8080030d 	sth	r2,12(r16)
 1445a6c:	003fdc06 	br	14459e0 <__alt_data_end+0xfffe01e0>
 1445a70:	8080030b 	ldhu	r2,12(r16)
 1445a74:	10c0800c 	andi	r3,r2,512
 1445a78:	183fd91e 	bne	r3,zero,14459e0 <__alt_data_end+0xfffe01e0>
 1445a7c:	10800094 	ori	r2,r2,2
 1445a80:	80c010c4 	addi	r3,r16,67
 1445a84:	8080030d 	sth	r2,12(r16)
 1445a88:	00800044 	movi	r2,1
 1445a8c:	80c00015 	stw	r3,0(r16)
 1445a90:	80c00415 	stw	r3,16(r16)
 1445a94:	80800515 	stw	r2,20(r16)
 1445a98:	003fd106 	br	14459e0 <__alt_data_end+0xfffe01e0>
 1445a9c:	04c00044 	movi	r19,1
 1445aa0:	04810004 	movi	r18,1024
 1445aa4:	003fc006 	br	14459a8 <__alt_data_end+0xfffe01a8>

01445aa8 <_malloc_r>:
 1445aa8:	defff504 	addi	sp,sp,-44
 1445aac:	dc800315 	stw	r18,12(sp)
 1445ab0:	dfc00a15 	stw	ra,40(sp)
 1445ab4:	df000915 	stw	fp,36(sp)
 1445ab8:	ddc00815 	stw	r23,32(sp)
 1445abc:	dd800715 	stw	r22,28(sp)
 1445ac0:	dd400615 	stw	r21,24(sp)
 1445ac4:	dd000515 	stw	r20,20(sp)
 1445ac8:	dcc00415 	stw	r19,16(sp)
 1445acc:	dc400215 	stw	r17,8(sp)
 1445ad0:	dc000115 	stw	r16,4(sp)
 1445ad4:	288002c4 	addi	r2,r5,11
 1445ad8:	00c00584 	movi	r3,22
 1445adc:	2025883a 	mov	r18,r4
 1445ae0:	18802a2e 	bgeu	r3,r2,1445b8c <_malloc_r+0xe4>
 1445ae4:	047ffe04 	movi	r17,-8
 1445ae8:	1462703a 	and	r17,r2,r17
 1445aec:	88009e16 	blt	r17,zero,1445d68 <_malloc_r+0x2c0>
 1445af0:	89409d36 	bltu	r17,r5,1445d68 <_malloc_r+0x2c0>
 1445af4:	144d9180 	call	144d918 <__malloc_lock>
 1445af8:	00807dc4 	movi	r2,503
 1445afc:	14402736 	bltu	r2,r17,1445b9c <_malloc_r+0xf4>
 1445b00:	8806d0fa 	srli	r3,r17,3
 1445b04:	04c05174 	movhi	r19,325
 1445b08:	9cc3d304 	addi	r19,r19,3916
 1445b0c:	18c5883a 	add	r2,r3,r3
 1445b10:	1085883a 	add	r2,r2,r2
 1445b14:	1085883a 	add	r2,r2,r2
 1445b18:	9885883a 	add	r2,r19,r2
 1445b1c:	14000317 	ldw	r16,12(r2)
 1445b20:	80814a26 	beq	r16,r2,144604c <_malloc_r+0x5a4>
 1445b24:	80c00117 	ldw	r3,4(r16)
 1445b28:	81000317 	ldw	r4,12(r16)
 1445b2c:	00bfff04 	movi	r2,-4
 1445b30:	1884703a 	and	r2,r3,r2
 1445b34:	81400217 	ldw	r5,8(r16)
 1445b38:	8085883a 	add	r2,r16,r2
 1445b3c:	10c00117 	ldw	r3,4(r2)
 1445b40:	29000315 	stw	r4,12(r5)
 1445b44:	21400215 	stw	r5,8(r4)
 1445b48:	18c00054 	ori	r3,r3,1
 1445b4c:	10c00115 	stw	r3,4(r2)
 1445b50:	9009883a 	mov	r4,r18
 1445b54:	144d9380 	call	144d938 <__malloc_unlock>
 1445b58:	80800204 	addi	r2,r16,8
 1445b5c:	dfc00a17 	ldw	ra,40(sp)
 1445b60:	df000917 	ldw	fp,36(sp)
 1445b64:	ddc00817 	ldw	r23,32(sp)
 1445b68:	dd800717 	ldw	r22,28(sp)
 1445b6c:	dd400617 	ldw	r21,24(sp)
 1445b70:	dd000517 	ldw	r20,20(sp)
 1445b74:	dcc00417 	ldw	r19,16(sp)
 1445b78:	dc800317 	ldw	r18,12(sp)
 1445b7c:	dc400217 	ldw	r17,8(sp)
 1445b80:	dc000117 	ldw	r16,4(sp)
 1445b84:	dec00b04 	addi	sp,sp,44
 1445b88:	f800283a 	ret
 1445b8c:	04400404 	movi	r17,16
 1445b90:	89407536 	bltu	r17,r5,1445d68 <_malloc_r+0x2c0>
 1445b94:	144d9180 	call	144d918 <__malloc_lock>
 1445b98:	003fd906 	br	1445b00 <__alt_data_end+0xfffe0300>
 1445b9c:	8806d27a 	srli	r3,r17,9
 1445ba0:	18007526 	beq	r3,zero,1445d78 <_malloc_r+0x2d0>
 1445ba4:	00800104 	movi	r2,4
 1445ba8:	10c0ef36 	bltu	r2,r3,1445f68 <_malloc_r+0x4c0>
 1445bac:	8806d1ba 	srli	r3,r17,6
 1445bb0:	19c00e04 	addi	r7,r3,56
 1445bb4:	39cb883a 	add	r5,r7,r7
 1445bb8:	04c05174 	movhi	r19,325
 1445bbc:	294b883a 	add	r5,r5,r5
 1445bc0:	9cc3d304 	addi	r19,r19,3916
 1445bc4:	294b883a 	add	r5,r5,r5
 1445bc8:	994b883a 	add	r5,r19,r5
 1445bcc:	2c000317 	ldw	r16,12(r5)
 1445bd0:	2c000e26 	beq	r5,r16,1445c0c <_malloc_r+0x164>
 1445bd4:	80800117 	ldw	r2,4(r16)
 1445bd8:	01bfff04 	movi	r6,-4
 1445bdc:	010003c4 	movi	r4,15
 1445be0:	1184703a 	and	r2,r2,r6
 1445be4:	1447c83a 	sub	r3,r2,r17
 1445be8:	20c00716 	blt	r4,r3,1445c08 <_malloc_r+0x160>
 1445bec:	1800650e 	bge	r3,zero,1445d84 <_malloc_r+0x2dc>
 1445bf0:	84000317 	ldw	r16,12(r16)
 1445bf4:	2c000526 	beq	r5,r16,1445c0c <_malloc_r+0x164>
 1445bf8:	80800117 	ldw	r2,4(r16)
 1445bfc:	1184703a 	and	r2,r2,r6
 1445c00:	1447c83a 	sub	r3,r2,r17
 1445c04:	20fff90e 	bge	r4,r3,1445bec <__alt_data_end+0xfffe03ec>
 1445c08:	39ffffc4 	addi	r7,r7,-1
 1445c0c:	38c00044 	addi	r3,r7,1
 1445c10:	01805174 	movhi	r6,325
 1445c14:	9c000417 	ldw	r16,16(r19)
 1445c18:	3183d304 	addi	r6,r6,3916
 1445c1c:	32400204 	addi	r9,r6,8
 1445c20:	82410326 	beq	r16,r9,1446030 <_malloc_r+0x588>
 1445c24:	81000117 	ldw	r4,4(r16)
 1445c28:	00bfff04 	movi	r2,-4
 1445c2c:	208e703a 	and	r7,r4,r2
 1445c30:	3c45c83a 	sub	r2,r7,r17
 1445c34:	010003c4 	movi	r4,15
 1445c38:	2080ee16 	blt	r4,r2,1445ff4 <_malloc_r+0x54c>
 1445c3c:	32400515 	stw	r9,20(r6)
 1445c40:	32400415 	stw	r9,16(r6)
 1445c44:	1000510e 	bge	r2,zero,1445d8c <_malloc_r+0x2e4>
 1445c48:	00807fc4 	movi	r2,511
 1445c4c:	11c0ce36 	bltu	r2,r7,1445f88 <_malloc_r+0x4e0>
 1445c50:	3808d0fa 	srli	r4,r7,3
 1445c54:	01c00044 	movi	r7,1
 1445c58:	30800117 	ldw	r2,4(r6)
 1445c5c:	210b883a 	add	r5,r4,r4
 1445c60:	294b883a 	add	r5,r5,r5
 1445c64:	2009d0ba 	srai	r4,r4,2
 1445c68:	294b883a 	add	r5,r5,r5
 1445c6c:	298b883a 	add	r5,r5,r6
 1445c70:	2a000217 	ldw	r8,8(r5)
 1445c74:	3908983a 	sll	r4,r7,r4
 1445c78:	81400315 	stw	r5,12(r16)
 1445c7c:	82000215 	stw	r8,8(r16)
 1445c80:	2088b03a 	or	r4,r4,r2
 1445c84:	2c000215 	stw	r16,8(r5)
 1445c88:	31000115 	stw	r4,4(r6)
 1445c8c:	44000315 	stw	r16,12(r8)
 1445c90:	1805d0ba 	srai	r2,r3,2
 1445c94:	01400044 	movi	r5,1
 1445c98:	288a983a 	sll	r5,r5,r2
 1445c9c:	21404336 	bltu	r4,r5,1445dac <_malloc_r+0x304>
 1445ca0:	2144703a 	and	r2,r4,r5
 1445ca4:	10000a1e 	bne	r2,zero,1445cd0 <_malloc_r+0x228>
 1445ca8:	00bfff04 	movi	r2,-4
 1445cac:	294b883a 	add	r5,r5,r5
 1445cb0:	1886703a 	and	r3,r3,r2
 1445cb4:	2144703a 	and	r2,r4,r5
 1445cb8:	18c00104 	addi	r3,r3,4
 1445cbc:	1000041e 	bne	r2,zero,1445cd0 <_malloc_r+0x228>
 1445cc0:	294b883a 	add	r5,r5,r5
 1445cc4:	2144703a 	and	r2,r4,r5
 1445cc8:	18c00104 	addi	r3,r3,4
 1445ccc:	103ffc26 	beq	r2,zero,1445cc0 <__alt_data_end+0xfffe04c0>
 1445cd0:	023fff04 	movi	r8,-4
 1445cd4:	01c003c4 	movi	r7,15
 1445cd8:	18c5883a 	add	r2,r3,r3
 1445cdc:	1085883a 	add	r2,r2,r2
 1445ce0:	1085883a 	add	r2,r2,r2
 1445ce4:	9895883a 	add	r10,r19,r2
 1445ce8:	52c00304 	addi	r11,r10,12
 1445cec:	1819883a 	mov	r12,r3
 1445cf0:	5c000017 	ldw	r16,0(r11)
 1445cf4:	59bffd04 	addi	r6,r11,-12
 1445cf8:	8180041e 	bne	r16,r6,1445d0c <_malloc_r+0x264>
 1445cfc:	0000ce06 	br	1446038 <_malloc_r+0x590>
 1445d00:	2000d70e 	bge	r4,zero,1446060 <_malloc_r+0x5b8>
 1445d04:	84000317 	ldw	r16,12(r16)
 1445d08:	8180cb26 	beq	r16,r6,1446038 <_malloc_r+0x590>
 1445d0c:	80800117 	ldw	r2,4(r16)
 1445d10:	1204703a 	and	r2,r2,r8
 1445d14:	1449c83a 	sub	r4,r2,r17
 1445d18:	393ff90e 	bge	r7,r4,1445d00 <__alt_data_end+0xfffe0500>
 1445d1c:	80800317 	ldw	r2,12(r16)
 1445d20:	80c00217 	ldw	r3,8(r16)
 1445d24:	89400054 	ori	r5,r17,1
 1445d28:	81400115 	stw	r5,4(r16)
 1445d2c:	18800315 	stw	r2,12(r3)
 1445d30:	10c00215 	stw	r3,8(r2)
 1445d34:	8463883a 	add	r17,r16,r17
 1445d38:	9c400515 	stw	r17,20(r19)
 1445d3c:	9c400415 	stw	r17,16(r19)
 1445d40:	20800054 	ori	r2,r4,1
 1445d44:	88800115 	stw	r2,4(r17)
 1445d48:	8a400315 	stw	r9,12(r17)
 1445d4c:	8a400215 	stw	r9,8(r17)
 1445d50:	8923883a 	add	r17,r17,r4
 1445d54:	89000015 	stw	r4,0(r17)
 1445d58:	9009883a 	mov	r4,r18
 1445d5c:	144d9380 	call	144d938 <__malloc_unlock>
 1445d60:	80800204 	addi	r2,r16,8
 1445d64:	003f7d06 	br	1445b5c <__alt_data_end+0xfffe035c>
 1445d68:	00800304 	movi	r2,12
 1445d6c:	90800015 	stw	r2,0(r18)
 1445d70:	0005883a 	mov	r2,zero
 1445d74:	003f7906 	br	1445b5c <__alt_data_end+0xfffe035c>
 1445d78:	01401f84 	movi	r5,126
 1445d7c:	01c00fc4 	movi	r7,63
 1445d80:	003f8d06 	br	1445bb8 <__alt_data_end+0xfffe03b8>
 1445d84:	81000317 	ldw	r4,12(r16)
 1445d88:	003f6a06 	br	1445b34 <__alt_data_end+0xfffe0334>
 1445d8c:	81c5883a 	add	r2,r16,r7
 1445d90:	10c00117 	ldw	r3,4(r2)
 1445d94:	9009883a 	mov	r4,r18
 1445d98:	18c00054 	ori	r3,r3,1
 1445d9c:	10c00115 	stw	r3,4(r2)
 1445da0:	144d9380 	call	144d938 <__malloc_unlock>
 1445da4:	80800204 	addi	r2,r16,8
 1445da8:	003f6c06 	br	1445b5c <__alt_data_end+0xfffe035c>
 1445dac:	9c000217 	ldw	r16,8(r19)
 1445db0:	00bfff04 	movi	r2,-4
 1445db4:	85800117 	ldw	r22,4(r16)
 1445db8:	b0ac703a 	and	r22,r22,r2
 1445dbc:	b4400336 	bltu	r22,r17,1445dcc <_malloc_r+0x324>
 1445dc0:	b445c83a 	sub	r2,r22,r17
 1445dc4:	00c003c4 	movi	r3,15
 1445dc8:	18805d16 	blt	r3,r2,1445f40 <_malloc_r+0x498>
 1445dcc:	05c05174 	movhi	r23,325
 1445dd0:	00805174 	movhi	r2,325
 1445dd4:	bdc59c04 	addi	r23,r23,5744
 1445dd8:	1088b704 	addi	r2,r2,8924
 1445ddc:	15400017 	ldw	r21,0(r2)
 1445de0:	b9000017 	ldw	r4,0(r23)
 1445de4:	00ffffc4 	movi	r3,-1
 1445de8:	858d883a 	add	r6,r16,r22
 1445dec:	8d6b883a 	add	r21,r17,r21
 1445df0:	20c0e426 	beq	r4,r3,1446184 <_malloc_r+0x6dc>
 1445df4:	ad4403c4 	addi	r21,r21,4111
 1445df8:	00fc0004 	movi	r3,-4096
 1445dfc:	a8ea703a 	and	r21,r21,r3
 1445e00:	9009883a 	mov	r4,r18
 1445e04:	a80b883a 	mov	r5,r21
 1445e08:	d9800015 	stw	r6,0(sp)
 1445e0c:	1447d4c0 	call	1447d4c <_sbrk_r>
 1445e10:	00ffffc4 	movi	r3,-1
 1445e14:	1029883a 	mov	r20,r2
 1445e18:	d9800017 	ldw	r6,0(sp)
 1445e1c:	10c0a426 	beq	r2,r3,14460b0 <_malloc_r+0x608>
 1445e20:	1180a236 	bltu	r2,r6,14460ac <_malloc_r+0x604>
 1445e24:	07005174 	movhi	fp,325
 1445e28:	e708c004 	addi	fp,fp,8960
 1445e2c:	e0c00017 	ldw	r3,0(fp)
 1445e30:	a8c7883a 	add	r3,r21,r3
 1445e34:	e0c00015 	stw	r3,0(fp)
 1445e38:	3500da26 	beq	r6,r20,14461a4 <_malloc_r+0x6fc>
 1445e3c:	b9000017 	ldw	r4,0(r23)
 1445e40:	00bfffc4 	movi	r2,-1
 1445e44:	2080e426 	beq	r4,r2,14461d8 <_malloc_r+0x730>
 1445e48:	a185c83a 	sub	r2,r20,r6
 1445e4c:	1885883a 	add	r2,r3,r2
 1445e50:	e0800015 	stw	r2,0(fp)
 1445e54:	a0c001cc 	andi	r3,r20,7
 1445e58:	1800b526 	beq	r3,zero,1446130 <_malloc_r+0x688>
 1445e5c:	a0e9c83a 	sub	r20,r20,r3
 1445e60:	00840204 	movi	r2,4104
 1445e64:	a5000204 	addi	r20,r20,8
 1445e68:	10c7c83a 	sub	r3,r2,r3
 1445e6c:	a545883a 	add	r2,r20,r21
 1445e70:	1083ffcc 	andi	r2,r2,4095
 1445e74:	18abc83a 	sub	r21,r3,r2
 1445e78:	9009883a 	mov	r4,r18
 1445e7c:	a80b883a 	mov	r5,r21
 1445e80:	1447d4c0 	call	1447d4c <_sbrk_r>
 1445e84:	00ffffc4 	movi	r3,-1
 1445e88:	10c0d026 	beq	r2,r3,14461cc <_malloc_r+0x724>
 1445e8c:	1507c83a 	sub	r3,r2,r20
 1445e90:	a8c7883a 	add	r3,r21,r3
 1445e94:	18c00054 	ori	r3,r3,1
 1445e98:	e0800017 	ldw	r2,0(fp)
 1445e9c:	9d000215 	stw	r20,8(r19)
 1445ea0:	a0c00115 	stw	r3,4(r20)
 1445ea4:	a887883a 	add	r3,r21,r2
 1445ea8:	e0c00015 	stw	r3,0(fp)
 1445eac:	84c00e26 	beq	r16,r19,1445ee8 <_malloc_r+0x440>
 1445eb0:	018003c4 	movi	r6,15
 1445eb4:	3580a02e 	bgeu	r6,r22,1446138 <_malloc_r+0x690>
 1445eb8:	81400117 	ldw	r5,4(r16)
 1445ebc:	013ffe04 	movi	r4,-8
 1445ec0:	b0bffd04 	addi	r2,r22,-12
 1445ec4:	1104703a 	and	r2,r2,r4
 1445ec8:	2900004c 	andi	r4,r5,1
 1445ecc:	1108b03a 	or	r4,r2,r4
 1445ed0:	81000115 	stw	r4,4(r16)
 1445ed4:	01400144 	movi	r5,5
 1445ed8:	8089883a 	add	r4,r16,r2
 1445edc:	21400115 	stw	r5,4(r4)
 1445ee0:	21400215 	stw	r5,8(r4)
 1445ee4:	3080c036 	bltu	r6,r2,14461e8 <_malloc_r+0x740>
 1445ee8:	00805174 	movhi	r2,325
 1445eec:	1088b604 	addi	r2,r2,8920
 1445ef0:	11000017 	ldw	r4,0(r2)
 1445ef4:	20c0012e 	bgeu	r4,r3,1445efc <_malloc_r+0x454>
 1445ef8:	10c00015 	stw	r3,0(r2)
 1445efc:	00805174 	movhi	r2,325
 1445f00:	1088b504 	addi	r2,r2,8916
 1445f04:	11000017 	ldw	r4,0(r2)
 1445f08:	9c000217 	ldw	r16,8(r19)
 1445f0c:	20c0012e 	bgeu	r4,r3,1445f14 <_malloc_r+0x46c>
 1445f10:	10c00015 	stw	r3,0(r2)
 1445f14:	80c00117 	ldw	r3,4(r16)
 1445f18:	00bfff04 	movi	r2,-4
 1445f1c:	1886703a 	and	r3,r3,r2
 1445f20:	1c45c83a 	sub	r2,r3,r17
 1445f24:	1c400236 	bltu	r3,r17,1445f30 <_malloc_r+0x488>
 1445f28:	00c003c4 	movi	r3,15
 1445f2c:	18800416 	blt	r3,r2,1445f40 <_malloc_r+0x498>
 1445f30:	9009883a 	mov	r4,r18
 1445f34:	144d9380 	call	144d938 <__malloc_unlock>
 1445f38:	0005883a 	mov	r2,zero
 1445f3c:	003f0706 	br	1445b5c <__alt_data_end+0xfffe035c>
 1445f40:	88c00054 	ori	r3,r17,1
 1445f44:	80c00115 	stw	r3,4(r16)
 1445f48:	8463883a 	add	r17,r16,r17
 1445f4c:	10800054 	ori	r2,r2,1
 1445f50:	9c400215 	stw	r17,8(r19)
 1445f54:	88800115 	stw	r2,4(r17)
 1445f58:	9009883a 	mov	r4,r18
 1445f5c:	144d9380 	call	144d938 <__malloc_unlock>
 1445f60:	80800204 	addi	r2,r16,8
 1445f64:	003efd06 	br	1445b5c <__alt_data_end+0xfffe035c>
 1445f68:	00800504 	movi	r2,20
 1445f6c:	10c0482e 	bgeu	r2,r3,1446090 <_malloc_r+0x5e8>
 1445f70:	00801504 	movi	r2,84
 1445f74:	10c06836 	bltu	r2,r3,1446118 <_malloc_r+0x670>
 1445f78:	8806d33a 	srli	r3,r17,12
 1445f7c:	19c01b84 	addi	r7,r3,110
 1445f80:	39cb883a 	add	r5,r7,r7
 1445f84:	003f0c06 	br	1445bb8 <__alt_data_end+0xfffe03b8>
 1445f88:	3804d27a 	srli	r2,r7,9
 1445f8c:	01000104 	movi	r4,4
 1445f90:	2080422e 	bgeu	r4,r2,144609c <_malloc_r+0x5f4>
 1445f94:	01000504 	movi	r4,20
 1445f98:	20807c36 	bltu	r4,r2,144618c <_malloc_r+0x6e4>
 1445f9c:	110016c4 	addi	r4,r2,91
 1445fa0:	210b883a 	add	r5,r4,r4
 1445fa4:	294b883a 	add	r5,r5,r5
 1445fa8:	294b883a 	add	r5,r5,r5
 1445fac:	994b883a 	add	r5,r19,r5
 1445fb0:	28800217 	ldw	r2,8(r5)
 1445fb4:	02005174 	movhi	r8,325
 1445fb8:	4203d304 	addi	r8,r8,3916
 1445fbc:	11406326 	beq	r2,r5,144614c <_malloc_r+0x6a4>
 1445fc0:	01bfff04 	movi	r6,-4
 1445fc4:	11000117 	ldw	r4,4(r2)
 1445fc8:	2188703a 	and	r4,r4,r6
 1445fcc:	3900022e 	bgeu	r7,r4,1445fd8 <_malloc_r+0x530>
 1445fd0:	10800217 	ldw	r2,8(r2)
 1445fd4:	28bffb1e 	bne	r5,r2,1445fc4 <__alt_data_end+0xfffe07c4>
 1445fd8:	11800317 	ldw	r6,12(r2)
 1445fdc:	99000117 	ldw	r4,4(r19)
 1445fe0:	81800315 	stw	r6,12(r16)
 1445fe4:	80800215 	stw	r2,8(r16)
 1445fe8:	34000215 	stw	r16,8(r6)
 1445fec:	14000315 	stw	r16,12(r2)
 1445ff0:	003f2706 	br	1445c90 <__alt_data_end+0xfffe0490>
 1445ff4:	88c00054 	ori	r3,r17,1
 1445ff8:	80c00115 	stw	r3,4(r16)
 1445ffc:	8463883a 	add	r17,r16,r17
 1446000:	34400515 	stw	r17,20(r6)
 1446004:	34400415 	stw	r17,16(r6)
 1446008:	10c00054 	ori	r3,r2,1
 144600c:	8a400315 	stw	r9,12(r17)
 1446010:	8a400215 	stw	r9,8(r17)
 1446014:	88c00115 	stw	r3,4(r17)
 1446018:	88a3883a 	add	r17,r17,r2
 144601c:	88800015 	stw	r2,0(r17)
 1446020:	9009883a 	mov	r4,r18
 1446024:	144d9380 	call	144d938 <__malloc_unlock>
 1446028:	80800204 	addi	r2,r16,8
 144602c:	003ecb06 	br	1445b5c <__alt_data_end+0xfffe035c>
 1446030:	31000117 	ldw	r4,4(r6)
 1446034:	003f1606 	br	1445c90 <__alt_data_end+0xfffe0490>
 1446038:	63000044 	addi	r12,r12,1
 144603c:	608000cc 	andi	r2,r12,3
 1446040:	5ac00204 	addi	r11,r11,8
 1446044:	103f2a1e 	bne	r2,zero,1445cf0 <__alt_data_end+0xfffe04f0>
 1446048:	00002106 	br	14460d0 <_malloc_r+0x628>
 144604c:	80800204 	addi	r2,r16,8
 1446050:	84000517 	ldw	r16,20(r16)
 1446054:	143eb31e 	bne	r2,r16,1445b24 <__alt_data_end+0xfffe0324>
 1446058:	18c00084 	addi	r3,r3,2
 144605c:	003eec06 	br	1445c10 <__alt_data_end+0xfffe0410>
 1446060:	8085883a 	add	r2,r16,r2
 1446064:	10c00117 	ldw	r3,4(r2)
 1446068:	81000317 	ldw	r4,12(r16)
 144606c:	81400217 	ldw	r5,8(r16)
 1446070:	18c00054 	ori	r3,r3,1
 1446074:	10c00115 	stw	r3,4(r2)
 1446078:	29000315 	stw	r4,12(r5)
 144607c:	21400215 	stw	r5,8(r4)
 1446080:	9009883a 	mov	r4,r18
 1446084:	144d9380 	call	144d938 <__malloc_unlock>
 1446088:	80800204 	addi	r2,r16,8
 144608c:	003eb306 	br	1445b5c <__alt_data_end+0xfffe035c>
 1446090:	19c016c4 	addi	r7,r3,91
 1446094:	39cb883a 	add	r5,r7,r7
 1446098:	003ec706 	br	1445bb8 <__alt_data_end+0xfffe03b8>
 144609c:	3804d1ba 	srli	r2,r7,6
 14460a0:	11000e04 	addi	r4,r2,56
 14460a4:	210b883a 	add	r5,r4,r4
 14460a8:	003fbe06 	br	1445fa4 <__alt_data_end+0xfffe07a4>
 14460ac:	84ff5d26 	beq	r16,r19,1445e24 <__alt_data_end+0xfffe0624>
 14460b0:	9c000217 	ldw	r16,8(r19)
 14460b4:	00bfff04 	movi	r2,-4
 14460b8:	80c00117 	ldw	r3,4(r16)
 14460bc:	1886703a 	and	r3,r3,r2
 14460c0:	003f9706 	br	1445f20 <__alt_data_end+0xfffe0720>
 14460c4:	52800017 	ldw	r10,0(r10)
 14460c8:	18ffffc4 	addi	r3,r3,-1
 14460cc:	50805c1e 	bne	r10,r2,1446240 <_malloc_r+0x798>
 14460d0:	190000cc 	andi	r4,r3,3
 14460d4:	50bffe04 	addi	r2,r10,-8
 14460d8:	203ffa1e 	bne	r4,zero,14460c4 <__alt_data_end+0xfffe08c4>
 14460dc:	98800117 	ldw	r2,4(r19)
 14460e0:	0146303a 	nor	r3,zero,r5
 14460e4:	1884703a 	and	r2,r3,r2
 14460e8:	98800115 	stw	r2,4(r19)
 14460ec:	294b883a 	add	r5,r5,r5
 14460f0:	117f2e36 	bltu	r2,r5,1445dac <__alt_data_end+0xfffe05ac>
 14460f4:	283f2d26 	beq	r5,zero,1445dac <__alt_data_end+0xfffe05ac>
 14460f8:	1146703a 	and	r3,r2,r5
 14460fc:	1800521e 	bne	r3,zero,1446248 <_malloc_r+0x7a0>
 1446100:	6007883a 	mov	r3,r12
 1446104:	294b883a 	add	r5,r5,r5
 1446108:	1148703a 	and	r4,r2,r5
 144610c:	18c00104 	addi	r3,r3,4
 1446110:	203ffc26 	beq	r4,zero,1446104 <__alt_data_end+0xfffe0904>
 1446114:	003ef006 	br	1445cd8 <__alt_data_end+0xfffe04d8>
 1446118:	00805504 	movi	r2,340
 144611c:	10c01336 	bltu	r2,r3,144616c <_malloc_r+0x6c4>
 1446120:	8806d3fa 	srli	r3,r17,15
 1446124:	19c01dc4 	addi	r7,r3,119
 1446128:	39cb883a 	add	r5,r7,r7
 144612c:	003ea206 	br	1445bb8 <__alt_data_end+0xfffe03b8>
 1446130:	00c40004 	movi	r3,4096
 1446134:	003f4d06 	br	1445e6c <__alt_data_end+0xfffe066c>
 1446138:	00800044 	movi	r2,1
 144613c:	a0800115 	stw	r2,4(r20)
 1446140:	a021883a 	mov	r16,r20
 1446144:	0007883a 	mov	r3,zero
 1446148:	003f7506 	br	1445f20 <__alt_data_end+0xfffe0720>
 144614c:	200bd0ba 	srai	r5,r4,2
 1446150:	01800044 	movi	r6,1
 1446154:	41000117 	ldw	r4,4(r8)
 1446158:	314a983a 	sll	r5,r6,r5
 144615c:	100d883a 	mov	r6,r2
 1446160:	2908b03a 	or	r4,r5,r4
 1446164:	41000115 	stw	r4,4(r8)
 1446168:	003f9d06 	br	1445fe0 <__alt_data_end+0xfffe07e0>
 144616c:	00815504 	movi	r2,1364
 1446170:	10c01336 	bltu	r2,r3,14461c0 <_malloc_r+0x718>
 1446174:	8806d4ba 	srli	r3,r17,18
 1446178:	19c01f04 	addi	r7,r3,124
 144617c:	39cb883a 	add	r5,r7,r7
 1446180:	003e8d06 	br	1445bb8 <__alt_data_end+0xfffe03b8>
 1446184:	ad400404 	addi	r21,r21,16
 1446188:	003f1d06 	br	1445e00 <__alt_data_end+0xfffe0600>
 144618c:	01001504 	movi	r4,84
 1446190:	20801c36 	bltu	r4,r2,1446204 <_malloc_r+0x75c>
 1446194:	3804d33a 	srli	r2,r7,12
 1446198:	11001b84 	addi	r4,r2,110
 144619c:	210b883a 	add	r5,r4,r4
 14461a0:	003f8006 	br	1445fa4 <__alt_data_end+0xfffe07a4>
 14461a4:	3083ffcc 	andi	r2,r6,4095
 14461a8:	103f241e 	bne	r2,zero,1445e3c <__alt_data_end+0xfffe063c>
 14461ac:	99000217 	ldw	r4,8(r19)
 14461b0:	ad85883a 	add	r2,r21,r22
 14461b4:	10800054 	ori	r2,r2,1
 14461b8:	20800115 	stw	r2,4(r4)
 14461bc:	003f4a06 	br	1445ee8 <__alt_data_end+0xfffe06e8>
 14461c0:	01403f04 	movi	r5,252
 14461c4:	01c01f84 	movi	r7,126
 14461c8:	003e7b06 	br	1445bb8 <__alt_data_end+0xfffe03b8>
 14461cc:	00c00044 	movi	r3,1
 14461d0:	002b883a 	mov	r21,zero
 14461d4:	003f3006 	br	1445e98 <__alt_data_end+0xfffe0698>
 14461d8:	00805174 	movhi	r2,325
 14461dc:	10859c04 	addi	r2,r2,5744
 14461e0:	15000015 	stw	r20,0(r2)
 14461e4:	003f1b06 	br	1445e54 <__alt_data_end+0xfffe0654>
 14461e8:	9009883a 	mov	r4,r18
 14461ec:	81400204 	addi	r5,r16,8
 14461f0:	1444f0c0 	call	1444f0c <_free_r>
 14461f4:	00805174 	movhi	r2,325
 14461f8:	1088c004 	addi	r2,r2,8960
 14461fc:	10c00017 	ldw	r3,0(r2)
 1446200:	003f3906 	br	1445ee8 <__alt_data_end+0xfffe06e8>
 1446204:	01005504 	movi	r4,340
 1446208:	20800436 	bltu	r4,r2,144621c <_malloc_r+0x774>
 144620c:	3804d3fa 	srli	r2,r7,15
 1446210:	11001dc4 	addi	r4,r2,119
 1446214:	210b883a 	add	r5,r4,r4
 1446218:	003f6206 	br	1445fa4 <__alt_data_end+0xfffe07a4>
 144621c:	01015504 	movi	r4,1364
 1446220:	20800436 	bltu	r4,r2,1446234 <_malloc_r+0x78c>
 1446224:	3804d4ba 	srli	r2,r7,18
 1446228:	11001f04 	addi	r4,r2,124
 144622c:	210b883a 	add	r5,r4,r4
 1446230:	003f5c06 	br	1445fa4 <__alt_data_end+0xfffe07a4>
 1446234:	01403f04 	movi	r5,252
 1446238:	01001f84 	movi	r4,126
 144623c:	003f5906 	br	1445fa4 <__alt_data_end+0xfffe07a4>
 1446240:	98800117 	ldw	r2,4(r19)
 1446244:	003fa906 	br	14460ec <__alt_data_end+0xfffe08ec>
 1446248:	6007883a 	mov	r3,r12
 144624c:	003ea206 	br	1445cd8 <__alt_data_end+0xfffe04d8>

01446250 <memchr>:
 1446250:	208000cc 	andi	r2,r4,3
 1446254:	280f883a 	mov	r7,r5
 1446258:	10003526 	beq	r2,zero,1446330 <memchr+0xe0>
 144625c:	30bfffc4 	addi	r2,r6,-1
 1446260:	30001b26 	beq	r6,zero,14462d0 <memchr+0x80>
 1446264:	21800003 	ldbu	r6,0(r4)
 1446268:	28c03fcc 	andi	r3,r5,255
 144626c:	30c01a26 	beq	r6,r3,14462d8 <memchr+0x88>
 1446270:	180d883a 	mov	r6,r3
 1446274:	00000406 	br	1446288 <memchr+0x38>
 1446278:	10001526 	beq	r2,zero,14462d0 <memchr+0x80>
 144627c:	20c00003 	ldbu	r3,0(r4)
 1446280:	10bfffc4 	addi	r2,r2,-1
 1446284:	19801426 	beq	r3,r6,14462d8 <memchr+0x88>
 1446288:	21000044 	addi	r4,r4,1
 144628c:	20c000cc 	andi	r3,r4,3
 1446290:	183ff91e 	bne	r3,zero,1446278 <__alt_data_end+0xfffe0a78>
 1446294:	024000c4 	movi	r9,3
 1446298:	48801136 	bltu	r9,r2,14462e0 <memchr+0x90>
 144629c:	10000c26 	beq	r2,zero,14462d0 <memchr+0x80>
 14462a0:	20c00003 	ldbu	r3,0(r4)
 14462a4:	29403fcc 	andi	r5,r5,255
 14462a8:	19400b26 	beq	r3,r5,14462d8 <memchr+0x88>
 14462ac:	20c00044 	addi	r3,r4,1
 14462b0:	2085883a 	add	r2,r4,r2
 14462b4:	39803fcc 	andi	r6,r7,255
 14462b8:	00000306 	br	14462c8 <memchr+0x78>
 14462bc:	18c00044 	addi	r3,r3,1
 14462c0:	197fffc3 	ldbu	r5,-1(r3)
 14462c4:	29800426 	beq	r5,r6,14462d8 <memchr+0x88>
 14462c8:	1809883a 	mov	r4,r3
 14462cc:	18bffb1e 	bne	r3,r2,14462bc <__alt_data_end+0xfffe0abc>
 14462d0:	0005883a 	mov	r2,zero
 14462d4:	f800283a 	ret
 14462d8:	2005883a 	mov	r2,r4
 14462dc:	f800283a 	ret
 14462e0:	28c03fcc 	andi	r3,r5,255
 14462e4:	1810923a 	slli	r8,r3,8
 14462e8:	02ffbff4 	movhi	r11,65279
 14462ec:	02a02074 	movhi	r10,32897
 14462f0:	40c6b03a 	or	r3,r8,r3
 14462f4:	1810943a 	slli	r8,r3,16
 14462f8:	5affbfc4 	addi	r11,r11,-257
 14462fc:	52a02004 	addi	r10,r10,-32640
 1446300:	40d0b03a 	or	r8,r8,r3
 1446304:	20c00017 	ldw	r3,0(r4)
 1446308:	40c6f03a 	xor	r3,r8,r3
 144630c:	1acd883a 	add	r6,r3,r11
 1446310:	00c6303a 	nor	r3,zero,r3
 1446314:	30c6703a 	and	r3,r6,r3
 1446318:	1a86703a 	and	r3,r3,r10
 144631c:	183fdf1e 	bne	r3,zero,144629c <__alt_data_end+0xfffe0a9c>
 1446320:	10bfff04 	addi	r2,r2,-4
 1446324:	21000104 	addi	r4,r4,4
 1446328:	48bff636 	bltu	r9,r2,1446304 <__alt_data_end+0xfffe0b04>
 144632c:	003fdb06 	br	144629c <__alt_data_end+0xfffe0a9c>
 1446330:	3005883a 	mov	r2,r6
 1446334:	003fd706 	br	1446294 <__alt_data_end+0xfffe0a94>

01446338 <memcpy>:
 1446338:	deffff04 	addi	sp,sp,-4
 144633c:	dc000015 	stw	r16,0(sp)
 1446340:	00c003c4 	movi	r3,15
 1446344:	2005883a 	mov	r2,r4
 1446348:	1980432e 	bgeu	r3,r6,1446458 <memcpy+0x120>
 144634c:	2146b03a 	or	r3,r4,r5
 1446350:	18c000cc 	andi	r3,r3,3
 1446354:	1800421e 	bne	r3,zero,1446460 <memcpy+0x128>
 1446358:	343ffc04 	addi	r16,r6,-16
 144635c:	8020d13a 	srli	r16,r16,4
 1446360:	28c00104 	addi	r3,r5,4
 1446364:	23400104 	addi	r13,r4,4
 1446368:	801e913a 	slli	r15,r16,4
 144636c:	2b000204 	addi	r12,r5,8
 1446370:	22c00204 	addi	r11,r4,8
 1446374:	7bc00504 	addi	r15,r15,20
 1446378:	2a800304 	addi	r10,r5,12
 144637c:	22400304 	addi	r9,r4,12
 1446380:	2bdf883a 	add	r15,r5,r15
 1446384:	2811883a 	mov	r8,r5
 1446388:	200f883a 	mov	r7,r4
 144638c:	41000017 	ldw	r4,0(r8)
 1446390:	39c00404 	addi	r7,r7,16
 1446394:	18c00404 	addi	r3,r3,16
 1446398:	393ffc15 	stw	r4,-16(r7)
 144639c:	1bbffc17 	ldw	r14,-16(r3)
 14463a0:	6b400404 	addi	r13,r13,16
 14463a4:	5ac00404 	addi	r11,r11,16
 14463a8:	6bbffc15 	stw	r14,-16(r13)
 14463ac:	63800017 	ldw	r14,0(r12)
 14463b0:	4a400404 	addi	r9,r9,16
 14463b4:	42000404 	addi	r8,r8,16
 14463b8:	5bbffc15 	stw	r14,-16(r11)
 14463bc:	53800017 	ldw	r14,0(r10)
 14463c0:	63000404 	addi	r12,r12,16
 14463c4:	52800404 	addi	r10,r10,16
 14463c8:	4bbffc15 	stw	r14,-16(r9)
 14463cc:	1bffef1e 	bne	r3,r15,144638c <__alt_data_end+0xfffe0b8c>
 14463d0:	81c00044 	addi	r7,r16,1
 14463d4:	380e913a 	slli	r7,r7,4
 14463d8:	310003cc 	andi	r4,r6,15
 14463dc:	02c000c4 	movi	r11,3
 14463e0:	11c7883a 	add	r3,r2,r7
 14463e4:	29cb883a 	add	r5,r5,r7
 14463e8:	59001f2e 	bgeu	r11,r4,1446468 <memcpy+0x130>
 14463ec:	1813883a 	mov	r9,r3
 14463f0:	2811883a 	mov	r8,r5
 14463f4:	200f883a 	mov	r7,r4
 14463f8:	42800017 	ldw	r10,0(r8)
 14463fc:	4a400104 	addi	r9,r9,4
 1446400:	39ffff04 	addi	r7,r7,-4
 1446404:	4abfff15 	stw	r10,-4(r9)
 1446408:	42000104 	addi	r8,r8,4
 144640c:	59fffa36 	bltu	r11,r7,14463f8 <__alt_data_end+0xfffe0bf8>
 1446410:	213fff04 	addi	r4,r4,-4
 1446414:	2008d0ba 	srli	r4,r4,2
 1446418:	318000cc 	andi	r6,r6,3
 144641c:	21000044 	addi	r4,r4,1
 1446420:	2109883a 	add	r4,r4,r4
 1446424:	2109883a 	add	r4,r4,r4
 1446428:	1907883a 	add	r3,r3,r4
 144642c:	290b883a 	add	r5,r5,r4
 1446430:	30000626 	beq	r6,zero,144644c <memcpy+0x114>
 1446434:	198d883a 	add	r6,r3,r6
 1446438:	29c00003 	ldbu	r7,0(r5)
 144643c:	18c00044 	addi	r3,r3,1
 1446440:	29400044 	addi	r5,r5,1
 1446444:	19ffffc5 	stb	r7,-1(r3)
 1446448:	19bffb1e 	bne	r3,r6,1446438 <__alt_data_end+0xfffe0c38>
 144644c:	dc000017 	ldw	r16,0(sp)
 1446450:	dec00104 	addi	sp,sp,4
 1446454:	f800283a 	ret
 1446458:	2007883a 	mov	r3,r4
 144645c:	003ff406 	br	1446430 <__alt_data_end+0xfffe0c30>
 1446460:	2007883a 	mov	r3,r4
 1446464:	003ff306 	br	1446434 <__alt_data_end+0xfffe0c34>
 1446468:	200d883a 	mov	r6,r4
 144646c:	003ff006 	br	1446430 <__alt_data_end+0xfffe0c30>

01446470 <memmove>:
 1446470:	2005883a 	mov	r2,r4
 1446474:	29000b2e 	bgeu	r5,r4,14464a4 <memmove+0x34>
 1446478:	298f883a 	add	r7,r5,r6
 144647c:	21c0092e 	bgeu	r4,r7,14464a4 <memmove+0x34>
 1446480:	2187883a 	add	r3,r4,r6
 1446484:	198bc83a 	sub	r5,r3,r6
 1446488:	30004b26 	beq	r6,zero,14465b8 <memmove+0x148>
 144648c:	39ffffc4 	addi	r7,r7,-1
 1446490:	39000003 	ldbu	r4,0(r7)
 1446494:	18ffffc4 	addi	r3,r3,-1
 1446498:	19000005 	stb	r4,0(r3)
 144649c:	197ffb1e 	bne	r3,r5,144648c <__alt_data_end+0xfffe0c8c>
 14464a0:	f800283a 	ret
 14464a4:	00c003c4 	movi	r3,15
 14464a8:	1980412e 	bgeu	r3,r6,14465b0 <memmove+0x140>
 14464ac:	1146b03a 	or	r3,r2,r5
 14464b0:	18c000cc 	andi	r3,r3,3
 14464b4:	1800411e 	bne	r3,zero,14465bc <memmove+0x14c>
 14464b8:	33fffc04 	addi	r15,r6,-16
 14464bc:	781ed13a 	srli	r15,r15,4
 14464c0:	28c00104 	addi	r3,r5,4
 14464c4:	13400104 	addi	r13,r2,4
 14464c8:	781c913a 	slli	r14,r15,4
 14464cc:	2b000204 	addi	r12,r5,8
 14464d0:	12c00204 	addi	r11,r2,8
 14464d4:	73800504 	addi	r14,r14,20
 14464d8:	2a800304 	addi	r10,r5,12
 14464dc:	12400304 	addi	r9,r2,12
 14464e0:	2b9d883a 	add	r14,r5,r14
 14464e4:	2811883a 	mov	r8,r5
 14464e8:	100f883a 	mov	r7,r2
 14464ec:	41000017 	ldw	r4,0(r8)
 14464f0:	39c00404 	addi	r7,r7,16
 14464f4:	18c00404 	addi	r3,r3,16
 14464f8:	393ffc15 	stw	r4,-16(r7)
 14464fc:	193ffc17 	ldw	r4,-16(r3)
 1446500:	6b400404 	addi	r13,r13,16
 1446504:	5ac00404 	addi	r11,r11,16
 1446508:	693ffc15 	stw	r4,-16(r13)
 144650c:	61000017 	ldw	r4,0(r12)
 1446510:	4a400404 	addi	r9,r9,16
 1446514:	42000404 	addi	r8,r8,16
 1446518:	593ffc15 	stw	r4,-16(r11)
 144651c:	51000017 	ldw	r4,0(r10)
 1446520:	63000404 	addi	r12,r12,16
 1446524:	52800404 	addi	r10,r10,16
 1446528:	493ffc15 	stw	r4,-16(r9)
 144652c:	1bbfef1e 	bne	r3,r14,14464ec <__alt_data_end+0xfffe0cec>
 1446530:	79000044 	addi	r4,r15,1
 1446534:	2008913a 	slli	r4,r4,4
 1446538:	328003cc 	andi	r10,r6,15
 144653c:	02c000c4 	movi	r11,3
 1446540:	1107883a 	add	r3,r2,r4
 1446544:	290b883a 	add	r5,r5,r4
 1446548:	5a801e2e 	bgeu	r11,r10,14465c4 <memmove+0x154>
 144654c:	1813883a 	mov	r9,r3
 1446550:	2811883a 	mov	r8,r5
 1446554:	500f883a 	mov	r7,r10
 1446558:	41000017 	ldw	r4,0(r8)
 144655c:	4a400104 	addi	r9,r9,4
 1446560:	39ffff04 	addi	r7,r7,-4
 1446564:	493fff15 	stw	r4,-4(r9)
 1446568:	42000104 	addi	r8,r8,4
 144656c:	59fffa36 	bltu	r11,r7,1446558 <__alt_data_end+0xfffe0d58>
 1446570:	513fff04 	addi	r4,r10,-4
 1446574:	2008d0ba 	srli	r4,r4,2
 1446578:	318000cc 	andi	r6,r6,3
 144657c:	21000044 	addi	r4,r4,1
 1446580:	2109883a 	add	r4,r4,r4
 1446584:	2109883a 	add	r4,r4,r4
 1446588:	1907883a 	add	r3,r3,r4
 144658c:	290b883a 	add	r5,r5,r4
 1446590:	30000926 	beq	r6,zero,14465b8 <memmove+0x148>
 1446594:	198d883a 	add	r6,r3,r6
 1446598:	29c00003 	ldbu	r7,0(r5)
 144659c:	18c00044 	addi	r3,r3,1
 14465a0:	29400044 	addi	r5,r5,1
 14465a4:	19ffffc5 	stb	r7,-1(r3)
 14465a8:	19bffb1e 	bne	r3,r6,1446598 <__alt_data_end+0xfffe0d98>
 14465ac:	f800283a 	ret
 14465b0:	1007883a 	mov	r3,r2
 14465b4:	003ff606 	br	1446590 <__alt_data_end+0xfffe0d90>
 14465b8:	f800283a 	ret
 14465bc:	1007883a 	mov	r3,r2
 14465c0:	003ff406 	br	1446594 <__alt_data_end+0xfffe0d94>
 14465c4:	500d883a 	mov	r6,r10
 14465c8:	003ff106 	br	1446590 <__alt_data_end+0xfffe0d90>

014465cc <memset>:
 14465cc:	20c000cc 	andi	r3,r4,3
 14465d0:	2005883a 	mov	r2,r4
 14465d4:	18004326 	beq	r3,zero,14466e4 <memset+0x118>
 14465d8:	31ffffc4 	addi	r7,r6,-1
 14465dc:	30004026 	beq	r6,zero,14466e0 <memset+0x114>
 14465e0:	2813883a 	mov	r9,r5
 14465e4:	200d883a 	mov	r6,r4
 14465e8:	2007883a 	mov	r3,r4
 14465ec:	00000406 	br	1446600 <memset+0x34>
 14465f0:	3a3fffc4 	addi	r8,r7,-1
 14465f4:	31800044 	addi	r6,r6,1
 14465f8:	38003926 	beq	r7,zero,14466e0 <memset+0x114>
 14465fc:	400f883a 	mov	r7,r8
 1446600:	18c00044 	addi	r3,r3,1
 1446604:	32400005 	stb	r9,0(r6)
 1446608:	1a0000cc 	andi	r8,r3,3
 144660c:	403ff81e 	bne	r8,zero,14465f0 <__alt_data_end+0xfffe0df0>
 1446610:	010000c4 	movi	r4,3
 1446614:	21c02d2e 	bgeu	r4,r7,14466cc <memset+0x100>
 1446618:	29803fcc 	andi	r6,r5,255
 144661c:	3008923a 	slli	r4,r6,8
 1446620:	218cb03a 	or	r6,r4,r6
 1446624:	3008943a 	slli	r4,r6,16
 1446628:	218cb03a 	or	r6,r4,r6
 144662c:	010003c4 	movi	r4,15
 1446630:	21c0182e 	bgeu	r4,r7,1446694 <memset+0xc8>
 1446634:	3b3ffc04 	addi	r12,r7,-16
 1446638:	6018d13a 	srli	r12,r12,4
 144663c:	1a000104 	addi	r8,r3,4
 1446640:	1ac00204 	addi	r11,r3,8
 1446644:	6008913a 	slli	r4,r12,4
 1446648:	1a800304 	addi	r10,r3,12
 144664c:	1813883a 	mov	r9,r3
 1446650:	21000504 	addi	r4,r4,20
 1446654:	1909883a 	add	r4,r3,r4
 1446658:	49800015 	stw	r6,0(r9)
 144665c:	41800015 	stw	r6,0(r8)
 1446660:	59800015 	stw	r6,0(r11)
 1446664:	51800015 	stw	r6,0(r10)
 1446668:	42000404 	addi	r8,r8,16
 144666c:	4a400404 	addi	r9,r9,16
 1446670:	5ac00404 	addi	r11,r11,16
 1446674:	52800404 	addi	r10,r10,16
 1446678:	413ff71e 	bne	r8,r4,1446658 <__alt_data_end+0xfffe0e58>
 144667c:	63000044 	addi	r12,r12,1
 1446680:	6018913a 	slli	r12,r12,4
 1446684:	39c003cc 	andi	r7,r7,15
 1446688:	010000c4 	movi	r4,3
 144668c:	1b07883a 	add	r3,r3,r12
 1446690:	21c00e2e 	bgeu	r4,r7,14466cc <memset+0x100>
 1446694:	1813883a 	mov	r9,r3
 1446698:	3811883a 	mov	r8,r7
 144669c:	010000c4 	movi	r4,3
 14466a0:	49800015 	stw	r6,0(r9)
 14466a4:	423fff04 	addi	r8,r8,-4
 14466a8:	4a400104 	addi	r9,r9,4
 14466ac:	223ffc36 	bltu	r4,r8,14466a0 <__alt_data_end+0xfffe0ea0>
 14466b0:	393fff04 	addi	r4,r7,-4
 14466b4:	2008d0ba 	srli	r4,r4,2
 14466b8:	39c000cc 	andi	r7,r7,3
 14466bc:	21000044 	addi	r4,r4,1
 14466c0:	2109883a 	add	r4,r4,r4
 14466c4:	2109883a 	add	r4,r4,r4
 14466c8:	1907883a 	add	r3,r3,r4
 14466cc:	38000426 	beq	r7,zero,14466e0 <memset+0x114>
 14466d0:	19cf883a 	add	r7,r3,r7
 14466d4:	19400005 	stb	r5,0(r3)
 14466d8:	18c00044 	addi	r3,r3,1
 14466dc:	19fffd1e 	bne	r3,r7,14466d4 <__alt_data_end+0xfffe0ed4>
 14466e0:	f800283a 	ret
 14466e4:	2007883a 	mov	r3,r4
 14466e8:	300f883a 	mov	r7,r6
 14466ec:	003fc806 	br	1446610 <__alt_data_end+0xfffe0e10>

014466f0 <_Balloc>:
 14466f0:	20801317 	ldw	r2,76(r4)
 14466f4:	defffc04 	addi	sp,sp,-16
 14466f8:	dc400115 	stw	r17,4(sp)
 14466fc:	dc000015 	stw	r16,0(sp)
 1446700:	dfc00315 	stw	ra,12(sp)
 1446704:	dc800215 	stw	r18,8(sp)
 1446708:	2023883a 	mov	r17,r4
 144670c:	2821883a 	mov	r16,r5
 1446710:	10000f26 	beq	r2,zero,1446750 <_Balloc+0x60>
 1446714:	8407883a 	add	r3,r16,r16
 1446718:	18c7883a 	add	r3,r3,r3
 144671c:	10c7883a 	add	r3,r2,r3
 1446720:	18800017 	ldw	r2,0(r3)
 1446724:	10001126 	beq	r2,zero,144676c <_Balloc+0x7c>
 1446728:	11000017 	ldw	r4,0(r2)
 144672c:	19000015 	stw	r4,0(r3)
 1446730:	10000415 	stw	zero,16(r2)
 1446734:	10000315 	stw	zero,12(r2)
 1446738:	dfc00317 	ldw	ra,12(sp)
 144673c:	dc800217 	ldw	r18,8(sp)
 1446740:	dc400117 	ldw	r17,4(sp)
 1446744:	dc000017 	ldw	r16,0(sp)
 1446748:	dec00404 	addi	sp,sp,16
 144674c:	f800283a 	ret
 1446750:	01400104 	movi	r5,4
 1446754:	01800844 	movi	r6,33
 1446758:	144958c0 	call	144958c <_calloc_r>
 144675c:	88801315 	stw	r2,76(r17)
 1446760:	103fec1e 	bne	r2,zero,1446714 <__alt_data_end+0xfffe0f14>
 1446764:	0005883a 	mov	r2,zero
 1446768:	003ff306 	br	1446738 <__alt_data_end+0xfffe0f38>
 144676c:	01400044 	movi	r5,1
 1446770:	2c24983a 	sll	r18,r5,r16
 1446774:	8809883a 	mov	r4,r17
 1446778:	91800144 	addi	r6,r18,5
 144677c:	318d883a 	add	r6,r6,r6
 1446780:	318d883a 	add	r6,r6,r6
 1446784:	144958c0 	call	144958c <_calloc_r>
 1446788:	103ff626 	beq	r2,zero,1446764 <__alt_data_end+0xfffe0f64>
 144678c:	14000115 	stw	r16,4(r2)
 1446790:	14800215 	stw	r18,8(r2)
 1446794:	003fe606 	br	1446730 <__alt_data_end+0xfffe0f30>

01446798 <_Bfree>:
 1446798:	28000826 	beq	r5,zero,14467bc <_Bfree+0x24>
 144679c:	28c00117 	ldw	r3,4(r5)
 14467a0:	20801317 	ldw	r2,76(r4)
 14467a4:	18c7883a 	add	r3,r3,r3
 14467a8:	18c7883a 	add	r3,r3,r3
 14467ac:	10c5883a 	add	r2,r2,r3
 14467b0:	10c00017 	ldw	r3,0(r2)
 14467b4:	28c00015 	stw	r3,0(r5)
 14467b8:	11400015 	stw	r5,0(r2)
 14467bc:	f800283a 	ret

014467c0 <__multadd>:
 14467c0:	defff704 	addi	sp,sp,-36
 14467c4:	dc800215 	stw	r18,8(sp)
 14467c8:	2c800417 	ldw	r18,16(r5)
 14467cc:	ddc00715 	stw	r23,28(sp)
 14467d0:	dd800615 	stw	r22,24(sp)
 14467d4:	dd000415 	stw	r20,16(sp)
 14467d8:	dcc00315 	stw	r19,12(sp)
 14467dc:	dc400115 	stw	r17,4(sp)
 14467e0:	dc000015 	stw	r16,0(sp)
 14467e4:	dfc00815 	stw	ra,32(sp)
 14467e8:	dd400515 	stw	r21,20(sp)
 14467ec:	2827883a 	mov	r19,r5
 14467f0:	2029883a 	mov	r20,r4
 14467f4:	3023883a 	mov	r17,r6
 14467f8:	3821883a 	mov	r16,r7
 14467fc:	2d800504 	addi	r22,r5,20
 1446800:	002f883a 	mov	r23,zero
 1446804:	b5400017 	ldw	r21,0(r22)
 1446808:	880b883a 	mov	r5,r17
 144680c:	bdc00044 	addi	r23,r23,1
 1446810:	a93fffcc 	andi	r4,r21,65535
 1446814:	1440a480 	call	1440a48 <__mulsi3>
 1446818:	1421883a 	add	r16,r2,r16
 144681c:	a808d43a 	srli	r4,r21,16
 1446820:	802ad43a 	srli	r21,r16,16
 1446824:	880b883a 	mov	r5,r17
 1446828:	1440a480 	call	1440a48 <__mulsi3>
 144682c:	a88f883a 	add	r7,r21,r2
 1446830:	3804943a 	slli	r2,r7,16
 1446834:	80ffffcc 	andi	r3,r16,65535
 1446838:	b5800104 	addi	r22,r22,4
 144683c:	10c7883a 	add	r3,r2,r3
 1446840:	b0ffff15 	stw	r3,-4(r22)
 1446844:	3820d43a 	srli	r16,r7,16
 1446848:	bcbfee16 	blt	r23,r18,1446804 <__alt_data_end+0xfffe1004>
 144684c:	80000926 	beq	r16,zero,1446874 <__multadd+0xb4>
 1446850:	98800217 	ldw	r2,8(r19)
 1446854:	9080130e 	bge	r18,r2,14468a4 <__multadd+0xe4>
 1446858:	90800144 	addi	r2,r18,5
 144685c:	1085883a 	add	r2,r2,r2
 1446860:	1085883a 	add	r2,r2,r2
 1446864:	9885883a 	add	r2,r19,r2
 1446868:	14000015 	stw	r16,0(r2)
 144686c:	94800044 	addi	r18,r18,1
 1446870:	9c800415 	stw	r18,16(r19)
 1446874:	9805883a 	mov	r2,r19
 1446878:	dfc00817 	ldw	ra,32(sp)
 144687c:	ddc00717 	ldw	r23,28(sp)
 1446880:	dd800617 	ldw	r22,24(sp)
 1446884:	dd400517 	ldw	r21,20(sp)
 1446888:	dd000417 	ldw	r20,16(sp)
 144688c:	dcc00317 	ldw	r19,12(sp)
 1446890:	dc800217 	ldw	r18,8(sp)
 1446894:	dc400117 	ldw	r17,4(sp)
 1446898:	dc000017 	ldw	r16,0(sp)
 144689c:	dec00904 	addi	sp,sp,36
 14468a0:	f800283a 	ret
 14468a4:	99400117 	ldw	r5,4(r19)
 14468a8:	a009883a 	mov	r4,r20
 14468ac:	29400044 	addi	r5,r5,1
 14468b0:	14466f00 	call	14466f0 <_Balloc>
 14468b4:	99800417 	ldw	r6,16(r19)
 14468b8:	99400304 	addi	r5,r19,12
 14468bc:	11000304 	addi	r4,r2,12
 14468c0:	31800084 	addi	r6,r6,2
 14468c4:	318d883a 	add	r6,r6,r6
 14468c8:	318d883a 	add	r6,r6,r6
 14468cc:	1023883a 	mov	r17,r2
 14468d0:	14463380 	call	1446338 <memcpy>
 14468d4:	99000117 	ldw	r4,4(r19)
 14468d8:	a0c01317 	ldw	r3,76(r20)
 14468dc:	2109883a 	add	r4,r4,r4
 14468e0:	2109883a 	add	r4,r4,r4
 14468e4:	1907883a 	add	r3,r3,r4
 14468e8:	18800017 	ldw	r2,0(r3)
 14468ec:	98800015 	stw	r2,0(r19)
 14468f0:	1cc00015 	stw	r19,0(r3)
 14468f4:	8827883a 	mov	r19,r17
 14468f8:	003fd706 	br	1446858 <__alt_data_end+0xfffe1058>

014468fc <__s2b>:
 14468fc:	defff904 	addi	sp,sp,-28
 1446900:	dc400115 	stw	r17,4(sp)
 1446904:	dc000015 	stw	r16,0(sp)
 1446908:	2023883a 	mov	r17,r4
 144690c:	2821883a 	mov	r16,r5
 1446910:	39000204 	addi	r4,r7,8
 1446914:	01400244 	movi	r5,9
 1446918:	dcc00315 	stw	r19,12(sp)
 144691c:	dc800215 	stw	r18,8(sp)
 1446920:	dfc00615 	stw	ra,24(sp)
 1446924:	dd400515 	stw	r21,20(sp)
 1446928:	dd000415 	stw	r20,16(sp)
 144692c:	3825883a 	mov	r18,r7
 1446930:	3027883a 	mov	r19,r6
 1446934:	144aaf00 	call	144aaf0 <__divsi3>
 1446938:	00c00044 	movi	r3,1
 144693c:	000b883a 	mov	r5,zero
 1446940:	1880030e 	bge	r3,r2,1446950 <__s2b+0x54>
 1446944:	18c7883a 	add	r3,r3,r3
 1446948:	29400044 	addi	r5,r5,1
 144694c:	18bffd16 	blt	r3,r2,1446944 <__alt_data_end+0xfffe1144>
 1446950:	8809883a 	mov	r4,r17
 1446954:	14466f00 	call	14466f0 <_Balloc>
 1446958:	d8c00717 	ldw	r3,28(sp)
 144695c:	10c00515 	stw	r3,20(r2)
 1446960:	00c00044 	movi	r3,1
 1446964:	10c00415 	stw	r3,16(r2)
 1446968:	00c00244 	movi	r3,9
 144696c:	1cc0210e 	bge	r3,r19,14469f4 <__s2b+0xf8>
 1446970:	80eb883a 	add	r21,r16,r3
 1446974:	a829883a 	mov	r20,r21
 1446978:	84e1883a 	add	r16,r16,r19
 144697c:	a1c00007 	ldb	r7,0(r20)
 1446980:	8809883a 	mov	r4,r17
 1446984:	a5000044 	addi	r20,r20,1
 1446988:	100b883a 	mov	r5,r2
 144698c:	01800284 	movi	r6,10
 1446990:	39fff404 	addi	r7,r7,-48
 1446994:	14467c00 	call	14467c0 <__multadd>
 1446998:	a43ff81e 	bne	r20,r16,144697c <__alt_data_end+0xfffe117c>
 144699c:	ace1883a 	add	r16,r21,r19
 14469a0:	843ffe04 	addi	r16,r16,-8
 14469a4:	9c800a0e 	bge	r19,r18,14469d0 <__s2b+0xd4>
 14469a8:	94e5c83a 	sub	r18,r18,r19
 14469ac:	84a5883a 	add	r18,r16,r18
 14469b0:	81c00007 	ldb	r7,0(r16)
 14469b4:	8809883a 	mov	r4,r17
 14469b8:	84000044 	addi	r16,r16,1
 14469bc:	100b883a 	mov	r5,r2
 14469c0:	01800284 	movi	r6,10
 14469c4:	39fff404 	addi	r7,r7,-48
 14469c8:	14467c00 	call	14467c0 <__multadd>
 14469cc:	84bff81e 	bne	r16,r18,14469b0 <__alt_data_end+0xfffe11b0>
 14469d0:	dfc00617 	ldw	ra,24(sp)
 14469d4:	dd400517 	ldw	r21,20(sp)
 14469d8:	dd000417 	ldw	r20,16(sp)
 14469dc:	dcc00317 	ldw	r19,12(sp)
 14469e0:	dc800217 	ldw	r18,8(sp)
 14469e4:	dc400117 	ldw	r17,4(sp)
 14469e8:	dc000017 	ldw	r16,0(sp)
 14469ec:	dec00704 	addi	sp,sp,28
 14469f0:	f800283a 	ret
 14469f4:	84000284 	addi	r16,r16,10
 14469f8:	1827883a 	mov	r19,r3
 14469fc:	003fe906 	br	14469a4 <__alt_data_end+0xfffe11a4>

01446a00 <__hi0bits>:
 1446a00:	20bfffec 	andhi	r2,r4,65535
 1446a04:	1000141e 	bne	r2,zero,1446a58 <__hi0bits+0x58>
 1446a08:	2008943a 	slli	r4,r4,16
 1446a0c:	00800404 	movi	r2,16
 1446a10:	20ffc02c 	andhi	r3,r4,65280
 1446a14:	1800021e 	bne	r3,zero,1446a20 <__hi0bits+0x20>
 1446a18:	2008923a 	slli	r4,r4,8
 1446a1c:	10800204 	addi	r2,r2,8
 1446a20:	20fc002c 	andhi	r3,r4,61440
 1446a24:	1800021e 	bne	r3,zero,1446a30 <__hi0bits+0x30>
 1446a28:	2008913a 	slli	r4,r4,4
 1446a2c:	10800104 	addi	r2,r2,4
 1446a30:	20f0002c 	andhi	r3,r4,49152
 1446a34:	1800031e 	bne	r3,zero,1446a44 <__hi0bits+0x44>
 1446a38:	2109883a 	add	r4,r4,r4
 1446a3c:	10800084 	addi	r2,r2,2
 1446a40:	2109883a 	add	r4,r4,r4
 1446a44:	20000316 	blt	r4,zero,1446a54 <__hi0bits+0x54>
 1446a48:	2110002c 	andhi	r4,r4,16384
 1446a4c:	2000041e 	bne	r4,zero,1446a60 <__hi0bits+0x60>
 1446a50:	00800804 	movi	r2,32
 1446a54:	f800283a 	ret
 1446a58:	0005883a 	mov	r2,zero
 1446a5c:	003fec06 	br	1446a10 <__alt_data_end+0xfffe1210>
 1446a60:	10800044 	addi	r2,r2,1
 1446a64:	f800283a 	ret

01446a68 <__lo0bits>:
 1446a68:	20c00017 	ldw	r3,0(r4)
 1446a6c:	188001cc 	andi	r2,r3,7
 1446a70:	10000826 	beq	r2,zero,1446a94 <__lo0bits+0x2c>
 1446a74:	1880004c 	andi	r2,r3,1
 1446a78:	1000211e 	bne	r2,zero,1446b00 <__lo0bits+0x98>
 1446a7c:	1880008c 	andi	r2,r3,2
 1446a80:	1000211e 	bne	r2,zero,1446b08 <__lo0bits+0xa0>
 1446a84:	1806d0ba 	srli	r3,r3,2
 1446a88:	00800084 	movi	r2,2
 1446a8c:	20c00015 	stw	r3,0(r4)
 1446a90:	f800283a 	ret
 1446a94:	18bfffcc 	andi	r2,r3,65535
 1446a98:	10001326 	beq	r2,zero,1446ae8 <__lo0bits+0x80>
 1446a9c:	0005883a 	mov	r2,zero
 1446aa0:	19403fcc 	andi	r5,r3,255
 1446aa4:	2800021e 	bne	r5,zero,1446ab0 <__lo0bits+0x48>
 1446aa8:	1806d23a 	srli	r3,r3,8
 1446aac:	10800204 	addi	r2,r2,8
 1446ab0:	194003cc 	andi	r5,r3,15
 1446ab4:	2800021e 	bne	r5,zero,1446ac0 <__lo0bits+0x58>
 1446ab8:	1806d13a 	srli	r3,r3,4
 1446abc:	10800104 	addi	r2,r2,4
 1446ac0:	194000cc 	andi	r5,r3,3
 1446ac4:	2800021e 	bne	r5,zero,1446ad0 <__lo0bits+0x68>
 1446ac8:	1806d0ba 	srli	r3,r3,2
 1446acc:	10800084 	addi	r2,r2,2
 1446ad0:	1940004c 	andi	r5,r3,1
 1446ad4:	2800081e 	bne	r5,zero,1446af8 <__lo0bits+0x90>
 1446ad8:	1806d07a 	srli	r3,r3,1
 1446adc:	1800051e 	bne	r3,zero,1446af4 <__lo0bits+0x8c>
 1446ae0:	00800804 	movi	r2,32
 1446ae4:	f800283a 	ret
 1446ae8:	1806d43a 	srli	r3,r3,16
 1446aec:	00800404 	movi	r2,16
 1446af0:	003feb06 	br	1446aa0 <__alt_data_end+0xfffe12a0>
 1446af4:	10800044 	addi	r2,r2,1
 1446af8:	20c00015 	stw	r3,0(r4)
 1446afc:	f800283a 	ret
 1446b00:	0005883a 	mov	r2,zero
 1446b04:	f800283a 	ret
 1446b08:	1806d07a 	srli	r3,r3,1
 1446b0c:	00800044 	movi	r2,1
 1446b10:	20c00015 	stw	r3,0(r4)
 1446b14:	f800283a 	ret

01446b18 <__i2b>:
 1446b18:	defffd04 	addi	sp,sp,-12
 1446b1c:	dc000015 	stw	r16,0(sp)
 1446b20:	04000044 	movi	r16,1
 1446b24:	dc400115 	stw	r17,4(sp)
 1446b28:	2823883a 	mov	r17,r5
 1446b2c:	800b883a 	mov	r5,r16
 1446b30:	dfc00215 	stw	ra,8(sp)
 1446b34:	14466f00 	call	14466f0 <_Balloc>
 1446b38:	14400515 	stw	r17,20(r2)
 1446b3c:	14000415 	stw	r16,16(r2)
 1446b40:	dfc00217 	ldw	ra,8(sp)
 1446b44:	dc400117 	ldw	r17,4(sp)
 1446b48:	dc000017 	ldw	r16,0(sp)
 1446b4c:	dec00304 	addi	sp,sp,12
 1446b50:	f800283a 	ret

01446b54 <__multiply>:
 1446b54:	deffef04 	addi	sp,sp,-68
 1446b58:	dc400815 	stw	r17,32(sp)
 1446b5c:	dc000715 	stw	r16,28(sp)
 1446b60:	2c400417 	ldw	r17,16(r5)
 1446b64:	34000417 	ldw	r16,16(r6)
 1446b68:	dd800d15 	stw	r22,52(sp)
 1446b6c:	dc800915 	stw	r18,36(sp)
 1446b70:	dfc01015 	stw	ra,64(sp)
 1446b74:	df000f15 	stw	fp,60(sp)
 1446b78:	ddc00e15 	stw	r23,56(sp)
 1446b7c:	dd400c15 	stw	r21,48(sp)
 1446b80:	dd000b15 	stw	r20,44(sp)
 1446b84:	dcc00a15 	stw	r19,40(sp)
 1446b88:	2825883a 	mov	r18,r5
 1446b8c:	302d883a 	mov	r22,r6
 1446b90:	8c009116 	blt	r17,r16,1446dd8 <__multiply+0x284>
 1446b94:	8005883a 	mov	r2,r16
 1446b98:	8821883a 	mov	r16,r17
 1446b9c:	1023883a 	mov	r17,r2
 1446ba0:	90800217 	ldw	r2,8(r18)
 1446ba4:	8447883a 	add	r3,r16,r17
 1446ba8:	d8c00215 	stw	r3,8(sp)
 1446bac:	91400117 	ldw	r5,4(r18)
 1446bb0:	10c0010e 	bge	r2,r3,1446bb8 <__multiply+0x64>
 1446bb4:	29400044 	addi	r5,r5,1
 1446bb8:	14466f00 	call	14466f0 <_Balloc>
 1446bbc:	d8c00217 	ldw	r3,8(sp)
 1446bc0:	d8800615 	stw	r2,24(sp)
 1446bc4:	18eb883a 	add	r21,r3,r3
 1446bc8:	ad6b883a 	add	r21,r21,r21
 1446bcc:	10c00504 	addi	r3,r2,20
 1446bd0:	1d6b883a 	add	r21,r3,r21
 1446bd4:	d8c00115 	stw	r3,4(sp)
 1446bd8:	dd400315 	stw	r21,12(sp)
 1446bdc:	1805883a 	mov	r2,r3
 1446be0:	1d40042e 	bgeu	r3,r21,1446bf4 <__multiply+0xa0>
 1446be4:	d8c00317 	ldw	r3,12(sp)
 1446be8:	10000015 	stw	zero,0(r2)
 1446bec:	10800104 	addi	r2,r2,4
 1446bf0:	10fffc36 	bltu	r2,r3,1446be4 <__alt_data_end+0xfffe13e4>
 1446bf4:	8c63883a 	add	r17,r17,r17
 1446bf8:	b5800504 	addi	r22,r22,20
 1446bfc:	8c63883a 	add	r17,r17,r17
 1446c00:	94800504 	addi	r18,r18,20
 1446c04:	8421883a 	add	r16,r16,r16
 1446c08:	b463883a 	add	r17,r22,r17
 1446c0c:	8421883a 	add	r16,r16,r16
 1446c10:	dd800015 	stw	r22,0(sp)
 1446c14:	dc800415 	stw	r18,16(sp)
 1446c18:	dc400515 	stw	r17,20(sp)
 1446c1c:	9429883a 	add	r20,r18,r16
 1446c20:	b4404f2e 	bgeu	r22,r17,1446d60 <__multiply+0x20c>
 1446c24:	d8c00017 	ldw	r3,0(sp)
 1446c28:	1c800017 	ldw	r18,0(r3)
 1446c2c:	943fffcc 	andi	r16,r18,65535
 1446c30:	80001e26 	beq	r16,zero,1446cac <__multiply+0x158>
 1446c34:	dd800117 	ldw	r22,4(sp)
 1446c38:	dd400417 	ldw	r21,16(sp)
 1446c3c:	0025883a 	mov	r18,zero
 1446c40:	adc00017 	ldw	r23,0(r21)
 1446c44:	b4c00017 	ldw	r19,0(r22)
 1446c48:	800b883a 	mov	r5,r16
 1446c4c:	b93fffcc 	andi	r4,r23,65535
 1446c50:	1440a480 	call	1440a48 <__mulsi3>
 1446c54:	9c7fffcc 	andi	r17,r19,65535
 1446c58:	8885883a 	add	r2,r17,r2
 1446c5c:	b808d43a 	srli	r4,r23,16
 1446c60:	14a3883a 	add	r17,r2,r18
 1446c64:	9826d43a 	srli	r19,r19,16
 1446c68:	8824d43a 	srli	r18,r17,16
 1446c6c:	800b883a 	mov	r5,r16
 1446c70:	1440a480 	call	1440a48 <__mulsi3>
 1446c74:	9885883a 	add	r2,r19,r2
 1446c78:	14a7883a 	add	r19,r2,r18
 1446c7c:	88ffffcc 	andi	r3,r17,65535
 1446c80:	9822943a 	slli	r17,r19,16
 1446c84:	ad400104 	addi	r21,r21,4
 1446c88:	b005883a 	mov	r2,r22
 1446c8c:	88c6b03a 	or	r3,r17,r3
 1446c90:	b0c00015 	stw	r3,0(r22)
 1446c94:	9824d43a 	srli	r18,r19,16
 1446c98:	b5800104 	addi	r22,r22,4
 1446c9c:	ad3fe836 	bltu	r21,r20,1446c40 <__alt_data_end+0xfffe1440>
 1446ca0:	d8c00017 	ldw	r3,0(sp)
 1446ca4:	14800115 	stw	r18,4(r2)
 1446ca8:	1c800017 	ldw	r18,0(r3)
 1446cac:	9024d43a 	srli	r18,r18,16
 1446cb0:	90002226 	beq	r18,zero,1446d3c <__multiply+0x1e8>
 1446cb4:	d8c00117 	ldw	r3,4(sp)
 1446cb8:	dd800417 	ldw	r22,16(sp)
 1446cbc:	002f883a 	mov	r23,zero
 1446cc0:	1f000017 	ldw	fp,0(r3)
 1446cc4:	1823883a 	mov	r17,r3
 1446cc8:	182b883a 	mov	r21,r3
 1446ccc:	e021883a 	mov	r16,fp
 1446cd0:	00000106 	br	1446cd8 <__multiply+0x184>
 1446cd4:	982b883a 	mov	r21,r19
 1446cd8:	b100000b 	ldhu	r4,0(r22)
 1446cdc:	8020d43a 	srli	r16,r16,16
 1446ce0:	900b883a 	mov	r5,r18
 1446ce4:	1440a480 	call	1440a48 <__mulsi3>
 1446ce8:	1405883a 	add	r2,r2,r16
 1446cec:	15ef883a 	add	r23,r2,r23
 1446cf0:	b804943a 	slli	r2,r23,16
 1446cf4:	e0ffffcc 	andi	r3,fp,65535
 1446cf8:	8c400104 	addi	r17,r17,4
 1446cfc:	10c6b03a 	or	r3,r2,r3
 1446d00:	88ffff15 	stw	r3,-4(r17)
 1446d04:	b5800104 	addi	r22,r22,4
 1446d08:	b13fff17 	ldw	r4,-4(r22)
 1446d0c:	acc00104 	addi	r19,r21,4
 1446d10:	900b883a 	mov	r5,r18
 1446d14:	2008d43a 	srli	r4,r4,16
 1446d18:	9c000017 	ldw	r16,0(r19)
 1446d1c:	1440a480 	call	1440a48 <__mulsi3>
 1446d20:	b806d43a 	srli	r3,r23,16
 1446d24:	813fffcc 	andi	r4,r16,65535
 1446d28:	1105883a 	add	r2,r2,r4
 1446d2c:	10f9883a 	add	fp,r2,r3
 1446d30:	e02ed43a 	srli	r23,fp,16
 1446d34:	b53fe736 	bltu	r22,r20,1446cd4 <__alt_data_end+0xfffe14d4>
 1446d38:	af000115 	stw	fp,4(r21)
 1446d3c:	d8c00017 	ldw	r3,0(sp)
 1446d40:	d9000517 	ldw	r4,20(sp)
 1446d44:	18c00104 	addi	r3,r3,4
 1446d48:	d8c00015 	stw	r3,0(sp)
 1446d4c:	d8c00117 	ldw	r3,4(sp)
 1446d50:	18c00104 	addi	r3,r3,4
 1446d54:	d8c00115 	stw	r3,4(sp)
 1446d58:	d8c00017 	ldw	r3,0(sp)
 1446d5c:	193fb136 	bltu	r3,r4,1446c24 <__alt_data_end+0xfffe1424>
 1446d60:	d8c00217 	ldw	r3,8(sp)
 1446d64:	00c00c0e 	bge	zero,r3,1446d98 <__multiply+0x244>
 1446d68:	d8c00317 	ldw	r3,12(sp)
 1446d6c:	18bfff17 	ldw	r2,-4(r3)
 1446d70:	1d7fff04 	addi	r21,r3,-4
 1446d74:	10000326 	beq	r2,zero,1446d84 <__multiply+0x230>
 1446d78:	00000706 	br	1446d98 <__multiply+0x244>
 1446d7c:	a8800017 	ldw	r2,0(r21)
 1446d80:	1000051e 	bne	r2,zero,1446d98 <__multiply+0x244>
 1446d84:	d8c00217 	ldw	r3,8(sp)
 1446d88:	ad7fff04 	addi	r21,r21,-4
 1446d8c:	18ffffc4 	addi	r3,r3,-1
 1446d90:	d8c00215 	stw	r3,8(sp)
 1446d94:	183ff91e 	bne	r3,zero,1446d7c <__alt_data_end+0xfffe157c>
 1446d98:	d8c00617 	ldw	r3,24(sp)
 1446d9c:	d9000217 	ldw	r4,8(sp)
 1446da0:	1805883a 	mov	r2,r3
 1446da4:	19000415 	stw	r4,16(r3)
 1446da8:	dfc01017 	ldw	ra,64(sp)
 1446dac:	df000f17 	ldw	fp,60(sp)
 1446db0:	ddc00e17 	ldw	r23,56(sp)
 1446db4:	dd800d17 	ldw	r22,52(sp)
 1446db8:	dd400c17 	ldw	r21,48(sp)
 1446dbc:	dd000b17 	ldw	r20,44(sp)
 1446dc0:	dcc00a17 	ldw	r19,40(sp)
 1446dc4:	dc800917 	ldw	r18,36(sp)
 1446dc8:	dc400817 	ldw	r17,32(sp)
 1446dcc:	dc000717 	ldw	r16,28(sp)
 1446dd0:	dec01104 	addi	sp,sp,68
 1446dd4:	f800283a 	ret
 1446dd8:	3025883a 	mov	r18,r6
 1446ddc:	282d883a 	mov	r22,r5
 1446de0:	003f6f06 	br	1446ba0 <__alt_data_end+0xfffe13a0>

01446de4 <__pow5mult>:
 1446de4:	defffa04 	addi	sp,sp,-24
 1446de8:	dcc00315 	stw	r19,12(sp)
 1446dec:	dc800215 	stw	r18,8(sp)
 1446df0:	dc000015 	stw	r16,0(sp)
 1446df4:	dfc00515 	stw	ra,20(sp)
 1446df8:	dd000415 	stw	r20,16(sp)
 1446dfc:	dc400115 	stw	r17,4(sp)
 1446e00:	308000cc 	andi	r2,r6,3
 1446e04:	3021883a 	mov	r16,r6
 1446e08:	2027883a 	mov	r19,r4
 1446e0c:	2825883a 	mov	r18,r5
 1446e10:	10002e1e 	bne	r2,zero,1446ecc <__pow5mult+0xe8>
 1446e14:	8021d0ba 	srai	r16,r16,2
 1446e18:	80001a26 	beq	r16,zero,1446e84 <__pow5mult+0xa0>
 1446e1c:	9c401217 	ldw	r17,72(r19)
 1446e20:	8800061e 	bne	r17,zero,1446e3c <__pow5mult+0x58>
 1446e24:	00003406 	br	1446ef8 <__pow5mult+0x114>
 1446e28:	8021d07a 	srai	r16,r16,1
 1446e2c:	80001526 	beq	r16,zero,1446e84 <__pow5mult+0xa0>
 1446e30:	88800017 	ldw	r2,0(r17)
 1446e34:	10001c26 	beq	r2,zero,1446ea8 <__pow5mult+0xc4>
 1446e38:	1023883a 	mov	r17,r2
 1446e3c:	80c0004c 	andi	r3,r16,1
 1446e40:	183ff926 	beq	r3,zero,1446e28 <__alt_data_end+0xfffe1628>
 1446e44:	900b883a 	mov	r5,r18
 1446e48:	880d883a 	mov	r6,r17
 1446e4c:	9809883a 	mov	r4,r19
 1446e50:	1446b540 	call	1446b54 <__multiply>
 1446e54:	90001b26 	beq	r18,zero,1446ec4 <__pow5mult+0xe0>
 1446e58:	91c00117 	ldw	r7,4(r18)
 1446e5c:	98c01317 	ldw	r3,76(r19)
 1446e60:	8021d07a 	srai	r16,r16,1
 1446e64:	39cf883a 	add	r7,r7,r7
 1446e68:	39cf883a 	add	r7,r7,r7
 1446e6c:	19c7883a 	add	r3,r3,r7
 1446e70:	19000017 	ldw	r4,0(r3)
 1446e74:	91000015 	stw	r4,0(r18)
 1446e78:	1c800015 	stw	r18,0(r3)
 1446e7c:	1025883a 	mov	r18,r2
 1446e80:	803feb1e 	bne	r16,zero,1446e30 <__alt_data_end+0xfffe1630>
 1446e84:	9005883a 	mov	r2,r18
 1446e88:	dfc00517 	ldw	ra,20(sp)
 1446e8c:	dd000417 	ldw	r20,16(sp)
 1446e90:	dcc00317 	ldw	r19,12(sp)
 1446e94:	dc800217 	ldw	r18,8(sp)
 1446e98:	dc400117 	ldw	r17,4(sp)
 1446e9c:	dc000017 	ldw	r16,0(sp)
 1446ea0:	dec00604 	addi	sp,sp,24
 1446ea4:	f800283a 	ret
 1446ea8:	9809883a 	mov	r4,r19
 1446eac:	880b883a 	mov	r5,r17
 1446eb0:	880d883a 	mov	r6,r17
 1446eb4:	1446b540 	call	1446b54 <__multiply>
 1446eb8:	88800015 	stw	r2,0(r17)
 1446ebc:	10000015 	stw	zero,0(r2)
 1446ec0:	003fdd06 	br	1446e38 <__alt_data_end+0xfffe1638>
 1446ec4:	1025883a 	mov	r18,r2
 1446ec8:	003fd706 	br	1446e28 <__alt_data_end+0xfffe1628>
 1446ecc:	10bfffc4 	addi	r2,r2,-1
 1446ed0:	1085883a 	add	r2,r2,r2
 1446ed4:	00c05174 	movhi	r3,325
 1446ed8:	18c24304 	addi	r3,r3,2316
 1446edc:	1085883a 	add	r2,r2,r2
 1446ee0:	1885883a 	add	r2,r3,r2
 1446ee4:	11800017 	ldw	r6,0(r2)
 1446ee8:	000f883a 	mov	r7,zero
 1446eec:	14467c00 	call	14467c0 <__multadd>
 1446ef0:	1025883a 	mov	r18,r2
 1446ef4:	003fc706 	br	1446e14 <__alt_data_end+0xfffe1614>
 1446ef8:	05000044 	movi	r20,1
 1446efc:	9809883a 	mov	r4,r19
 1446f00:	a00b883a 	mov	r5,r20
 1446f04:	14466f00 	call	14466f0 <_Balloc>
 1446f08:	1023883a 	mov	r17,r2
 1446f0c:	00809c44 	movi	r2,625
 1446f10:	88800515 	stw	r2,20(r17)
 1446f14:	8d000415 	stw	r20,16(r17)
 1446f18:	9c401215 	stw	r17,72(r19)
 1446f1c:	88000015 	stw	zero,0(r17)
 1446f20:	003fc606 	br	1446e3c <__alt_data_end+0xfffe163c>

01446f24 <__lshift>:
 1446f24:	defff904 	addi	sp,sp,-28
 1446f28:	dd000415 	stw	r20,16(sp)
 1446f2c:	dcc00315 	stw	r19,12(sp)
 1446f30:	3029d17a 	srai	r20,r6,5
 1446f34:	2cc00417 	ldw	r19,16(r5)
 1446f38:	28800217 	ldw	r2,8(r5)
 1446f3c:	dd400515 	stw	r21,20(sp)
 1446f40:	a4e7883a 	add	r19,r20,r19
 1446f44:	dc800215 	stw	r18,8(sp)
 1446f48:	dc400115 	stw	r17,4(sp)
 1446f4c:	dc000015 	stw	r16,0(sp)
 1446f50:	dfc00615 	stw	ra,24(sp)
 1446f54:	9c000044 	addi	r16,r19,1
 1446f58:	2823883a 	mov	r17,r5
 1446f5c:	302b883a 	mov	r21,r6
 1446f60:	2025883a 	mov	r18,r4
 1446f64:	29400117 	ldw	r5,4(r5)
 1446f68:	1400030e 	bge	r2,r16,1446f78 <__lshift+0x54>
 1446f6c:	1085883a 	add	r2,r2,r2
 1446f70:	29400044 	addi	r5,r5,1
 1446f74:	143ffd16 	blt	r2,r16,1446f6c <__alt_data_end+0xfffe176c>
 1446f78:	9009883a 	mov	r4,r18
 1446f7c:	14466f00 	call	14466f0 <_Balloc>
 1446f80:	11c00504 	addi	r7,r2,20
 1446f84:	0500090e 	bge	zero,r20,1446fac <__lshift+0x88>
 1446f88:	3811883a 	mov	r8,r7
 1446f8c:	0007883a 	mov	r3,zero
 1446f90:	40000015 	stw	zero,0(r8)
 1446f94:	18c00044 	addi	r3,r3,1
 1446f98:	42000104 	addi	r8,r8,4
 1446f9c:	1d3ffc1e 	bne	r3,r20,1446f90 <__alt_data_end+0xfffe1790>
 1446fa0:	18c7883a 	add	r3,r3,r3
 1446fa4:	18c7883a 	add	r3,r3,r3
 1446fa8:	38cf883a 	add	r7,r7,r3
 1446fac:	89000417 	ldw	r4,16(r17)
 1446fb0:	88c00504 	addi	r3,r17,20
 1446fb4:	a98007cc 	andi	r6,r21,31
 1446fb8:	2109883a 	add	r4,r4,r4
 1446fbc:	2109883a 	add	r4,r4,r4
 1446fc0:	1909883a 	add	r4,r3,r4
 1446fc4:	30002326 	beq	r6,zero,1447054 <__lshift+0x130>
 1446fc8:	01400804 	movi	r5,32
 1446fcc:	298bc83a 	sub	r5,r5,r6
 1446fd0:	0013883a 	mov	r9,zero
 1446fd4:	1a000017 	ldw	r8,0(r3)
 1446fd8:	3815883a 	mov	r10,r7
 1446fdc:	39c00104 	addi	r7,r7,4
 1446fe0:	4190983a 	sll	r8,r8,r6
 1446fe4:	18c00104 	addi	r3,r3,4
 1446fe8:	4a10b03a 	or	r8,r9,r8
 1446fec:	3a3fff15 	stw	r8,-4(r7)
 1446ff0:	1a3fff17 	ldw	r8,-4(r3)
 1446ff4:	4152d83a 	srl	r9,r8,r5
 1446ff8:	193ff636 	bltu	r3,r4,1446fd4 <__alt_data_end+0xfffe17d4>
 1446ffc:	52400115 	stw	r9,4(r10)
 1447000:	48000126 	beq	r9,zero,1447008 <__lshift+0xe4>
 1447004:	9c000084 	addi	r16,r19,2
 1447008:	89000117 	ldw	r4,4(r17)
 144700c:	90c01317 	ldw	r3,76(r18)
 1447010:	843fffc4 	addi	r16,r16,-1
 1447014:	2109883a 	add	r4,r4,r4
 1447018:	2109883a 	add	r4,r4,r4
 144701c:	1907883a 	add	r3,r3,r4
 1447020:	19000017 	ldw	r4,0(r3)
 1447024:	14000415 	stw	r16,16(r2)
 1447028:	89000015 	stw	r4,0(r17)
 144702c:	1c400015 	stw	r17,0(r3)
 1447030:	dfc00617 	ldw	ra,24(sp)
 1447034:	dd400517 	ldw	r21,20(sp)
 1447038:	dd000417 	ldw	r20,16(sp)
 144703c:	dcc00317 	ldw	r19,12(sp)
 1447040:	dc800217 	ldw	r18,8(sp)
 1447044:	dc400117 	ldw	r17,4(sp)
 1447048:	dc000017 	ldw	r16,0(sp)
 144704c:	dec00704 	addi	sp,sp,28
 1447050:	f800283a 	ret
 1447054:	19400017 	ldw	r5,0(r3)
 1447058:	39c00104 	addi	r7,r7,4
 144705c:	18c00104 	addi	r3,r3,4
 1447060:	397fff15 	stw	r5,-4(r7)
 1447064:	193ffb36 	bltu	r3,r4,1447054 <__alt_data_end+0xfffe1854>
 1447068:	003fe706 	br	1447008 <__alt_data_end+0xfffe1808>

0144706c <__mcmp>:
 144706c:	20800417 	ldw	r2,16(r4)
 1447070:	28c00417 	ldw	r3,16(r5)
 1447074:	10c5c83a 	sub	r2,r2,r3
 1447078:	1000111e 	bne	r2,zero,14470c0 <__mcmp+0x54>
 144707c:	18c7883a 	add	r3,r3,r3
 1447080:	18c7883a 	add	r3,r3,r3
 1447084:	21000504 	addi	r4,r4,20
 1447088:	29400504 	addi	r5,r5,20
 144708c:	20c5883a 	add	r2,r4,r3
 1447090:	28cb883a 	add	r5,r5,r3
 1447094:	00000106 	br	144709c <__mcmp+0x30>
 1447098:	20800a2e 	bgeu	r4,r2,14470c4 <__mcmp+0x58>
 144709c:	10bfff04 	addi	r2,r2,-4
 14470a0:	297fff04 	addi	r5,r5,-4
 14470a4:	11800017 	ldw	r6,0(r2)
 14470a8:	28c00017 	ldw	r3,0(r5)
 14470ac:	30fffa26 	beq	r6,r3,1447098 <__alt_data_end+0xfffe1898>
 14470b0:	30c00236 	bltu	r6,r3,14470bc <__mcmp+0x50>
 14470b4:	00800044 	movi	r2,1
 14470b8:	f800283a 	ret
 14470bc:	00bfffc4 	movi	r2,-1
 14470c0:	f800283a 	ret
 14470c4:	0005883a 	mov	r2,zero
 14470c8:	f800283a 	ret

014470cc <__mdiff>:
 14470cc:	defffb04 	addi	sp,sp,-20
 14470d0:	dc000015 	stw	r16,0(sp)
 14470d4:	2821883a 	mov	r16,r5
 14470d8:	dcc00315 	stw	r19,12(sp)
 14470dc:	300b883a 	mov	r5,r6
 14470e0:	2027883a 	mov	r19,r4
 14470e4:	8009883a 	mov	r4,r16
 14470e8:	dc800215 	stw	r18,8(sp)
 14470ec:	dfc00415 	stw	ra,16(sp)
 14470f0:	dc400115 	stw	r17,4(sp)
 14470f4:	3025883a 	mov	r18,r6
 14470f8:	144706c0 	call	144706c <__mcmp>
 14470fc:	10005226 	beq	r2,zero,1447248 <__mdiff+0x17c>
 1447100:	10004c16 	blt	r2,zero,1447234 <__mdiff+0x168>
 1447104:	0023883a 	mov	r17,zero
 1447108:	81400117 	ldw	r5,4(r16)
 144710c:	9809883a 	mov	r4,r19
 1447110:	14466f00 	call	14466f0 <_Balloc>
 1447114:	83400417 	ldw	r13,16(r16)
 1447118:	93800417 	ldw	r14,16(r18)
 144711c:	81000504 	addi	r4,r16,20
 1447120:	6b59883a 	add	r12,r13,r13
 1447124:	739d883a 	add	r14,r14,r14
 1447128:	6319883a 	add	r12,r12,r12
 144712c:	91800504 	addi	r6,r18,20
 1447130:	739d883a 	add	r14,r14,r14
 1447134:	14400315 	stw	r17,12(r2)
 1447138:	2319883a 	add	r12,r4,r12
 144713c:	339d883a 	add	r14,r6,r14
 1447140:	12400504 	addi	r9,r2,20
 1447144:	0007883a 	mov	r3,zero
 1447148:	22000017 	ldw	r8,0(r4)
 144714c:	32800017 	ldw	r10,0(r6)
 1447150:	4ac00104 	addi	r11,r9,4
 1447154:	41ffffcc 	andi	r7,r8,65535
 1447158:	38c7883a 	add	r3,r7,r3
 144715c:	51ffffcc 	andi	r7,r10,65535
 1447160:	19cfc83a 	sub	r7,r3,r7
 1447164:	4010d43a 	srli	r8,r8,16
 1447168:	5014d43a 	srli	r10,r10,16
 144716c:	3807d43a 	srai	r3,r7,16
 1447170:	39ffffcc 	andi	r7,r7,65535
 1447174:	4291c83a 	sub	r8,r8,r10
 1447178:	40c7883a 	add	r3,r8,r3
 144717c:	1810943a 	slli	r8,r3,16
 1447180:	31800104 	addi	r6,r6,4
 1447184:	21000104 	addi	r4,r4,4
 1447188:	41ceb03a 	or	r7,r8,r7
 144718c:	49c00015 	stw	r7,0(r9)
 1447190:	1807d43a 	srai	r3,r3,16
 1447194:	580b883a 	mov	r5,r11
 1447198:	5813883a 	mov	r9,r11
 144719c:	33bfea36 	bltu	r6,r14,1447148 <__alt_data_end+0xfffe1948>
 14471a0:	2011883a 	mov	r8,r4
 14471a4:	2300152e 	bgeu	r4,r12,14471fc <__mdiff+0x130>
 14471a8:	21400017 	ldw	r5,0(r4)
 14471ac:	4a400104 	addi	r9,r9,4
 14471b0:	21000104 	addi	r4,r4,4
 14471b4:	29ffffcc 	andi	r7,r5,65535
 14471b8:	38c7883a 	add	r3,r7,r3
 14471bc:	280ad43a 	srli	r5,r5,16
 14471c0:	180dd43a 	srai	r6,r3,16
 14471c4:	19ffffcc 	andi	r7,r3,65535
 14471c8:	3147883a 	add	r3,r6,r5
 14471cc:	180a943a 	slli	r5,r3,16
 14471d0:	1807d43a 	srai	r3,r3,16
 14471d4:	29ceb03a 	or	r7,r5,r7
 14471d8:	49ffff15 	stw	r7,-4(r9)
 14471dc:	233ff236 	bltu	r4,r12,14471a8 <__alt_data_end+0xfffe19a8>
 14471e0:	0206303a 	nor	r3,zero,r8
 14471e4:	1b07883a 	add	r3,r3,r12
 14471e8:	1806d0ba 	srli	r3,r3,2
 14471ec:	18c00044 	addi	r3,r3,1
 14471f0:	18c7883a 	add	r3,r3,r3
 14471f4:	18c7883a 	add	r3,r3,r3
 14471f8:	58cb883a 	add	r5,r11,r3
 14471fc:	28ffff04 	addi	r3,r5,-4
 1447200:	3800041e 	bne	r7,zero,1447214 <__mdiff+0x148>
 1447204:	18ffff04 	addi	r3,r3,-4
 1447208:	19000017 	ldw	r4,0(r3)
 144720c:	6b7fffc4 	addi	r13,r13,-1
 1447210:	203ffc26 	beq	r4,zero,1447204 <__alt_data_end+0xfffe1a04>
 1447214:	13400415 	stw	r13,16(r2)
 1447218:	dfc00417 	ldw	ra,16(sp)
 144721c:	dcc00317 	ldw	r19,12(sp)
 1447220:	dc800217 	ldw	r18,8(sp)
 1447224:	dc400117 	ldw	r17,4(sp)
 1447228:	dc000017 	ldw	r16,0(sp)
 144722c:	dec00504 	addi	sp,sp,20
 1447230:	f800283a 	ret
 1447234:	8005883a 	mov	r2,r16
 1447238:	04400044 	movi	r17,1
 144723c:	9021883a 	mov	r16,r18
 1447240:	1025883a 	mov	r18,r2
 1447244:	003fb006 	br	1447108 <__alt_data_end+0xfffe1908>
 1447248:	9809883a 	mov	r4,r19
 144724c:	000b883a 	mov	r5,zero
 1447250:	14466f00 	call	14466f0 <_Balloc>
 1447254:	00c00044 	movi	r3,1
 1447258:	10c00415 	stw	r3,16(r2)
 144725c:	10000515 	stw	zero,20(r2)
 1447260:	003fed06 	br	1447218 <__alt_data_end+0xfffe1a18>

01447264 <__ulp>:
 1447264:	295ffc2c 	andhi	r5,r5,32752
 1447268:	00bf3034 	movhi	r2,64704
 144726c:	2887883a 	add	r3,r5,r2
 1447270:	00c0020e 	bge	zero,r3,144727c <__ulp+0x18>
 1447274:	0005883a 	mov	r2,zero
 1447278:	f800283a 	ret
 144727c:	00c7c83a 	sub	r3,zero,r3
 1447280:	180bd53a 	srai	r5,r3,20
 1447284:	008004c4 	movi	r2,19
 1447288:	11400a0e 	bge	r2,r5,14472b4 <__ulp+0x50>
 144728c:	00800c84 	movi	r2,50
 1447290:	0007883a 	mov	r3,zero
 1447294:	11400516 	blt	r2,r5,14472ac <__ulp+0x48>
 1447298:	00800cc4 	movi	r2,51
 144729c:	114bc83a 	sub	r5,r2,r5
 14472a0:	00800044 	movi	r2,1
 14472a4:	1144983a 	sll	r2,r2,r5
 14472a8:	f800283a 	ret
 14472ac:	00800044 	movi	r2,1
 14472b0:	f800283a 	ret
 14472b4:	00800234 	movhi	r2,8
 14472b8:	1147d83a 	sra	r3,r2,r5
 14472bc:	0005883a 	mov	r2,zero
 14472c0:	f800283a 	ret

014472c4 <__b2d>:
 14472c4:	defffa04 	addi	sp,sp,-24
 14472c8:	dc000015 	stw	r16,0(sp)
 14472cc:	24000417 	ldw	r16,16(r4)
 14472d0:	dc400115 	stw	r17,4(sp)
 14472d4:	24400504 	addi	r17,r4,20
 14472d8:	8421883a 	add	r16,r16,r16
 14472dc:	8421883a 	add	r16,r16,r16
 14472e0:	8c21883a 	add	r16,r17,r16
 14472e4:	dc800215 	stw	r18,8(sp)
 14472e8:	84bfff17 	ldw	r18,-4(r16)
 14472ec:	dd000415 	stw	r20,16(sp)
 14472f0:	dcc00315 	stw	r19,12(sp)
 14472f4:	9009883a 	mov	r4,r18
 14472f8:	2829883a 	mov	r20,r5
 14472fc:	dfc00515 	stw	ra,20(sp)
 1447300:	1446a000 	call	1446a00 <__hi0bits>
 1447304:	00c00804 	movi	r3,32
 1447308:	1887c83a 	sub	r3,r3,r2
 144730c:	a0c00015 	stw	r3,0(r20)
 1447310:	00c00284 	movi	r3,10
 1447314:	84ffff04 	addi	r19,r16,-4
 1447318:	18801216 	blt	r3,r2,1447364 <__b2d+0xa0>
 144731c:	014002c4 	movi	r5,11
 1447320:	2889c83a 	sub	r4,r5,r2
 1447324:	9106d83a 	srl	r3,r18,r4
 1447328:	18cffc34 	orhi	r3,r3,16368
 144732c:	8cc0282e 	bgeu	r17,r19,14473d0 <__b2d+0x10c>
 1447330:	817ffe17 	ldw	r5,-8(r16)
 1447334:	290ad83a 	srl	r5,r5,r4
 1447338:	10800544 	addi	r2,r2,21
 144733c:	9084983a 	sll	r2,r18,r2
 1447340:	2884b03a 	or	r2,r5,r2
 1447344:	dfc00517 	ldw	ra,20(sp)
 1447348:	dd000417 	ldw	r20,16(sp)
 144734c:	dcc00317 	ldw	r19,12(sp)
 1447350:	dc800217 	ldw	r18,8(sp)
 1447354:	dc400117 	ldw	r17,4(sp)
 1447358:	dc000017 	ldw	r16,0(sp)
 144735c:	dec00604 	addi	sp,sp,24
 1447360:	f800283a 	ret
 1447364:	113ffd44 	addi	r4,r2,-11
 1447368:	8cc00f2e 	bgeu	r17,r19,14473a8 <__b2d+0xe4>
 144736c:	81bffe04 	addi	r6,r16,-8
 1447370:	817ffe17 	ldw	r5,-8(r16)
 1447374:	20001326 	beq	r4,zero,14473c4 <__b2d+0x100>
 1447378:	00c00ac4 	movi	r3,43
 144737c:	1885c83a 	sub	r2,r3,r2
 1447380:	2886d83a 	srl	r3,r5,r2
 1447384:	9124983a 	sll	r18,r18,r4
 1447388:	90e4b03a 	or	r18,r18,r3
 144738c:	90cffc34 	orhi	r3,r18,16368
 1447390:	8980112e 	bgeu	r17,r6,14473d8 <__b2d+0x114>
 1447394:	81bffd17 	ldw	r6,-12(r16)
 1447398:	308cd83a 	srl	r6,r6,r2
 144739c:	2904983a 	sll	r2,r5,r4
 14473a0:	1184b03a 	or	r2,r2,r6
 14473a4:	003fe706 	br	1447344 <__alt_data_end+0xfffe1b44>
 14473a8:	20000526 	beq	r4,zero,14473c0 <__b2d+0xfc>
 14473ac:	9124983a 	sll	r18,r18,r4
 14473b0:	000d883a 	mov	r6,zero
 14473b4:	000b883a 	mov	r5,zero
 14473b8:	90cffc34 	orhi	r3,r18,16368
 14473bc:	003ff706 	br	144739c <__alt_data_end+0xfffe1b9c>
 14473c0:	000b883a 	mov	r5,zero
 14473c4:	90cffc34 	orhi	r3,r18,16368
 14473c8:	2805883a 	mov	r2,r5
 14473cc:	003fdd06 	br	1447344 <__alt_data_end+0xfffe1b44>
 14473d0:	000b883a 	mov	r5,zero
 14473d4:	003fd806 	br	1447338 <__alt_data_end+0xfffe1b38>
 14473d8:	000d883a 	mov	r6,zero
 14473dc:	003fef06 	br	144739c <__alt_data_end+0xfffe1b9c>

014473e0 <__d2b>:
 14473e0:	defff704 	addi	sp,sp,-36
 14473e4:	dc000215 	stw	r16,8(sp)
 14473e8:	3021883a 	mov	r16,r6
 14473ec:	dc400315 	stw	r17,12(sp)
 14473f0:	8022907a 	slli	r17,r16,1
 14473f4:	dd400715 	stw	r21,28(sp)
 14473f8:	282b883a 	mov	r21,r5
 14473fc:	01400044 	movi	r5,1
 1447400:	dd000615 	stw	r20,24(sp)
 1447404:	dcc00515 	stw	r19,20(sp)
 1447408:	dc800415 	stw	r18,16(sp)
 144740c:	dfc00815 	stw	ra,32(sp)
 1447410:	3829883a 	mov	r20,r7
 1447414:	dc800917 	ldw	r18,36(sp)
 1447418:	8822d57a 	srli	r17,r17,21
 144741c:	14466f00 	call	14466f0 <_Balloc>
 1447420:	1027883a 	mov	r19,r2
 1447424:	00800434 	movhi	r2,16
 1447428:	10bfffc4 	addi	r2,r2,-1
 144742c:	808c703a 	and	r6,r16,r2
 1447430:	88000126 	beq	r17,zero,1447438 <__d2b+0x58>
 1447434:	31800434 	orhi	r6,r6,16
 1447438:	d9800015 	stw	r6,0(sp)
 144743c:	a8001f26 	beq	r21,zero,14474bc <__d2b+0xdc>
 1447440:	d9000104 	addi	r4,sp,4
 1447444:	dd400115 	stw	r21,4(sp)
 1447448:	1446a680 	call	1446a68 <__lo0bits>
 144744c:	d8c00017 	ldw	r3,0(sp)
 1447450:	1000291e 	bne	r2,zero,14474f8 <__d2b+0x118>
 1447454:	d9000117 	ldw	r4,4(sp)
 1447458:	99000515 	stw	r4,20(r19)
 144745c:	1820c03a 	cmpne	r16,r3,zero
 1447460:	84000044 	addi	r16,r16,1
 1447464:	98c00615 	stw	r3,24(r19)
 1447468:	9c000415 	stw	r16,16(r19)
 144746c:	88001b1e 	bne	r17,zero,14474dc <__d2b+0xfc>
 1447470:	800690ba 	slli	r3,r16,2
 1447474:	10bef384 	addi	r2,r2,-1074
 1447478:	a0800015 	stw	r2,0(r20)
 144747c:	98c5883a 	add	r2,r19,r3
 1447480:	11000417 	ldw	r4,16(r2)
 1447484:	8020917a 	slli	r16,r16,5
 1447488:	1446a000 	call	1446a00 <__hi0bits>
 144748c:	8085c83a 	sub	r2,r16,r2
 1447490:	90800015 	stw	r2,0(r18)
 1447494:	9805883a 	mov	r2,r19
 1447498:	dfc00817 	ldw	ra,32(sp)
 144749c:	dd400717 	ldw	r21,28(sp)
 14474a0:	dd000617 	ldw	r20,24(sp)
 14474a4:	dcc00517 	ldw	r19,20(sp)
 14474a8:	dc800417 	ldw	r18,16(sp)
 14474ac:	dc400317 	ldw	r17,12(sp)
 14474b0:	dc000217 	ldw	r16,8(sp)
 14474b4:	dec00904 	addi	sp,sp,36
 14474b8:	f800283a 	ret
 14474bc:	d809883a 	mov	r4,sp
 14474c0:	1446a680 	call	1446a68 <__lo0bits>
 14474c4:	d8c00017 	ldw	r3,0(sp)
 14474c8:	04000044 	movi	r16,1
 14474cc:	9c000415 	stw	r16,16(r19)
 14474d0:	98c00515 	stw	r3,20(r19)
 14474d4:	10800804 	addi	r2,r2,32
 14474d8:	883fe526 	beq	r17,zero,1447470 <__alt_data_end+0xfffe1c70>
 14474dc:	8c7ef344 	addi	r17,r17,-1075
 14474e0:	88a3883a 	add	r17,r17,r2
 14474e4:	00c00d44 	movi	r3,53
 14474e8:	a4400015 	stw	r17,0(r20)
 14474ec:	1885c83a 	sub	r2,r3,r2
 14474f0:	90800015 	stw	r2,0(r18)
 14474f4:	003fe706 	br	1447494 <__alt_data_end+0xfffe1c94>
 14474f8:	01000804 	movi	r4,32
 14474fc:	2089c83a 	sub	r4,r4,r2
 1447500:	1908983a 	sll	r4,r3,r4
 1447504:	d9400117 	ldw	r5,4(sp)
 1447508:	1886d83a 	srl	r3,r3,r2
 144750c:	2148b03a 	or	r4,r4,r5
 1447510:	99000515 	stw	r4,20(r19)
 1447514:	d8c00015 	stw	r3,0(sp)
 1447518:	003fd006 	br	144745c <__alt_data_end+0xfffe1c5c>

0144751c <__ratio>:
 144751c:	defff904 	addi	sp,sp,-28
 1447520:	dc400315 	stw	r17,12(sp)
 1447524:	2823883a 	mov	r17,r5
 1447528:	d9400104 	addi	r5,sp,4
 144752c:	dfc00615 	stw	ra,24(sp)
 1447530:	dcc00515 	stw	r19,20(sp)
 1447534:	dc800415 	stw	r18,16(sp)
 1447538:	2027883a 	mov	r19,r4
 144753c:	dc000215 	stw	r16,8(sp)
 1447540:	14472c40 	call	14472c4 <__b2d>
 1447544:	8809883a 	mov	r4,r17
 1447548:	d80b883a 	mov	r5,sp
 144754c:	1025883a 	mov	r18,r2
 1447550:	1821883a 	mov	r16,r3
 1447554:	14472c40 	call	14472c4 <__b2d>
 1447558:	8a400417 	ldw	r9,16(r17)
 144755c:	9a000417 	ldw	r8,16(r19)
 1447560:	100d883a 	mov	r6,r2
 1447564:	d8800017 	ldw	r2,0(sp)
 1447568:	4251c83a 	sub	r8,r8,r9
 144756c:	4012917a 	slli	r9,r8,5
 1447570:	da000117 	ldw	r8,4(sp)
 1447574:	4091c83a 	sub	r8,r8,r2
 1447578:	4251883a 	add	r8,r8,r9
 144757c:	02000d0e 	bge	zero,r8,14475b4 <__ratio+0x98>
 1447580:	4010953a 	slli	r8,r8,20
 1447584:	4421883a 	add	r16,r8,r16
 1447588:	9009883a 	mov	r4,r18
 144758c:	800b883a 	mov	r5,r16
 1447590:	180f883a 	mov	r7,r3
 1447594:	144b44c0 	call	144b44c <__divdf3>
 1447598:	dfc00617 	ldw	ra,24(sp)
 144759c:	dcc00517 	ldw	r19,20(sp)
 14475a0:	dc800417 	ldw	r18,16(sp)
 14475a4:	dc400317 	ldw	r17,12(sp)
 14475a8:	dc000217 	ldw	r16,8(sp)
 14475ac:	dec00704 	addi	sp,sp,28
 14475b0:	f800283a 	ret
 14475b4:	4010953a 	slli	r8,r8,20
 14475b8:	1a07c83a 	sub	r3,r3,r8
 14475bc:	003ff206 	br	1447588 <__alt_data_end+0xfffe1d88>

014475c0 <_mprec_log10>:
 14475c0:	defffe04 	addi	sp,sp,-8
 14475c4:	dc000015 	stw	r16,0(sp)
 14475c8:	dfc00115 	stw	ra,4(sp)
 14475cc:	008005c4 	movi	r2,23
 14475d0:	2021883a 	mov	r16,r4
 14475d4:	11000d0e 	bge	r2,r4,144760c <_mprec_log10+0x4c>
 14475d8:	0005883a 	mov	r2,zero
 14475dc:	00cffc34 	movhi	r3,16368
 14475e0:	843fffc4 	addi	r16,r16,-1
 14475e4:	1009883a 	mov	r4,r2
 14475e8:	180b883a 	mov	r5,r3
 14475ec:	000d883a 	mov	r6,zero
 14475f0:	01d00934 	movhi	r7,16420
 14475f4:	144c0100 	call	144c010 <__muldf3>
 14475f8:	803ff91e 	bne	r16,zero,14475e0 <__alt_data_end+0xfffe1de0>
 14475fc:	dfc00117 	ldw	ra,4(sp)
 1447600:	dc000017 	ldw	r16,0(sp)
 1447604:	dec00204 	addi	sp,sp,8
 1447608:	f800283a 	ret
 144760c:	202090fa 	slli	r16,r4,3
 1447610:	00805174 	movhi	r2,325
 1447614:	10825a04 	addi	r2,r2,2408
 1447618:	1421883a 	add	r16,r2,r16
 144761c:	80800017 	ldw	r2,0(r16)
 1447620:	80c00117 	ldw	r3,4(r16)
 1447624:	dfc00117 	ldw	ra,4(sp)
 1447628:	dc000017 	ldw	r16,0(sp)
 144762c:	dec00204 	addi	sp,sp,8
 1447630:	f800283a 	ret

01447634 <__copybits>:
 1447634:	297fffc4 	addi	r5,r5,-1
 1447638:	280fd17a 	srai	r7,r5,5
 144763c:	30c00417 	ldw	r3,16(r6)
 1447640:	30800504 	addi	r2,r6,20
 1447644:	39c00044 	addi	r7,r7,1
 1447648:	18c7883a 	add	r3,r3,r3
 144764c:	39cf883a 	add	r7,r7,r7
 1447650:	18c7883a 	add	r3,r3,r3
 1447654:	39cf883a 	add	r7,r7,r7
 1447658:	10c7883a 	add	r3,r2,r3
 144765c:	21cf883a 	add	r7,r4,r7
 1447660:	10c00d2e 	bgeu	r2,r3,1447698 <__copybits+0x64>
 1447664:	200b883a 	mov	r5,r4
 1447668:	12000017 	ldw	r8,0(r2)
 144766c:	29400104 	addi	r5,r5,4
 1447670:	10800104 	addi	r2,r2,4
 1447674:	2a3fff15 	stw	r8,-4(r5)
 1447678:	10fffb36 	bltu	r2,r3,1447668 <__alt_data_end+0xfffe1e68>
 144767c:	1985c83a 	sub	r2,r3,r6
 1447680:	10bffac4 	addi	r2,r2,-21
 1447684:	1004d0ba 	srli	r2,r2,2
 1447688:	10800044 	addi	r2,r2,1
 144768c:	1085883a 	add	r2,r2,r2
 1447690:	1085883a 	add	r2,r2,r2
 1447694:	2089883a 	add	r4,r4,r2
 1447698:	21c0032e 	bgeu	r4,r7,14476a8 <__copybits+0x74>
 144769c:	20000015 	stw	zero,0(r4)
 14476a0:	21000104 	addi	r4,r4,4
 14476a4:	21fffd36 	bltu	r4,r7,144769c <__alt_data_end+0xfffe1e9c>
 14476a8:	f800283a 	ret

014476ac <__any_on>:
 14476ac:	20c00417 	ldw	r3,16(r4)
 14476b0:	2805d17a 	srai	r2,r5,5
 14476b4:	21000504 	addi	r4,r4,20
 14476b8:	18800d0e 	bge	r3,r2,14476f0 <__any_on+0x44>
 14476bc:	18c7883a 	add	r3,r3,r3
 14476c0:	18c7883a 	add	r3,r3,r3
 14476c4:	20c7883a 	add	r3,r4,r3
 14476c8:	20c0192e 	bgeu	r4,r3,1447730 <__any_on+0x84>
 14476cc:	18bfff17 	ldw	r2,-4(r3)
 14476d0:	18ffff04 	addi	r3,r3,-4
 14476d4:	1000041e 	bne	r2,zero,14476e8 <__any_on+0x3c>
 14476d8:	20c0142e 	bgeu	r4,r3,144772c <__any_on+0x80>
 14476dc:	18ffff04 	addi	r3,r3,-4
 14476e0:	19400017 	ldw	r5,0(r3)
 14476e4:	283ffc26 	beq	r5,zero,14476d8 <__alt_data_end+0xfffe1ed8>
 14476e8:	00800044 	movi	r2,1
 14476ec:	f800283a 	ret
 14476f0:	10c00a0e 	bge	r2,r3,144771c <__any_on+0x70>
 14476f4:	1085883a 	add	r2,r2,r2
 14476f8:	1085883a 	add	r2,r2,r2
 14476fc:	294007cc 	andi	r5,r5,31
 1447700:	2087883a 	add	r3,r4,r2
 1447704:	283ff026 	beq	r5,zero,14476c8 <__alt_data_end+0xfffe1ec8>
 1447708:	19800017 	ldw	r6,0(r3)
 144770c:	3144d83a 	srl	r2,r6,r5
 1447710:	114a983a 	sll	r5,r2,r5
 1447714:	29bff41e 	bne	r5,r6,14476e8 <__alt_data_end+0xfffe1ee8>
 1447718:	003feb06 	br	14476c8 <__alt_data_end+0xfffe1ec8>
 144771c:	1085883a 	add	r2,r2,r2
 1447720:	1085883a 	add	r2,r2,r2
 1447724:	2087883a 	add	r3,r4,r2
 1447728:	003fe706 	br	14476c8 <__alt_data_end+0xfffe1ec8>
 144772c:	f800283a 	ret
 1447730:	0005883a 	mov	r2,zero
 1447734:	f800283a 	ret

01447738 <_realloc_r>:
 1447738:	defff604 	addi	sp,sp,-40
 144773c:	dcc00315 	stw	r19,12(sp)
 1447740:	dc400115 	stw	r17,4(sp)
 1447744:	dfc00915 	stw	ra,36(sp)
 1447748:	df000815 	stw	fp,32(sp)
 144774c:	ddc00715 	stw	r23,28(sp)
 1447750:	dd800615 	stw	r22,24(sp)
 1447754:	dd400515 	stw	r21,20(sp)
 1447758:	dd000415 	stw	r20,16(sp)
 144775c:	dc800215 	stw	r18,8(sp)
 1447760:	dc000015 	stw	r16,0(sp)
 1447764:	2827883a 	mov	r19,r5
 1447768:	3023883a 	mov	r17,r6
 144776c:	2800bf26 	beq	r5,zero,1447a6c <_realloc_r+0x334>
 1447770:	2025883a 	mov	r18,r4
 1447774:	144d9180 	call	144d918 <__malloc_lock>
 1447778:	98ffff17 	ldw	r3,-4(r19)
 144777c:	01bfff04 	movi	r6,-4
 1447780:	890002c4 	addi	r4,r17,11
 1447784:	01c00584 	movi	r7,22
 1447788:	9d7ffe04 	addi	r21,r19,-8
 144778c:	19a0703a 	and	r16,r3,r6
 1447790:	39003f2e 	bgeu	r7,r4,1447890 <_realloc_r+0x158>
 1447794:	053ffe04 	movi	r20,-8
 1447798:	2528703a 	and	r20,r4,r20
 144779c:	a00f883a 	mov	r7,r20
 14477a0:	a0008216 	blt	r20,zero,14479ac <_realloc_r+0x274>
 14477a4:	a4408136 	bltu	r20,r17,14479ac <_realloc_r+0x274>
 14477a8:	81c03c0e 	bge	r16,r7,144789c <_realloc_r+0x164>
 14477ac:	07005174 	movhi	fp,325
 14477b0:	e703d304 	addi	fp,fp,3916
 14477b4:	e1000217 	ldw	r4,8(fp)
 14477b8:	ac05883a 	add	r2,r21,r16
 14477bc:	2080bf26 	beq	r4,r2,1447abc <_realloc_r+0x384>
 14477c0:	11000117 	ldw	r4,4(r2)
 14477c4:	023fff84 	movi	r8,-2
 14477c8:	2210703a 	and	r8,r4,r8
 14477cc:	1211883a 	add	r8,r2,r8
 14477d0:	41400117 	ldw	r5,4(r8)
 14477d4:	2940004c 	andi	r5,r5,1
 14477d8:	28004a1e 	bne	r5,zero,1447904 <_realloc_r+0x1cc>
 14477dc:	017fff04 	movi	r5,-4
 14477e0:	2148703a 	and	r4,r4,r5
 14477e4:	2409883a 	add	r4,r4,r16
 14477e8:	21c0ad0e 	bge	r4,r7,1447aa0 <_realloc_r+0x368>
 14477ec:	18c0004c 	andi	r3,r3,1
 14477f0:	18007f1e 	bne	r3,zero,14479f0 <_realloc_r+0x2b8>
 14477f4:	9dfffe17 	ldw	r23,-8(r19)
 14477f8:	adefc83a 	sub	r23,r21,r23
 14477fc:	bd800117 	ldw	r22,4(r23)
 1447800:	b14a703a 	and	r5,r22,r5
 1447804:	216d883a 	add	r22,r4,r5
 1447808:	b1c04516 	blt	r22,r7,1447920 <_realloc_r+0x1e8>
 144780c:	10c00317 	ldw	r3,12(r2)
 1447810:	10800217 	ldw	r2,8(r2)
 1447814:	81bfff04 	addi	r6,r16,-4
 1447818:	bc400204 	addi	r17,r23,8
 144781c:	10c00315 	stw	r3,12(r2)
 1447820:	18800215 	stw	r2,8(r3)
 1447824:	b9400217 	ldw	r5,8(r23)
 1447828:	b8c00317 	ldw	r3,12(r23)
 144782c:	00800904 	movi	r2,36
 1447830:	28c00315 	stw	r3,12(r5)
 1447834:	19400215 	stw	r5,8(r3)
 1447838:	1180ef36 	bltu	r2,r6,1447bf8 <_realloc_r+0x4c0>
 144783c:	008004c4 	movi	r2,19
 1447840:	1180da2e 	bgeu	r2,r6,1447bac <_realloc_r+0x474>
 1447844:	98800017 	ldw	r2,0(r19)
 1447848:	b8800215 	stw	r2,8(r23)
 144784c:	98800117 	ldw	r2,4(r19)
 1447850:	b8800315 	stw	r2,12(r23)
 1447854:	008006c4 	movi	r2,27
 1447858:	1180fc2e 	bgeu	r2,r6,1447c4c <_realloc_r+0x514>
 144785c:	98800217 	ldw	r2,8(r19)
 1447860:	b8800415 	stw	r2,16(r23)
 1447864:	98800317 	ldw	r2,12(r19)
 1447868:	b8800515 	stw	r2,20(r23)
 144786c:	00800904 	movi	r2,36
 1447870:	3080421e 	bne	r6,r2,144797c <_realloc_r+0x244>
 1447874:	98800417 	ldw	r2,16(r19)
 1447878:	9cc00604 	addi	r19,r19,24
 144787c:	b8c00804 	addi	r3,r23,32
 1447880:	b8800615 	stw	r2,24(r23)
 1447884:	98bfff17 	ldw	r2,-4(r19)
 1447888:	b8800715 	stw	r2,28(r23)
 144788c:	00003d06 	br	1447984 <_realloc_r+0x24c>
 1447890:	01c00404 	movi	r7,16
 1447894:	3829883a 	mov	r20,r7
 1447898:	003fc206 	br	14477a4 <__alt_data_end+0xfffe1fa4>
 144789c:	9823883a 	mov	r17,r19
 14478a0:	850fc83a 	sub	r7,r16,r20
 14478a4:	008003c4 	movi	r2,15
 14478a8:	18c0004c 	andi	r3,r3,1
 14478ac:	11c04336 	bltu	r2,r7,14479bc <_realloc_r+0x284>
 14478b0:	1c06b03a 	or	r3,r3,r16
 14478b4:	a8c00115 	stw	r3,4(r21)
 14478b8:	ac21883a 	add	r16,r21,r16
 14478bc:	80c00117 	ldw	r3,4(r16)
 14478c0:	18c00054 	ori	r3,r3,1
 14478c4:	80c00115 	stw	r3,4(r16)
 14478c8:	9009883a 	mov	r4,r18
 14478cc:	144d9380 	call	144d938 <__malloc_unlock>
 14478d0:	8805883a 	mov	r2,r17
 14478d4:	dfc00917 	ldw	ra,36(sp)
 14478d8:	df000817 	ldw	fp,32(sp)
 14478dc:	ddc00717 	ldw	r23,28(sp)
 14478e0:	dd800617 	ldw	r22,24(sp)
 14478e4:	dd400517 	ldw	r21,20(sp)
 14478e8:	dd000417 	ldw	r20,16(sp)
 14478ec:	dcc00317 	ldw	r19,12(sp)
 14478f0:	dc800217 	ldw	r18,8(sp)
 14478f4:	dc400117 	ldw	r17,4(sp)
 14478f8:	dc000017 	ldw	r16,0(sp)
 14478fc:	dec00a04 	addi	sp,sp,40
 1447900:	f800283a 	ret
 1447904:	18c0004c 	andi	r3,r3,1
 1447908:	1800391e 	bne	r3,zero,14479f0 <_realloc_r+0x2b8>
 144790c:	9dfffe17 	ldw	r23,-8(r19)
 1447910:	00bfff04 	movi	r2,-4
 1447914:	adefc83a 	sub	r23,r21,r23
 1447918:	b9400117 	ldw	r5,4(r23)
 144791c:	288a703a 	and	r5,r5,r2
 1447920:	2c2d883a 	add	r22,r5,r16
 1447924:	b1c03216 	blt	r22,r7,14479f0 <_realloc_r+0x2b8>
 1447928:	b8800317 	ldw	r2,12(r23)
 144792c:	b8c00217 	ldw	r3,8(r23)
 1447930:	81bfff04 	addi	r6,r16,-4
 1447934:	01000904 	movi	r4,36
 1447938:	18800315 	stw	r2,12(r3)
 144793c:	10c00215 	stw	r3,8(r2)
 1447940:	bc400204 	addi	r17,r23,8
 1447944:	2180ac36 	bltu	r4,r6,1447bf8 <_realloc_r+0x4c0>
 1447948:	008004c4 	movi	r2,19
 144794c:	1180972e 	bgeu	r2,r6,1447bac <_realloc_r+0x474>
 1447950:	98800017 	ldw	r2,0(r19)
 1447954:	b8800215 	stw	r2,8(r23)
 1447958:	98800117 	ldw	r2,4(r19)
 144795c:	b8800315 	stw	r2,12(r23)
 1447960:	008006c4 	movi	r2,27
 1447964:	1180b92e 	bgeu	r2,r6,1447c4c <_realloc_r+0x514>
 1447968:	98800217 	ldw	r2,8(r19)
 144796c:	b8800415 	stw	r2,16(r23)
 1447970:	98800317 	ldw	r2,12(r19)
 1447974:	b8800515 	stw	r2,20(r23)
 1447978:	313fbe26 	beq	r6,r4,1447874 <__alt_data_end+0xfffe2074>
 144797c:	b8c00604 	addi	r3,r23,24
 1447980:	9cc00404 	addi	r19,r19,16
 1447984:	98800017 	ldw	r2,0(r19)
 1447988:	b021883a 	mov	r16,r22
 144798c:	b82b883a 	mov	r21,r23
 1447990:	18800015 	stw	r2,0(r3)
 1447994:	98800117 	ldw	r2,4(r19)
 1447998:	18800115 	stw	r2,4(r3)
 144799c:	98800217 	ldw	r2,8(r19)
 14479a0:	18800215 	stw	r2,8(r3)
 14479a4:	b8c00117 	ldw	r3,4(r23)
 14479a8:	003fbd06 	br	14478a0 <__alt_data_end+0xfffe20a0>
 14479ac:	00800304 	movi	r2,12
 14479b0:	90800015 	stw	r2,0(r18)
 14479b4:	0005883a 	mov	r2,zero
 14479b8:	003fc606 	br	14478d4 <__alt_data_end+0xfffe20d4>
 14479bc:	1d06b03a 	or	r3,r3,r20
 14479c0:	ad0b883a 	add	r5,r21,r20
 14479c4:	a8c00115 	stw	r3,4(r21)
 14479c8:	38800054 	ori	r2,r7,1
 14479cc:	28800115 	stw	r2,4(r5)
 14479d0:	29cf883a 	add	r7,r5,r7
 14479d4:	38800117 	ldw	r2,4(r7)
 14479d8:	9009883a 	mov	r4,r18
 14479dc:	29400204 	addi	r5,r5,8
 14479e0:	10800054 	ori	r2,r2,1
 14479e4:	38800115 	stw	r2,4(r7)
 14479e8:	1444f0c0 	call	1444f0c <_free_r>
 14479ec:	003fb606 	br	14478c8 <__alt_data_end+0xfffe20c8>
 14479f0:	880b883a 	mov	r5,r17
 14479f4:	9009883a 	mov	r4,r18
 14479f8:	1445aa80 	call	1445aa8 <_malloc_r>
 14479fc:	1023883a 	mov	r17,r2
 1447a00:	1000aa26 	beq	r2,zero,1447cac <_realloc_r+0x574>
 1447a04:	98ffff17 	ldw	r3,-4(r19)
 1447a08:	113ffe04 	addi	r4,r2,-8
 1447a0c:	00bfff84 	movi	r2,-2
 1447a10:	1884703a 	and	r2,r3,r2
 1447a14:	a885883a 	add	r2,r21,r2
 1447a18:	20808626 	beq	r4,r2,1447c34 <_realloc_r+0x4fc>
 1447a1c:	81bfff04 	addi	r6,r16,-4
 1447a20:	00800904 	movi	r2,36
 1447a24:	11807036 	bltu	r2,r6,1447be8 <_realloc_r+0x4b0>
 1447a28:	00c004c4 	movi	r3,19
 1447a2c:	19805636 	bltu	r3,r6,1447b88 <_realloc_r+0x450>
 1447a30:	8805883a 	mov	r2,r17
 1447a34:	9807883a 	mov	r3,r19
 1447a38:	19000017 	ldw	r4,0(r3)
 1447a3c:	11000015 	stw	r4,0(r2)
 1447a40:	19000117 	ldw	r4,4(r3)
 1447a44:	11000115 	stw	r4,4(r2)
 1447a48:	18c00217 	ldw	r3,8(r3)
 1447a4c:	10c00215 	stw	r3,8(r2)
 1447a50:	980b883a 	mov	r5,r19
 1447a54:	9009883a 	mov	r4,r18
 1447a58:	1444f0c0 	call	1444f0c <_free_r>
 1447a5c:	9009883a 	mov	r4,r18
 1447a60:	144d9380 	call	144d938 <__malloc_unlock>
 1447a64:	8805883a 	mov	r2,r17
 1447a68:	003f9a06 	br	14478d4 <__alt_data_end+0xfffe20d4>
 1447a6c:	300b883a 	mov	r5,r6
 1447a70:	dfc00917 	ldw	ra,36(sp)
 1447a74:	df000817 	ldw	fp,32(sp)
 1447a78:	ddc00717 	ldw	r23,28(sp)
 1447a7c:	dd800617 	ldw	r22,24(sp)
 1447a80:	dd400517 	ldw	r21,20(sp)
 1447a84:	dd000417 	ldw	r20,16(sp)
 1447a88:	dcc00317 	ldw	r19,12(sp)
 1447a8c:	dc800217 	ldw	r18,8(sp)
 1447a90:	dc400117 	ldw	r17,4(sp)
 1447a94:	dc000017 	ldw	r16,0(sp)
 1447a98:	dec00a04 	addi	sp,sp,40
 1447a9c:	1445aa81 	jmpi	1445aa8 <_malloc_r>
 1447aa0:	11400317 	ldw	r5,12(r2)
 1447aa4:	10800217 	ldw	r2,8(r2)
 1447aa8:	9823883a 	mov	r17,r19
 1447aac:	2021883a 	mov	r16,r4
 1447ab0:	11400315 	stw	r5,12(r2)
 1447ab4:	28800215 	stw	r2,8(r5)
 1447ab8:	003f7906 	br	14478a0 <__alt_data_end+0xfffe20a0>
 1447abc:	21000117 	ldw	r4,4(r4)
 1447ac0:	00bfff04 	movi	r2,-4
 1447ac4:	a1800404 	addi	r6,r20,16
 1447ac8:	2088703a 	and	r4,r4,r2
 1447acc:	2409883a 	add	r4,r4,r16
 1447ad0:	2180380e 	bge	r4,r6,1447bb4 <_realloc_r+0x47c>
 1447ad4:	18c0004c 	andi	r3,r3,1
 1447ad8:	183fc51e 	bne	r3,zero,14479f0 <__alt_data_end+0xfffe21f0>
 1447adc:	9dfffe17 	ldw	r23,-8(r19)
 1447ae0:	adefc83a 	sub	r23,r21,r23
 1447ae4:	b9400117 	ldw	r5,4(r23)
 1447ae8:	288a703a 	and	r5,r5,r2
 1447aec:	216d883a 	add	r22,r4,r5
 1447af0:	b1bf8b16 	blt	r22,r6,1447920 <__alt_data_end+0xfffe2120>
 1447af4:	b8800317 	ldw	r2,12(r23)
 1447af8:	b8c00217 	ldw	r3,8(r23)
 1447afc:	81bfff04 	addi	r6,r16,-4
 1447b00:	01000904 	movi	r4,36
 1447b04:	18800315 	stw	r2,12(r3)
 1447b08:	10c00215 	stw	r3,8(r2)
 1447b0c:	bc400204 	addi	r17,r23,8
 1447b10:	21805a36 	bltu	r4,r6,1447c7c <_realloc_r+0x544>
 1447b14:	008004c4 	movi	r2,19
 1447b18:	1180562e 	bgeu	r2,r6,1447c74 <_realloc_r+0x53c>
 1447b1c:	98800017 	ldw	r2,0(r19)
 1447b20:	b8800215 	stw	r2,8(r23)
 1447b24:	98800117 	ldw	r2,4(r19)
 1447b28:	b8800315 	stw	r2,12(r23)
 1447b2c:	008006c4 	movi	r2,27
 1447b30:	11805636 	bltu	r2,r6,1447c8c <_realloc_r+0x554>
 1447b34:	b8800404 	addi	r2,r23,16
 1447b38:	9cc00204 	addi	r19,r19,8
 1447b3c:	98c00017 	ldw	r3,0(r19)
 1447b40:	10c00015 	stw	r3,0(r2)
 1447b44:	98c00117 	ldw	r3,4(r19)
 1447b48:	10c00115 	stw	r3,4(r2)
 1447b4c:	98c00217 	ldw	r3,8(r19)
 1447b50:	10c00215 	stw	r3,8(r2)
 1447b54:	bd07883a 	add	r3,r23,r20
 1447b58:	b505c83a 	sub	r2,r22,r20
 1447b5c:	e0c00215 	stw	r3,8(fp)
 1447b60:	10800054 	ori	r2,r2,1
 1447b64:	18800115 	stw	r2,4(r3)
 1447b68:	b8800117 	ldw	r2,4(r23)
 1447b6c:	9009883a 	mov	r4,r18
 1447b70:	1080004c 	andi	r2,r2,1
 1447b74:	a0a8b03a 	or	r20,r20,r2
 1447b78:	bd000115 	stw	r20,4(r23)
 1447b7c:	144d9380 	call	144d938 <__malloc_unlock>
 1447b80:	8805883a 	mov	r2,r17
 1447b84:	003f5306 	br	14478d4 <__alt_data_end+0xfffe20d4>
 1447b88:	98c00017 	ldw	r3,0(r19)
 1447b8c:	88c00015 	stw	r3,0(r17)
 1447b90:	98c00117 	ldw	r3,4(r19)
 1447b94:	88c00115 	stw	r3,4(r17)
 1447b98:	00c006c4 	movi	r3,27
 1447b9c:	19801d36 	bltu	r3,r6,1447c14 <_realloc_r+0x4dc>
 1447ba0:	88800204 	addi	r2,r17,8
 1447ba4:	98c00204 	addi	r3,r19,8
 1447ba8:	003fa306 	br	1447a38 <__alt_data_end+0xfffe2238>
 1447bac:	8807883a 	mov	r3,r17
 1447bb0:	003f7406 	br	1447984 <__alt_data_end+0xfffe2184>
 1447bb4:	ad2b883a 	add	r21,r21,r20
 1447bb8:	2505c83a 	sub	r2,r4,r20
 1447bbc:	e5400215 	stw	r21,8(fp)
 1447bc0:	10800054 	ori	r2,r2,1
 1447bc4:	a8800115 	stw	r2,4(r21)
 1447bc8:	98bfff17 	ldw	r2,-4(r19)
 1447bcc:	9009883a 	mov	r4,r18
 1447bd0:	1080004c 	andi	r2,r2,1
 1447bd4:	a0a8b03a 	or	r20,r20,r2
 1447bd8:	9d3fff15 	stw	r20,-4(r19)
 1447bdc:	144d9380 	call	144d938 <__malloc_unlock>
 1447be0:	9805883a 	mov	r2,r19
 1447be4:	003f3b06 	br	14478d4 <__alt_data_end+0xfffe20d4>
 1447be8:	8809883a 	mov	r4,r17
 1447bec:	980b883a 	mov	r5,r19
 1447bf0:	14464700 	call	1446470 <memmove>
 1447bf4:	003f9606 	br	1447a50 <__alt_data_end+0xfffe2250>
 1447bf8:	8809883a 	mov	r4,r17
 1447bfc:	980b883a 	mov	r5,r19
 1447c00:	14464700 	call	1446470 <memmove>
 1447c04:	b8c00117 	ldw	r3,4(r23)
 1447c08:	b021883a 	mov	r16,r22
 1447c0c:	b82b883a 	mov	r21,r23
 1447c10:	003f2306 	br	14478a0 <__alt_data_end+0xfffe20a0>
 1447c14:	98c00217 	ldw	r3,8(r19)
 1447c18:	88c00215 	stw	r3,8(r17)
 1447c1c:	98c00317 	ldw	r3,12(r19)
 1447c20:	88c00315 	stw	r3,12(r17)
 1447c24:	30800c26 	beq	r6,r2,1447c58 <_realloc_r+0x520>
 1447c28:	88800404 	addi	r2,r17,16
 1447c2c:	98c00404 	addi	r3,r19,16
 1447c30:	003f8106 	br	1447a38 <__alt_data_end+0xfffe2238>
 1447c34:	893fff17 	ldw	r4,-4(r17)
 1447c38:	00bfff04 	movi	r2,-4
 1447c3c:	9823883a 	mov	r17,r19
 1447c40:	2084703a 	and	r2,r4,r2
 1447c44:	80a1883a 	add	r16,r16,r2
 1447c48:	003f1506 	br	14478a0 <__alt_data_end+0xfffe20a0>
 1447c4c:	b8c00404 	addi	r3,r23,16
 1447c50:	9cc00204 	addi	r19,r19,8
 1447c54:	003f4b06 	br	1447984 <__alt_data_end+0xfffe2184>
 1447c58:	99000417 	ldw	r4,16(r19)
 1447c5c:	88800604 	addi	r2,r17,24
 1447c60:	98c00604 	addi	r3,r19,24
 1447c64:	89000415 	stw	r4,16(r17)
 1447c68:	99000517 	ldw	r4,20(r19)
 1447c6c:	89000515 	stw	r4,20(r17)
 1447c70:	003f7106 	br	1447a38 <__alt_data_end+0xfffe2238>
 1447c74:	8805883a 	mov	r2,r17
 1447c78:	003fb006 	br	1447b3c <__alt_data_end+0xfffe233c>
 1447c7c:	8809883a 	mov	r4,r17
 1447c80:	980b883a 	mov	r5,r19
 1447c84:	14464700 	call	1446470 <memmove>
 1447c88:	003fb206 	br	1447b54 <__alt_data_end+0xfffe2354>
 1447c8c:	98800217 	ldw	r2,8(r19)
 1447c90:	b8800415 	stw	r2,16(r23)
 1447c94:	98800317 	ldw	r2,12(r19)
 1447c98:	b8800515 	stw	r2,20(r23)
 1447c9c:	31000726 	beq	r6,r4,1447cbc <_realloc_r+0x584>
 1447ca0:	b8800604 	addi	r2,r23,24
 1447ca4:	9cc00404 	addi	r19,r19,16
 1447ca8:	003fa406 	br	1447b3c <__alt_data_end+0xfffe233c>
 1447cac:	9009883a 	mov	r4,r18
 1447cb0:	144d9380 	call	144d938 <__malloc_unlock>
 1447cb4:	0005883a 	mov	r2,zero
 1447cb8:	003f0606 	br	14478d4 <__alt_data_end+0xfffe20d4>
 1447cbc:	98c00417 	ldw	r3,16(r19)
 1447cc0:	9cc00604 	addi	r19,r19,24
 1447cc4:	b8800804 	addi	r2,r23,32
 1447cc8:	b8c00615 	stw	r3,24(r23)
 1447ccc:	98ffff17 	ldw	r3,-4(r19)
 1447cd0:	b8c00715 	stw	r3,28(r23)
 1447cd4:	003f9906 	br	1447b3c <__alt_data_end+0xfffe233c>

01447cd8 <__fpclassifyd>:
 1447cd8:	00a00034 	movhi	r2,32768
 1447cdc:	10bfffc4 	addi	r2,r2,-1
 1447ce0:	2884703a 	and	r2,r5,r2
 1447ce4:	10000726 	beq	r2,zero,1447d04 <__fpclassifyd+0x2c>
 1447ce8:	00fffc34 	movhi	r3,65520
 1447cec:	019ff834 	movhi	r6,32736
 1447cf0:	28c7883a 	add	r3,r5,r3
 1447cf4:	31bfffc4 	addi	r6,r6,-1
 1447cf8:	30c00536 	bltu	r6,r3,1447d10 <__fpclassifyd+0x38>
 1447cfc:	00800104 	movi	r2,4
 1447d00:	f800283a 	ret
 1447d04:	2000021e 	bne	r4,zero,1447d10 <__fpclassifyd+0x38>
 1447d08:	00800084 	movi	r2,2
 1447d0c:	f800283a 	ret
 1447d10:	00dffc34 	movhi	r3,32752
 1447d14:	019ff834 	movhi	r6,32736
 1447d18:	28cb883a 	add	r5,r5,r3
 1447d1c:	31bfffc4 	addi	r6,r6,-1
 1447d20:	317ff62e 	bgeu	r6,r5,1447cfc <__alt_data_end+0xfffe24fc>
 1447d24:	01400434 	movhi	r5,16
 1447d28:	297fffc4 	addi	r5,r5,-1
 1447d2c:	28800236 	bltu	r5,r2,1447d38 <__fpclassifyd+0x60>
 1447d30:	008000c4 	movi	r2,3
 1447d34:	f800283a 	ret
 1447d38:	10c00226 	beq	r2,r3,1447d44 <__fpclassifyd+0x6c>
 1447d3c:	0005883a 	mov	r2,zero
 1447d40:	f800283a 	ret
 1447d44:	2005003a 	cmpeq	r2,r4,zero
 1447d48:	f800283a 	ret

01447d4c <_sbrk_r>:
 1447d4c:	defffd04 	addi	sp,sp,-12
 1447d50:	dc000015 	stw	r16,0(sp)
 1447d54:	04005174 	movhi	r16,325
 1447d58:	dc400115 	stw	r17,4(sp)
 1447d5c:	8408b804 	addi	r16,r16,8928
 1447d60:	2023883a 	mov	r17,r4
 1447d64:	2809883a 	mov	r4,r5
 1447d68:	dfc00215 	stw	ra,8(sp)
 1447d6c:	80000015 	stw	zero,0(r16)
 1447d70:	144db2c0 	call	144db2c <sbrk>
 1447d74:	00ffffc4 	movi	r3,-1
 1447d78:	10c00526 	beq	r2,r3,1447d90 <_sbrk_r+0x44>
 1447d7c:	dfc00217 	ldw	ra,8(sp)
 1447d80:	dc400117 	ldw	r17,4(sp)
 1447d84:	dc000017 	ldw	r16,0(sp)
 1447d88:	dec00304 	addi	sp,sp,12
 1447d8c:	f800283a 	ret
 1447d90:	80c00017 	ldw	r3,0(r16)
 1447d94:	183ff926 	beq	r3,zero,1447d7c <__alt_data_end+0xfffe257c>
 1447d98:	88c00015 	stw	r3,0(r17)
 1447d9c:	003ff706 	br	1447d7c <__alt_data_end+0xfffe257c>

01447da0 <__sread>:
 1447da0:	defffe04 	addi	sp,sp,-8
 1447da4:	dc000015 	stw	r16,0(sp)
 1447da8:	2821883a 	mov	r16,r5
 1447dac:	2940038f 	ldh	r5,14(r5)
 1447db0:	dfc00115 	stw	ra,4(sp)
 1447db4:	1449a5c0 	call	1449a5c <_read_r>
 1447db8:	10000716 	blt	r2,zero,1447dd8 <__sread+0x38>
 1447dbc:	80c01417 	ldw	r3,80(r16)
 1447dc0:	1887883a 	add	r3,r3,r2
 1447dc4:	80c01415 	stw	r3,80(r16)
 1447dc8:	dfc00117 	ldw	ra,4(sp)
 1447dcc:	dc000017 	ldw	r16,0(sp)
 1447dd0:	dec00204 	addi	sp,sp,8
 1447dd4:	f800283a 	ret
 1447dd8:	80c0030b 	ldhu	r3,12(r16)
 1447ddc:	18fbffcc 	andi	r3,r3,61439
 1447de0:	80c0030d 	sth	r3,12(r16)
 1447de4:	dfc00117 	ldw	ra,4(sp)
 1447de8:	dc000017 	ldw	r16,0(sp)
 1447dec:	dec00204 	addi	sp,sp,8
 1447df0:	f800283a 	ret

01447df4 <__seofread>:
 1447df4:	0005883a 	mov	r2,zero
 1447df8:	f800283a 	ret

01447dfc <__swrite>:
 1447dfc:	2880030b 	ldhu	r2,12(r5)
 1447e00:	defffb04 	addi	sp,sp,-20
 1447e04:	dcc00315 	stw	r19,12(sp)
 1447e08:	dc800215 	stw	r18,8(sp)
 1447e0c:	dc400115 	stw	r17,4(sp)
 1447e10:	dc000015 	stw	r16,0(sp)
 1447e14:	dfc00415 	stw	ra,16(sp)
 1447e18:	10c0400c 	andi	r3,r2,256
 1447e1c:	2821883a 	mov	r16,r5
 1447e20:	2027883a 	mov	r19,r4
 1447e24:	3025883a 	mov	r18,r6
 1447e28:	3823883a 	mov	r17,r7
 1447e2c:	18000526 	beq	r3,zero,1447e44 <__swrite+0x48>
 1447e30:	2940038f 	ldh	r5,14(r5)
 1447e34:	000d883a 	mov	r6,zero
 1447e38:	01c00084 	movi	r7,2
 1447e3c:	1449a000 	call	1449a00 <_lseek_r>
 1447e40:	8080030b 	ldhu	r2,12(r16)
 1447e44:	8140038f 	ldh	r5,14(r16)
 1447e48:	10bbffcc 	andi	r2,r2,61439
 1447e4c:	9809883a 	mov	r4,r19
 1447e50:	900d883a 	mov	r6,r18
 1447e54:	880f883a 	mov	r7,r17
 1447e58:	8080030d 	sth	r2,12(r16)
 1447e5c:	dfc00417 	ldw	ra,16(sp)
 1447e60:	dcc00317 	ldw	r19,12(sp)
 1447e64:	dc800217 	ldw	r18,8(sp)
 1447e68:	dc400117 	ldw	r17,4(sp)
 1447e6c:	dc000017 	ldw	r16,0(sp)
 1447e70:	dec00504 	addi	sp,sp,20
 1447e74:	14494dc1 	jmpi	14494dc <_write_r>

01447e78 <__sseek>:
 1447e78:	defffe04 	addi	sp,sp,-8
 1447e7c:	dc000015 	stw	r16,0(sp)
 1447e80:	2821883a 	mov	r16,r5
 1447e84:	2940038f 	ldh	r5,14(r5)
 1447e88:	dfc00115 	stw	ra,4(sp)
 1447e8c:	1449a000 	call	1449a00 <_lseek_r>
 1447e90:	00ffffc4 	movi	r3,-1
 1447e94:	10c00826 	beq	r2,r3,1447eb8 <__sseek+0x40>
 1447e98:	80c0030b 	ldhu	r3,12(r16)
 1447e9c:	80801415 	stw	r2,80(r16)
 1447ea0:	18c40014 	ori	r3,r3,4096
 1447ea4:	80c0030d 	sth	r3,12(r16)
 1447ea8:	dfc00117 	ldw	ra,4(sp)
 1447eac:	dc000017 	ldw	r16,0(sp)
 1447eb0:	dec00204 	addi	sp,sp,8
 1447eb4:	f800283a 	ret
 1447eb8:	80c0030b 	ldhu	r3,12(r16)
 1447ebc:	18fbffcc 	andi	r3,r3,61439
 1447ec0:	80c0030d 	sth	r3,12(r16)
 1447ec4:	dfc00117 	ldw	ra,4(sp)
 1447ec8:	dc000017 	ldw	r16,0(sp)
 1447ecc:	dec00204 	addi	sp,sp,8
 1447ed0:	f800283a 	ret

01447ed4 <__sclose>:
 1447ed4:	2940038f 	ldh	r5,14(r5)
 1447ed8:	14495381 	jmpi	1449538 <_close_r>

01447edc <strcmp>:
 1447edc:	2144b03a 	or	r2,r4,r5
 1447ee0:	108000cc 	andi	r2,r2,3
 1447ee4:	1000171e 	bne	r2,zero,1447f44 <strcmp+0x68>
 1447ee8:	20800017 	ldw	r2,0(r4)
 1447eec:	28c00017 	ldw	r3,0(r5)
 1447ef0:	10c0141e 	bne	r2,r3,1447f44 <strcmp+0x68>
 1447ef4:	027fbff4 	movhi	r9,65279
 1447ef8:	4a7fbfc4 	addi	r9,r9,-257
 1447efc:	0086303a 	nor	r3,zero,r2
 1447f00:	02202074 	movhi	r8,32897
 1447f04:	1245883a 	add	r2,r2,r9
 1447f08:	42202004 	addi	r8,r8,-32640
 1447f0c:	10c4703a 	and	r2,r2,r3
 1447f10:	1204703a 	and	r2,r2,r8
 1447f14:	10000226 	beq	r2,zero,1447f20 <strcmp+0x44>
 1447f18:	00001706 	br	1447f78 <strcmp+0x9c>
 1447f1c:	1000161e 	bne	r2,zero,1447f78 <strcmp+0x9c>
 1447f20:	21000104 	addi	r4,r4,4
 1447f24:	20c00017 	ldw	r3,0(r4)
 1447f28:	29400104 	addi	r5,r5,4
 1447f2c:	29800017 	ldw	r6,0(r5)
 1447f30:	1a4f883a 	add	r7,r3,r9
 1447f34:	00c4303a 	nor	r2,zero,r3
 1447f38:	3884703a 	and	r2,r7,r2
 1447f3c:	1204703a 	and	r2,r2,r8
 1447f40:	19bff626 	beq	r3,r6,1447f1c <__alt_data_end+0xfffe271c>
 1447f44:	20800007 	ldb	r2,0(r4)
 1447f48:	1000051e 	bne	r2,zero,1447f60 <strcmp+0x84>
 1447f4c:	00000606 	br	1447f68 <strcmp+0x8c>
 1447f50:	21000044 	addi	r4,r4,1
 1447f54:	20800007 	ldb	r2,0(r4)
 1447f58:	29400044 	addi	r5,r5,1
 1447f5c:	10000226 	beq	r2,zero,1447f68 <strcmp+0x8c>
 1447f60:	28c00007 	ldb	r3,0(r5)
 1447f64:	10fffa26 	beq	r2,r3,1447f50 <__alt_data_end+0xfffe2750>
 1447f68:	20800003 	ldbu	r2,0(r4)
 1447f6c:	28c00003 	ldbu	r3,0(r5)
 1447f70:	10c5c83a 	sub	r2,r2,r3
 1447f74:	f800283a 	ret
 1447f78:	0005883a 	mov	r2,zero
 1447f7c:	f800283a 	ret

01447f80 <__sprint_r.part.0>:
 1447f80:	28801917 	ldw	r2,100(r5)
 1447f84:	defff604 	addi	sp,sp,-40
 1447f88:	dd400515 	stw	r21,20(sp)
 1447f8c:	dcc00315 	stw	r19,12(sp)
 1447f90:	dfc00915 	stw	ra,36(sp)
 1447f94:	df000815 	stw	fp,32(sp)
 1447f98:	ddc00715 	stw	r23,28(sp)
 1447f9c:	dd800615 	stw	r22,24(sp)
 1447fa0:	dd000415 	stw	r20,16(sp)
 1447fa4:	dc800215 	stw	r18,8(sp)
 1447fa8:	dc400115 	stw	r17,4(sp)
 1447fac:	dc000015 	stw	r16,0(sp)
 1447fb0:	1088000c 	andi	r2,r2,8192
 1447fb4:	2827883a 	mov	r19,r5
 1447fb8:	302b883a 	mov	r21,r6
 1447fbc:	10002d26 	beq	r2,zero,1448074 <__sprint_r.part.0+0xf4>
 1447fc0:	30800217 	ldw	r2,8(r6)
 1447fc4:	35800017 	ldw	r22,0(r6)
 1447fc8:	10002826 	beq	r2,zero,144806c <__sprint_r.part.0+0xec>
 1447fcc:	2029883a 	mov	r20,r4
 1447fd0:	b5c00104 	addi	r23,r22,4
 1447fd4:	04bfffc4 	movi	r18,-1
 1447fd8:	bc400017 	ldw	r17,0(r23)
 1447fdc:	b4000017 	ldw	r16,0(r22)
 1447fe0:	0039883a 	mov	fp,zero
 1447fe4:	8822d0ba 	srli	r17,r17,2
 1447fe8:	04400316 	blt	zero,r17,1447ff8 <__sprint_r.part.0+0x78>
 1447fec:	00001706 	br	144804c <__sprint_r.part.0+0xcc>
 1447ff0:	84000104 	addi	r16,r16,4
 1447ff4:	8f001526 	beq	r17,fp,144804c <__sprint_r.part.0+0xcc>
 1447ff8:	81400017 	ldw	r5,0(r16)
 1447ffc:	a009883a 	mov	r4,r20
 1448000:	980d883a 	mov	r6,r19
 1448004:	14497780 	call	1449778 <_fputwc_r>
 1448008:	e7000044 	addi	fp,fp,1
 144800c:	14bff81e 	bne	r2,r18,1447ff0 <__alt_data_end+0xfffe27f0>
 1448010:	9005883a 	mov	r2,r18
 1448014:	a8000215 	stw	zero,8(r21)
 1448018:	a8000115 	stw	zero,4(r21)
 144801c:	dfc00917 	ldw	ra,36(sp)
 1448020:	df000817 	ldw	fp,32(sp)
 1448024:	ddc00717 	ldw	r23,28(sp)
 1448028:	dd800617 	ldw	r22,24(sp)
 144802c:	dd400517 	ldw	r21,20(sp)
 1448030:	dd000417 	ldw	r20,16(sp)
 1448034:	dcc00317 	ldw	r19,12(sp)
 1448038:	dc800217 	ldw	r18,8(sp)
 144803c:	dc400117 	ldw	r17,4(sp)
 1448040:	dc000017 	ldw	r16,0(sp)
 1448044:	dec00a04 	addi	sp,sp,40
 1448048:	f800283a 	ret
 144804c:	a8c00217 	ldw	r3,8(r21)
 1448050:	8c63883a 	add	r17,r17,r17
 1448054:	8c63883a 	add	r17,r17,r17
 1448058:	1c45c83a 	sub	r2,r3,r17
 144805c:	a8800215 	stw	r2,8(r21)
 1448060:	b5800204 	addi	r22,r22,8
 1448064:	bdc00204 	addi	r23,r23,8
 1448068:	103fdb1e 	bne	r2,zero,1447fd8 <__alt_data_end+0xfffe27d8>
 144806c:	0005883a 	mov	r2,zero
 1448070:	003fe806 	br	1448014 <__alt_data_end+0xfffe2814>
 1448074:	14451fc0 	call	14451fc <__sfvwrite_r>
 1448078:	003fe606 	br	1448014 <__alt_data_end+0xfffe2814>

0144807c <__sprint_r>:
 144807c:	30c00217 	ldw	r3,8(r6)
 1448080:	18000126 	beq	r3,zero,1448088 <__sprint_r+0xc>
 1448084:	1447f801 	jmpi	1447f80 <__sprint_r.part.0>
 1448088:	30000115 	stw	zero,4(r6)
 144808c:	0005883a 	mov	r2,zero
 1448090:	f800283a 	ret

01448094 <___vfiprintf_internal_r>:
 1448094:	defeca04 	addi	sp,sp,-1240
 1448098:	dcc12f15 	stw	r19,1212(sp)
 144809c:	dfc13515 	stw	ra,1236(sp)
 14480a0:	df013415 	stw	fp,1232(sp)
 14480a4:	ddc13315 	stw	r23,1228(sp)
 14480a8:	dd813215 	stw	r22,1224(sp)
 14480ac:	dd413115 	stw	r21,1220(sp)
 14480b0:	dd013015 	stw	r20,1216(sp)
 14480b4:	dc812e15 	stw	r18,1208(sp)
 14480b8:	dc412d15 	stw	r17,1204(sp)
 14480bc:	dc012c15 	stw	r16,1200(sp)
 14480c0:	d9012115 	stw	r4,1156(sp)
 14480c4:	d9412015 	stw	r5,1152(sp)
 14480c8:	d9c12315 	stw	r7,1164(sp)
 14480cc:	3027883a 	mov	r19,r6
 14480d0:	20000226 	beq	r4,zero,14480dc <___vfiprintf_internal_r+0x48>
 14480d4:	20800e17 	ldw	r2,56(r4)
 14480d8:	1000f726 	beq	r2,zero,14484b8 <___vfiprintf_internal_r+0x424>
 14480dc:	d8812017 	ldw	r2,1152(sp)
 14480e0:	10c0030b 	ldhu	r3,12(r2)
 14480e4:	1908000c 	andi	r4,r3,8192
 14480e8:	1805883a 	mov	r2,r3
 14480ec:	2000081e 	bne	r4,zero,1448110 <___vfiprintf_internal_r+0x7c>
 14480f0:	d9412017 	ldw	r5,1152(sp)
 14480f4:	18880014 	ori	r2,r3,8192
 14480f8:	00f7ffc4 	movi	r3,-8193
 14480fc:	29001917 	ldw	r4,100(r5)
 1448100:	2880030d 	sth	r2,12(r5)
 1448104:	20c8703a 	and	r4,r4,r3
 1448108:	29001915 	stw	r4,100(r5)
 144810c:	1007883a 	mov	r3,r2
 1448110:	1100020c 	andi	r4,r2,8
 1448114:	2000a726 	beq	r4,zero,14483b4 <___vfiprintf_internal_r+0x320>
 1448118:	d9412017 	ldw	r5,1152(sp)
 144811c:	29000417 	ldw	r4,16(r5)
 1448120:	2000a426 	beq	r4,zero,14483b4 <___vfiprintf_internal_r+0x320>
 1448124:	1080068c 	andi	r2,r2,26
 1448128:	01000284 	movi	r4,10
 144812c:	1100ab26 	beq	r2,r4,14483dc <___vfiprintf_internal_r+0x348>
 1448130:	d9010a04 	addi	r4,sp,1064
 1448134:	d94109c4 	addi	r5,sp,1063
 1448138:	07005174 	movhi	fp,325
 144813c:	04405174 	movhi	r17,325
 1448140:	2145c83a 	sub	r2,r4,r5
 1448144:	e7029004 	addi	fp,fp,2624
 1448148:	8c428c04 	addi	r17,r17,2608
 144814c:	d9011e15 	stw	r4,1144(sp)
 1448150:	d9411f15 	stw	r5,1148(sp)
 1448154:	dec11a15 	stw	sp,1128(sp)
 1448158:	d8011c15 	stw	zero,1136(sp)
 144815c:	d8011b15 	stw	zero,1132(sp)
 1448160:	d8012715 	stw	zero,1180(sp)
 1448164:	d8012515 	stw	zero,1172(sp)
 1448168:	d811883a 	mov	r8,sp
 144816c:	d8812815 	stw	r2,1184(sp)
 1448170:	982f883a 	mov	r23,r19
 1448174:	b8800007 	ldb	r2,0(r23)
 1448178:	1003b026 	beq	r2,zero,144903c <___vfiprintf_internal_r+0xfa8>
 144817c:	01000944 	movi	r4,37
 1448180:	1103ae26 	beq	r2,r4,144903c <___vfiprintf_internal_r+0xfa8>
 1448184:	b805883a 	mov	r2,r23
 1448188:	00000106 	br	1448190 <___vfiprintf_internal_r+0xfc>
 144818c:	19000326 	beq	r3,r4,144819c <___vfiprintf_internal_r+0x108>
 1448190:	10800044 	addi	r2,r2,1
 1448194:	10c00007 	ldb	r3,0(r2)
 1448198:	183ffc1e 	bne	r3,zero,144818c <__alt_data_end+0xfffe298c>
 144819c:	15e1c83a 	sub	r16,r2,r23
 14481a0:	1029883a 	mov	r20,r2
 14481a4:	80001026 	beq	r16,zero,14481e8 <___vfiprintf_internal_r+0x154>
 14481a8:	d8c11c17 	ldw	r3,1136(sp)
 14481ac:	d8811b17 	ldw	r2,1132(sp)
 14481b0:	45c00015 	stw	r23,0(r8)
 14481b4:	80c7883a 	add	r3,r16,r3
 14481b8:	10800044 	addi	r2,r2,1
 14481bc:	44000115 	stw	r16,4(r8)
 14481c0:	d8c11c15 	stw	r3,1136(sp)
 14481c4:	d8811b15 	stw	r2,1132(sp)
 14481c8:	010001c4 	movi	r4,7
 14481cc:	2080740e 	bge	r4,r2,14483a0 <___vfiprintf_internal_r+0x30c>
 14481d0:	1803a71e 	bne	r3,zero,1449070 <___vfiprintf_internal_r+0xfdc>
 14481d4:	d8c12517 	ldw	r3,1172(sp)
 14481d8:	d8011b15 	stw	zero,1132(sp)
 14481dc:	d811883a 	mov	r8,sp
 14481e0:	1c07883a 	add	r3,r3,r16
 14481e4:	d8c12515 	stw	r3,1172(sp)
 14481e8:	a0800007 	ldb	r2,0(r20)
 14481ec:	1002bf26 	beq	r2,zero,1448cec <___vfiprintf_internal_r+0xc58>
 14481f0:	a5c00044 	addi	r23,r20,1
 14481f4:	a1800047 	ldb	r6,1(r20)
 14481f8:	d8011d85 	stb	zero,1142(sp)
 14481fc:	d8012205 	stb	zero,1160(sp)
 1448200:	043fffc4 	movi	r16,-1
 1448204:	d8012415 	stw	zero,1168(sp)
 1448208:	0025883a 	mov	r18,zero
 144820c:	05001604 	movi	r20,88
 1448210:	05400244 	movi	r21,9
 1448214:	4027883a 	mov	r19,r8
 1448218:	bdc00044 	addi	r23,r23,1
 144821c:	30bff804 	addi	r2,r6,-32
 1448220:	a0825636 	bltu	r20,r2,1448b7c <___vfiprintf_internal_r+0xae8>
 1448224:	100490ba 	slli	r2,r2,2
 1448228:	01005174 	movhi	r4,325
 144822c:	21208f04 	addi	r4,r4,-32196
 1448230:	1105883a 	add	r2,r2,r4
 1448234:	10800017 	ldw	r2,0(r2)
 1448238:	1000683a 	jmp	r2
 144823c:	01448b0c 	andi	r5,zero,4652
 1448240:	01448b7c 	xorhi	r5,zero,4653
 1448244:	01448b7c 	xorhi	r5,zero,4653
 1448248:	01448b70 	cmpltui	r5,zero,4653
 144824c:	01448b7c 	xorhi	r5,zero,4653
 1448250:	01448b7c 	xorhi	r5,zero,4653
 1448254:	01448b7c 	xorhi	r5,zero,4653
 1448258:	01448b7c 	xorhi	r5,zero,4653
 144825c:	01448b7c 	xorhi	r5,zero,4653
 1448260:	01448b7c 	xorhi	r5,zero,4653
 1448264:	014488fc 	xorhi	r5,zero,4643
 1448268:	01448b24 	muli	r5,zero,4652
 144826c:	01448b7c 	xorhi	r5,zero,4653
 1448270:	014484d0 	cmplti	r5,zero,4627
 1448274:	01448920 	cmpeqi	r5,zero,4644
 1448278:	01448b7c 	xorhi	r5,zero,4653
 144827c:	014484dc 	xori	r5,zero,4627
 1448280:	014484e8 	cmpgeui	r5,zero,4627
 1448284:	014484e8 	cmpgeui	r5,zero,4627
 1448288:	014484e8 	cmpgeui	r5,zero,4627
 144828c:	014484e8 	cmpgeui	r5,zero,4627
 1448290:	014484e8 	cmpgeui	r5,zero,4627
 1448294:	014484e8 	cmpgeui	r5,zero,4627
 1448298:	014484e8 	cmpgeui	r5,zero,4627
 144829c:	014484e8 	cmpgeui	r5,zero,4627
 14482a0:	014484e8 	cmpgeui	r5,zero,4627
 14482a4:	01448b7c 	xorhi	r5,zero,4653
 14482a8:	01448b7c 	xorhi	r5,zero,4653
 14482ac:	01448b7c 	xorhi	r5,zero,4653
 14482b0:	01448b7c 	xorhi	r5,zero,4653
 14482b4:	01448b7c 	xorhi	r5,zero,4653
 14482b8:	01448b7c 	xorhi	r5,zero,4653
 14482bc:	01448b7c 	xorhi	r5,zero,4653
 14482c0:	01448b7c 	xorhi	r5,zero,4653
 14482c4:	01448b7c 	xorhi	r5,zero,4653
 14482c8:	01448b7c 	xorhi	r5,zero,4653
 14482cc:	01448528 	cmpgeui	r5,zero,4628
 14482d0:	01448b7c 	xorhi	r5,zero,4653
 14482d4:	01448b7c 	xorhi	r5,zero,4653
 14482d8:	01448b7c 	xorhi	r5,zero,4653
 14482dc:	01448b7c 	xorhi	r5,zero,4653
 14482e0:	01448b7c 	xorhi	r5,zero,4653
 14482e4:	01448b7c 	xorhi	r5,zero,4653
 14482e8:	01448b7c 	xorhi	r5,zero,4653
 14482ec:	01448b7c 	xorhi	r5,zero,4653
 14482f0:	01448b7c 	xorhi	r5,zero,4653
 14482f4:	01448b7c 	xorhi	r5,zero,4653
 14482f8:	01448818 	cmpnei	r5,zero,4640
 14482fc:	01448b7c 	xorhi	r5,zero,4653
 1448300:	01448b7c 	xorhi	r5,zero,4653
 1448304:	01448b7c 	xorhi	r5,zero,4653
 1448308:	01448b7c 	xorhi	r5,zero,4653
 144830c:	01448b7c 	xorhi	r5,zero,4653
 1448310:	01448858 	cmpnei	r5,zero,4641
 1448314:	01448b7c 	xorhi	r5,zero,4653
 1448318:	01448b7c 	xorhi	r5,zero,4653
 144831c:	0144889c 	xori	r5,zero,4642
 1448320:	01448b7c 	xorhi	r5,zero,4653
 1448324:	01448b7c 	xorhi	r5,zero,4653
 1448328:	01448b7c 	xorhi	r5,zero,4653
 144832c:	01448b7c 	xorhi	r5,zero,4653
 1448330:	01448b7c 	xorhi	r5,zero,4653
 1448334:	01448b7c 	xorhi	r5,zero,4653
 1448338:	01448b7c 	xorhi	r5,zero,4653
 144833c:	01448b7c 	xorhi	r5,zero,4653
 1448340:	01448b7c 	xorhi	r5,zero,4653
 1448344:	01448b7c 	xorhi	r5,zero,4653
 1448348:	014487e4 	muli	r5,zero,4639
 144834c:	01448b34 	movhi	r5,4652
 1448350:	01448b7c 	xorhi	r5,zero,4653
 1448354:	01448b7c 	xorhi	r5,zero,4653
 1448358:	01448b7c 	xorhi	r5,zero,4653
 144835c:	01448970 	cmpltui	r5,zero,4645
 1448360:	01448b34 	movhi	r5,4652
 1448364:	01448b7c 	xorhi	r5,zero,4653
 1448368:	01448b7c 	xorhi	r5,zero,4653
 144836c:	01448888 	cmpgei	r5,zero,4642
 1448370:	01448b7c 	xorhi	r5,zero,4653
 1448374:	01448ad4 	movui	r5,4651
 1448378:	01448a5c 	xori	r5,zero,4649
 144837c:	01448a90 	cmplti	r5,zero,4650
 1448380:	0144897c 	xorhi	r5,zero,4645
 1448384:	01448b7c 	xorhi	r5,zero,4653
 1448388:	01448988 	cmpgei	r5,zero,4646
 144838c:	01448b7c 	xorhi	r5,zero,4653
 1448390:	014489e4 	muli	r5,zero,4647
 1448394:	01448b7c 	xorhi	r5,zero,4653
 1448398:	01448b7c 	xorhi	r5,zero,4653
 144839c:	01448a18 	cmpnei	r5,zero,4648
 14483a0:	42000204 	addi	r8,r8,8
 14483a4:	d8c12517 	ldw	r3,1172(sp)
 14483a8:	1c07883a 	add	r3,r3,r16
 14483ac:	d8c12515 	stw	r3,1172(sp)
 14483b0:	003f8d06 	br	14481e8 <__alt_data_end+0xfffe29e8>
 14483b4:	d9012117 	ldw	r4,1156(sp)
 14483b8:	d9412017 	ldw	r5,1152(sp)
 14483bc:	1442d5c0 	call	1442d5c <__swsetup_r>
 14483c0:	1000301e 	bne	r2,zero,1448484 <___vfiprintf_internal_r+0x3f0>
 14483c4:	d8812017 	ldw	r2,1152(sp)
 14483c8:	01000284 	movi	r4,10
 14483cc:	10c0030b 	ldhu	r3,12(r2)
 14483d0:	1805883a 	mov	r2,r3
 14483d4:	1080068c 	andi	r2,r2,26
 14483d8:	113f551e 	bne	r2,r4,1448130 <__alt_data_end+0xfffe2930>
 14483dc:	d9012017 	ldw	r4,1152(sp)
 14483e0:	2080038b 	ldhu	r2,14(r4)
 14483e4:	113fffcc 	andi	r4,r2,65535
 14483e8:	2120001c 	xori	r4,r4,32768
 14483ec:	21200004 	addi	r4,r4,-32768
 14483f0:	203f4f16 	blt	r4,zero,1448130 <__alt_data_end+0xfffe2930>
 14483f4:	d9412017 	ldw	r5,1152(sp)
 14483f8:	d9012117 	ldw	r4,1156(sp)
 14483fc:	d9c12317 	ldw	r7,1164(sp)
 1448400:	2b001917 	ldw	r12,100(r5)
 1448404:	2ac00717 	ldw	r11,28(r5)
 1448408:	2a800917 	ldw	r10,36(r5)
 144840c:	02010004 	movi	r8,1024
 1448410:	18ffff4c 	andi	r3,r3,65533
 1448414:	da0b883a 	add	r5,sp,r8
 1448418:	980d883a 	mov	r6,r19
 144841c:	d8c1030d 	sth	r3,1036(sp)
 1448420:	db011915 	stw	r12,1124(sp)
 1448424:	d881038d 	sth	r2,1038(sp)
 1448428:	dac10715 	stw	r11,1052(sp)
 144842c:	da810915 	stw	r10,1060(sp)
 1448430:	dec10015 	stw	sp,1024(sp)
 1448434:	dec10415 	stw	sp,1040(sp)
 1448438:	da010215 	stw	r8,1032(sp)
 144843c:	da010515 	stw	r8,1044(sp)
 1448440:	d8010615 	stw	zero,1048(sp)
 1448444:	14480940 	call	1448094 <___vfiprintf_internal_r>
 1448448:	1021883a 	mov	r16,r2
 144844c:	10000416 	blt	r2,zero,1448460 <___vfiprintf_internal_r+0x3cc>
 1448450:	d9012117 	ldw	r4,1156(sp)
 1448454:	d9410004 	addi	r5,sp,1024
 1448458:	14447dc0 	call	14447dc <_fflush_r>
 144845c:	10040f1e 	bne	r2,zero,144949c <___vfiprintf_internal_r+0x1408>
 1448460:	d881030b 	ldhu	r2,1036(sp)
 1448464:	1080100c 	andi	r2,r2,64
 1448468:	10000426 	beq	r2,zero,144847c <___vfiprintf_internal_r+0x3e8>
 144846c:	d8c12017 	ldw	r3,1152(sp)
 1448470:	1880030b 	ldhu	r2,12(r3)
 1448474:	10801014 	ori	r2,r2,64
 1448478:	1880030d 	sth	r2,12(r3)
 144847c:	8005883a 	mov	r2,r16
 1448480:	00000106 	br	1448488 <___vfiprintf_internal_r+0x3f4>
 1448484:	00bfffc4 	movi	r2,-1
 1448488:	dfc13517 	ldw	ra,1236(sp)
 144848c:	df013417 	ldw	fp,1232(sp)
 1448490:	ddc13317 	ldw	r23,1228(sp)
 1448494:	dd813217 	ldw	r22,1224(sp)
 1448498:	dd413117 	ldw	r21,1220(sp)
 144849c:	dd013017 	ldw	r20,1216(sp)
 14484a0:	dcc12f17 	ldw	r19,1212(sp)
 14484a4:	dc812e17 	ldw	r18,1208(sp)
 14484a8:	dc412d17 	ldw	r17,1204(sp)
 14484ac:	dc012c17 	ldw	r16,1200(sp)
 14484b0:	dec13604 	addi	sp,sp,1240
 14484b4:	f800283a 	ret
 14484b8:	1444d980 	call	1444d98 <__sinit>
 14484bc:	003f0706 	br	14480dc <__alt_data_end+0xfffe28dc>
 14484c0:	d8c12417 	ldw	r3,1168(sp)
 14484c4:	d8812315 	stw	r2,1164(sp)
 14484c8:	00c7c83a 	sub	r3,zero,r3
 14484cc:	d8c12415 	stw	r3,1168(sp)
 14484d0:	94800114 	ori	r18,r18,4
 14484d4:	b9800007 	ldb	r6,0(r23)
 14484d8:	003f4f06 	br	1448218 <__alt_data_end+0xfffe2a18>
 14484dc:	94802014 	ori	r18,r18,128
 14484e0:	b9800007 	ldb	r6,0(r23)
 14484e4:	003f4c06 	br	1448218 <__alt_data_end+0xfffe2a18>
 14484e8:	dc012615 	stw	r16,1176(sp)
 14484ec:	d8012415 	stw	zero,1168(sp)
 14484f0:	35bff404 	addi	r22,r6,-48
 14484f4:	0009883a 	mov	r4,zero
 14484f8:	b821883a 	mov	r16,r23
 14484fc:	01400284 	movi	r5,10
 1448500:	1440a480 	call	1440a48 <__mulsi3>
 1448504:	81800007 	ldb	r6,0(r16)
 1448508:	1589883a 	add	r4,r2,r22
 144850c:	bdc00044 	addi	r23,r23,1
 1448510:	35bff404 	addi	r22,r6,-48
 1448514:	b821883a 	mov	r16,r23
 1448518:	adbff82e 	bgeu	r21,r22,14484fc <__alt_data_end+0xfffe2cfc>
 144851c:	d9012415 	stw	r4,1168(sp)
 1448520:	dc012617 	ldw	r16,1176(sp)
 1448524:	003f3d06 	br	144821c <__alt_data_end+0xfffe2a1c>
 1448528:	d8c12203 	ldbu	r3,1160(sp)
 144852c:	94800414 	ori	r18,r18,16
 1448530:	9080080c 	andi	r2,r18,32
 1448534:	d8c11d85 	stb	r3,1142(sp)
 1448538:	9811883a 	mov	r8,r19
 144853c:	d8c12317 	ldw	r3,1164(sp)
 1448540:	10018226 	beq	r2,zero,1448b4c <___vfiprintf_internal_r+0xab8>
 1448544:	d9012317 	ldw	r4,1164(sp)
 1448548:	18800117 	ldw	r2,4(r3)
 144854c:	1cc00017 	ldw	r19,0(r3)
 1448550:	21000204 	addi	r4,r4,8
 1448554:	d9012315 	stw	r4,1164(sp)
 1448558:	102b883a 	mov	r21,r2
 144855c:	10030016 	blt	r2,zero,1449160 <___vfiprintf_internal_r+0x10cc>
 1448560:	dd811d83 	ldbu	r22,1142(sp)
 1448564:	8029883a 	mov	r20,r16
 1448568:	00800044 	movi	r2,1
 144856c:	9d46b03a 	or	r3,r19,r21
 1448570:	80000216 	blt	r16,zero,144857c <___vfiprintf_internal_r+0x4e8>
 1448574:	013fdfc4 	movi	r4,-129
 1448578:	9124703a 	and	r18,r18,r4
 144857c:	1801b41e 	bne	r3,zero,1448c50 <___vfiprintf_internal_r+0xbbc>
 1448580:	80028126 	beq	r16,zero,1448f88 <___vfiprintf_internal_r+0xef4>
 1448584:	10803fcc 	andi	r2,r2,255
 1448588:	00c00044 	movi	r3,1
 144858c:	10c1d126 	beq	r2,r3,1448cd4 <___vfiprintf_internal_r+0xc40>
 1448590:	00c00084 	movi	r3,2
 1448594:	10c28626 	beq	r2,r3,1448fb0 <___vfiprintf_internal_r+0xf1c>
 1448598:	d8c10a04 	addi	r3,sp,1064
 144859c:	9808d0fa 	srli	r4,r19,3
 14485a0:	a80a977a 	slli	r5,r21,29
 14485a4:	a82ad0fa 	srli	r21,r21,3
 14485a8:	9cc001cc 	andi	r19,r19,7
 14485ac:	98800c04 	addi	r2,r19,48
 14485b0:	18ffffc4 	addi	r3,r3,-1
 14485b4:	2926b03a 	or	r19,r5,r4
 14485b8:	18800005 	stb	r2,0(r3)
 14485bc:	9d48b03a 	or	r4,r19,r21
 14485c0:	203ff61e 	bne	r4,zero,144859c <__alt_data_end+0xfffe2d9c>
 14485c4:	9100004c 	andi	r4,r18,1
 14485c8:	d8c12215 	stw	r3,1160(sp)
 14485cc:	2002b31e 	bne	r4,zero,144909c <___vfiprintf_internal_r+0x1008>
 14485d0:	d9411e17 	ldw	r5,1144(sp)
 14485d4:	28e9c83a 	sub	r20,r5,r3
 14485d8:	a02b883a 	mov	r21,r20
 14485dc:	a400010e 	bge	r20,r16,14485e4 <___vfiprintf_internal_r+0x550>
 14485e0:	802b883a 	mov	r21,r16
 14485e4:	b5803fcc 	andi	r22,r22,255
 14485e8:	b580201c 	xori	r22,r22,128
 14485ec:	b5bfe004 	addi	r22,r22,-128
 14485f0:	b0000126 	beq	r22,zero,14485f8 <___vfiprintf_internal_r+0x564>
 14485f4:	ad400044 	addi	r21,r21,1
 14485f8:	9280008c 	andi	r10,r18,2
 14485fc:	50000126 	beq	r10,zero,1448604 <___vfiprintf_internal_r+0x570>
 1448600:	ad400084 	addi	r21,r21,2
 1448604:	9580210c 	andi	r22,r18,132
 1448608:	b001751e 	bne	r22,zero,1448be0 <___vfiprintf_internal_r+0xb4c>
 144860c:	d9012417 	ldw	r4,1168(sp)
 1448610:	2567c83a 	sub	r19,r4,r21
 1448614:	04c1720e 	bge	zero,r19,1448be0 <___vfiprintf_internal_r+0xb4c>
 1448618:	01c00404 	movi	r7,16
 144861c:	d8c11c17 	ldw	r3,1136(sp)
 1448620:	3cc36b0e 	bge	r7,r19,14493d0 <___vfiprintf_internal_r+0x133c>
 1448624:	00805174 	movhi	r2,325
 1448628:	10829004 	addi	r2,r2,2624
 144862c:	dc012915 	stw	r16,1188(sp)
 1448630:	d9011b17 	ldw	r4,1132(sp)
 1448634:	9821883a 	mov	r16,r19
 1448638:	d8812615 	stw	r2,1176(sp)
 144863c:	030001c4 	movi	r12,7
 1448640:	5027883a 	mov	r19,r10
 1448644:	00000506 	br	144865c <___vfiprintf_internal_r+0x5c8>
 1448648:	21400084 	addi	r5,r4,2
 144864c:	42000204 	addi	r8,r8,8
 1448650:	1009883a 	mov	r4,r2
 1448654:	843ffc04 	addi	r16,r16,-16
 1448658:	3c000d0e 	bge	r7,r16,1448690 <___vfiprintf_internal_r+0x5fc>
 144865c:	18c00404 	addi	r3,r3,16
 1448660:	20800044 	addi	r2,r4,1
 1448664:	47000015 	stw	fp,0(r8)
 1448668:	41c00115 	stw	r7,4(r8)
 144866c:	d8c11c15 	stw	r3,1136(sp)
 1448670:	d8811b15 	stw	r2,1132(sp)
 1448674:	60bff40e 	bge	r12,r2,1448648 <__alt_data_end+0xfffe2e48>
 1448678:	18014b1e 	bne	r3,zero,1448ba8 <___vfiprintf_internal_r+0xb14>
 144867c:	843ffc04 	addi	r16,r16,-16
 1448680:	0009883a 	mov	r4,zero
 1448684:	01400044 	movi	r5,1
 1448688:	d811883a 	mov	r8,sp
 144868c:	3c3ff316 	blt	r7,r16,144865c <__alt_data_end+0xfffe2e5c>
 1448690:	9815883a 	mov	r10,r19
 1448694:	8027883a 	mov	r19,r16
 1448698:	dc012917 	ldw	r16,1188(sp)
 144869c:	d9012617 	ldw	r4,1176(sp)
 14486a0:	98c7883a 	add	r3,r19,r3
 14486a4:	44c00115 	stw	r19,4(r8)
 14486a8:	41000015 	stw	r4,0(r8)
 14486ac:	d8c11c15 	stw	r3,1136(sp)
 14486b0:	d9411b15 	stw	r5,1132(sp)
 14486b4:	008001c4 	movi	r2,7
 14486b8:	11425116 	blt	r2,r5,1449000 <___vfiprintf_internal_r+0xf6c>
 14486bc:	d9011d87 	ldb	r4,1142(sp)
 14486c0:	42000204 	addi	r8,r8,8
 14486c4:	28800044 	addi	r2,r5,1
 14486c8:	20014a1e 	bne	r4,zero,1448bf4 <___vfiprintf_internal_r+0xb60>
 14486cc:	50000c26 	beq	r10,zero,1448700 <___vfiprintf_internal_r+0x66c>
 14486d0:	d9011d04 	addi	r4,sp,1140
 14486d4:	18c00084 	addi	r3,r3,2
 14486d8:	41000015 	stw	r4,0(r8)
 14486dc:	01000084 	movi	r4,2
 14486e0:	41000115 	stw	r4,4(r8)
 14486e4:	d8c11c15 	stw	r3,1136(sp)
 14486e8:	d8811b15 	stw	r2,1132(sp)
 14486ec:	010001c4 	movi	r4,7
 14486f0:	20822016 	blt	r4,r2,1448f74 <___vfiprintf_internal_r+0xee0>
 14486f4:	100b883a 	mov	r5,r2
 14486f8:	42000204 	addi	r8,r8,8
 14486fc:	10800044 	addi	r2,r2,1
 1448700:	01002004 	movi	r4,128
 1448704:	b101de26 	beq	r22,r4,1448e80 <___vfiprintf_internal_r+0xdec>
 1448708:	8521c83a 	sub	r16,r16,r20
 144870c:	0400230e 	bge	zero,r16,144879c <___vfiprintf_internal_r+0x708>
 1448710:	04c00404 	movi	r19,16
 1448714:	9c030d0e 	bge	r19,r16,144934c <___vfiprintf_internal_r+0x12b8>
 1448718:	00805174 	movhi	r2,325
 144871c:	10828c04 	addi	r2,r2,2608
 1448720:	d8812615 	stw	r2,1176(sp)
 1448724:	058001c4 	movi	r22,7
 1448728:	00000506 	br	1448740 <___vfiprintf_internal_r+0x6ac>
 144872c:	28800084 	addi	r2,r5,2
 1448730:	42000204 	addi	r8,r8,8
 1448734:	200b883a 	mov	r5,r4
 1448738:	843ffc04 	addi	r16,r16,-16
 144873c:	9c000d0e 	bge	r19,r16,1448774 <___vfiprintf_internal_r+0x6e0>
 1448740:	18c00404 	addi	r3,r3,16
 1448744:	29000044 	addi	r4,r5,1
 1448748:	44400015 	stw	r17,0(r8)
 144874c:	44c00115 	stw	r19,4(r8)
 1448750:	d8c11c15 	stw	r3,1136(sp)
 1448754:	d9011b15 	stw	r4,1132(sp)
 1448758:	b13ff40e 	bge	r22,r4,144872c <__alt_data_end+0xfffe2f2c>
 144875c:	1801321e 	bne	r3,zero,1448c28 <___vfiprintf_internal_r+0xb94>
 1448760:	843ffc04 	addi	r16,r16,-16
 1448764:	000b883a 	mov	r5,zero
 1448768:	00800044 	movi	r2,1
 144876c:	d811883a 	mov	r8,sp
 1448770:	9c3ff316 	blt	r19,r16,1448740 <__alt_data_end+0xfffe2f40>
 1448774:	d9012617 	ldw	r4,1176(sp)
 1448778:	1c07883a 	add	r3,r3,r16
 144877c:	44000115 	stw	r16,4(r8)
 1448780:	41000015 	stw	r4,0(r8)
 1448784:	d8c11c15 	stw	r3,1136(sp)
 1448788:	d8811b15 	stw	r2,1132(sp)
 144878c:	010001c4 	movi	r4,7
 1448790:	20816216 	blt	r4,r2,1448d1c <___vfiprintf_internal_r+0xc88>
 1448794:	42000204 	addi	r8,r8,8
 1448798:	10800044 	addi	r2,r2,1
 144879c:	d9012217 	ldw	r4,1160(sp)
 14487a0:	1d07883a 	add	r3,r3,r20
 14487a4:	45000115 	stw	r20,4(r8)
 14487a8:	41000015 	stw	r4,0(r8)
 14487ac:	d8c11c15 	stw	r3,1136(sp)
 14487b0:	d8811b15 	stw	r2,1132(sp)
 14487b4:	010001c4 	movi	r4,7
 14487b8:	2081610e 	bge	r4,r2,1448d40 <___vfiprintf_internal_r+0xcac>
 14487bc:	1802211e 	bne	r3,zero,1449044 <___vfiprintf_internal_r+0xfb0>
 14487c0:	d8011b15 	stw	zero,1132(sp)
 14487c4:	9480010c 	andi	r18,r18,4
 14487c8:	9002171e 	bne	r18,zero,1449028 <___vfiprintf_internal_r+0xf94>
 14487cc:	d9412417 	ldw	r5,1168(sp)
 14487d0:	a9433716 	blt	r21,r5,14494b0 <___vfiprintf_internal_r+0x141c>
 14487d4:	d8812517 	ldw	r2,1172(sp)
 14487d8:	1545883a 	add	r2,r2,r21
 14487dc:	d8812515 	stw	r2,1172(sp)
 14487e0:	00019a06 	br	1448e4c <___vfiprintf_internal_r+0xdb8>
 14487e4:	d8c12317 	ldw	r3,1164(sp)
 14487e8:	05400044 	movi	r21,1
 14487ec:	9811883a 	mov	r8,r19
 14487f0:	18800017 	ldw	r2,0(r3)
 14487f4:	18c00104 	addi	r3,r3,4
 14487f8:	d8c12315 	stw	r3,1164(sp)
 14487fc:	d8c10004 	addi	r3,sp,1024
 1448800:	d8011d85 	stb	zero,1142(sp)
 1448804:	d8810005 	stb	r2,1024(sp)
 1448808:	a829883a 	mov	r20,r21
 144880c:	d8c12215 	stw	r3,1160(sp)
 1448810:	0021883a 	mov	r16,zero
 1448814:	003f7806 	br	14485f8 <__alt_data_end+0xfffe2df8>
 1448818:	94800414 	ori	r18,r18,16
 144881c:	9080080c 	andi	r2,r18,32
 1448820:	9811883a 	mov	r8,r19
 1448824:	10009026 	beq	r2,zero,1448a68 <___vfiprintf_internal_r+0x9d4>
 1448828:	d8812317 	ldw	r2,1164(sp)
 144882c:	d8c12317 	ldw	r3,1164(sp)
 1448830:	14c00017 	ldw	r19,0(r2)
 1448834:	15400117 	ldw	r21,4(r2)
 1448838:	18c00204 	addi	r3,r3,8
 144883c:	d8c12315 	stw	r3,1164(sp)
 1448840:	0005883a 	mov	r2,zero
 1448844:	9d46b03a 	or	r3,r19,r21
 1448848:	d8011d85 	stb	zero,1142(sp)
 144884c:	8029883a 	mov	r20,r16
 1448850:	002d883a 	mov	r22,zero
 1448854:	003f4606 	br	1448570 <__alt_data_end+0xfffe2d70>
 1448858:	94800414 	ori	r18,r18,16
 144885c:	9080080c 	andi	r2,r18,32
 1448860:	9811883a 	mov	r8,r19
 1448864:	10006226 	beq	r2,zero,14489f0 <___vfiprintf_internal_r+0x95c>
 1448868:	d9012317 	ldw	r4,1164(sp)
 144886c:	00800044 	movi	r2,1
 1448870:	24c00017 	ldw	r19,0(r4)
 1448874:	25400117 	ldw	r21,4(r4)
 1448878:	21000204 	addi	r4,r4,8
 144887c:	d9012315 	stw	r4,1164(sp)
 1448880:	9d46b03a 	or	r3,r19,r21
 1448884:	003ff006 	br	1448848 <__alt_data_end+0xfffe3048>
 1448888:	b9800007 	ldb	r6,0(r23)
 144888c:	00801b04 	movi	r2,108
 1448890:	3082b226 	beq	r6,r2,144935c <___vfiprintf_internal_r+0x12c8>
 1448894:	94800414 	ori	r18,r18,16
 1448898:	003e5f06 	br	1448218 <__alt_data_end+0xfffe2a18>
 144889c:	d8c12203 	ldbu	r3,1160(sp)
 14488a0:	01005174 	movhi	r4,325
 14488a4:	21022604 	addi	r4,r4,2200
 14488a8:	d8c11d85 	stb	r3,1142(sp)
 14488ac:	d9012715 	stw	r4,1180(sp)
 14488b0:	90c0080c 	andi	r3,r18,32
 14488b4:	9811883a 	mov	r8,r19
 14488b8:	d8812317 	ldw	r2,1164(sp)
 14488bc:	18005f26 	beq	r3,zero,1448a3c <___vfiprintf_internal_r+0x9a8>
 14488c0:	d9012317 	ldw	r4,1164(sp)
 14488c4:	14c00017 	ldw	r19,0(r2)
 14488c8:	15400117 	ldw	r21,4(r2)
 14488cc:	21000204 	addi	r4,r4,8
 14488d0:	d9012315 	stw	r4,1164(sp)
 14488d4:	9080004c 	andi	r2,r18,1
 14488d8:	1001e226 	beq	r2,zero,1449064 <___vfiprintf_internal_r+0xfd0>
 14488dc:	9d46b03a 	or	r3,r19,r21
 14488e0:	18024e26 	beq	r3,zero,144921c <___vfiprintf_internal_r+0x1188>
 14488e4:	00800c04 	movi	r2,48
 14488e8:	d8811d05 	stb	r2,1140(sp)
 14488ec:	d9811d45 	stb	r6,1141(sp)
 14488f0:	94800094 	ori	r18,r18,2
 14488f4:	00800084 	movi	r2,2
 14488f8:	003fd306 	br	1448848 <__alt_data_end+0xfffe3048>
 14488fc:	d9012317 	ldw	r4,1164(sp)
 1448900:	d9412317 	ldw	r5,1164(sp)
 1448904:	21000017 	ldw	r4,0(r4)
 1448908:	28800104 	addi	r2,r5,4
 144890c:	d9012415 	stw	r4,1168(sp)
 1448910:	203eeb16 	blt	r4,zero,14484c0 <__alt_data_end+0xfffe2cc0>
 1448914:	d8812315 	stw	r2,1164(sp)
 1448918:	b9800007 	ldb	r6,0(r23)
 144891c:	003e3e06 	br	1448218 <__alt_data_end+0xfffe2a18>
 1448920:	b9800007 	ldb	r6,0(r23)
 1448924:	01000a84 	movi	r4,42
 1448928:	b8800044 	addi	r2,r23,1
 144892c:	3102d226 	beq	r6,r4,1449478 <___vfiprintf_internal_r+0x13e4>
 1448930:	35bff404 	addi	r22,r6,-48
 1448934:	102f883a 	mov	r23,r2
 1448938:	0021883a 	mov	r16,zero
 144893c:	adbe3736 	bltu	r21,r22,144821c <__alt_data_end+0xfffe2a1c>
 1448940:	0009883a 	mov	r4,zero
 1448944:	01400284 	movi	r5,10
 1448948:	1440a480 	call	1440a48 <__mulsi3>
 144894c:	b9800007 	ldb	r6,0(r23)
 1448950:	b089883a 	add	r4,r22,r2
 1448954:	bdc00044 	addi	r23,r23,1
 1448958:	35bff404 	addi	r22,r6,-48
 144895c:	adbff92e 	bgeu	r21,r22,1448944 <__alt_data_end+0xfffe3144>
 1448960:	2021883a 	mov	r16,r4
 1448964:	203e2d0e 	bge	r4,zero,144821c <__alt_data_end+0xfffe2a1c>
 1448968:	043fffc4 	movi	r16,-1
 144896c:	003e2b06 	br	144821c <__alt_data_end+0xfffe2a1c>
 1448970:	94801014 	ori	r18,r18,64
 1448974:	b9800007 	ldb	r6,0(r23)
 1448978:	003e2706 	br	1448218 <__alt_data_end+0xfffe2a18>
 144897c:	94800814 	ori	r18,r18,32
 1448980:	b9800007 	ldb	r6,0(r23)
 1448984:	003e2406 	br	1448218 <__alt_data_end+0xfffe2a18>
 1448988:	d9412317 	ldw	r5,1164(sp)
 144898c:	d8812317 	ldw	r2,1164(sp)
 1448990:	d8011d85 	stb	zero,1142(sp)
 1448994:	29400017 	ldw	r5,0(r5)
 1448998:	9811883a 	mov	r8,r19
 144899c:	14c00104 	addi	r19,r2,4
 14489a0:	d9412215 	stw	r5,1160(sp)
 14489a4:	28029026 	beq	r5,zero,14493e8 <___vfiprintf_internal_r+0x1354>
 14489a8:	d9012217 	ldw	r4,1160(sp)
 14489ac:	80027616 	blt	r16,zero,1449388 <___vfiprintf_internal_r+0x12f4>
 14489b0:	000b883a 	mov	r5,zero
 14489b4:	800d883a 	mov	r6,r16
 14489b8:	da012a15 	stw	r8,1192(sp)
 14489bc:	14462500 	call	1446250 <memchr>
 14489c0:	da012a17 	ldw	r8,1192(sp)
 14489c4:	1002a026 	beq	r2,zero,1449448 <___vfiprintf_internal_r+0x13b4>
 14489c8:	d8c12217 	ldw	r3,1160(sp)
 14489cc:	10e9c83a 	sub	r20,r2,r3
 14489d0:	85023816 	blt	r16,r20,14492b4 <___vfiprintf_internal_r+0x1220>
 14489d4:	dd811d83 	ldbu	r22,1142(sp)
 14489d8:	dcc12315 	stw	r19,1164(sp)
 14489dc:	0021883a 	mov	r16,zero
 14489e0:	003efd06 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 14489e4:	9080080c 	andi	r2,r18,32
 14489e8:	9811883a 	mov	r8,r19
 14489ec:	103f9e1e 	bne	r2,zero,1448868 <__alt_data_end+0xfffe3068>
 14489f0:	9080040c 	andi	r2,r18,16
 14489f4:	10021726 	beq	r2,zero,1449254 <___vfiprintf_internal_r+0x11c0>
 14489f8:	d9412317 	ldw	r5,1164(sp)
 14489fc:	002b883a 	mov	r21,zero
 1448a00:	00800044 	movi	r2,1
 1448a04:	2cc00017 	ldw	r19,0(r5)
 1448a08:	29400104 	addi	r5,r5,4
 1448a0c:	d9412315 	stw	r5,1164(sp)
 1448a10:	9807883a 	mov	r3,r19
 1448a14:	003f8c06 	br	1448848 <__alt_data_end+0xfffe3048>
 1448a18:	d8c12203 	ldbu	r3,1160(sp)
 1448a1c:	01005174 	movhi	r4,325
 1448a20:	21022b04 	addi	r4,r4,2220
 1448a24:	d8c11d85 	stb	r3,1142(sp)
 1448a28:	d9012715 	stw	r4,1180(sp)
 1448a2c:	90c0080c 	andi	r3,r18,32
 1448a30:	9811883a 	mov	r8,r19
 1448a34:	d8812317 	ldw	r2,1164(sp)
 1448a38:	183fa11e 	bne	r3,zero,14488c0 <__alt_data_end+0xfffe30c0>
 1448a3c:	90c0040c 	andi	r3,r18,16
 1448a40:	1801e526 	beq	r3,zero,14491d8 <___vfiprintf_internal_r+0x1144>
 1448a44:	d9412317 	ldw	r5,1164(sp)
 1448a48:	14c00017 	ldw	r19,0(r2)
 1448a4c:	002b883a 	mov	r21,zero
 1448a50:	29400104 	addi	r5,r5,4
 1448a54:	d9412315 	stw	r5,1164(sp)
 1448a58:	003f9e06 	br	14488d4 <__alt_data_end+0xfffe30d4>
 1448a5c:	9080080c 	andi	r2,r18,32
 1448a60:	9811883a 	mov	r8,r19
 1448a64:	103f701e 	bne	r2,zero,1448828 <__alt_data_end+0xfffe3028>
 1448a68:	9080040c 	andi	r2,r18,16
 1448a6c:	1001ef26 	beq	r2,zero,144922c <___vfiprintf_internal_r+0x1198>
 1448a70:	d9012317 	ldw	r4,1164(sp)
 1448a74:	002b883a 	mov	r21,zero
 1448a78:	0005883a 	mov	r2,zero
 1448a7c:	24c00017 	ldw	r19,0(r4)
 1448a80:	21000104 	addi	r4,r4,4
 1448a84:	d9012315 	stw	r4,1164(sp)
 1448a88:	9807883a 	mov	r3,r19
 1448a8c:	003f6e06 	br	1448848 <__alt_data_end+0xfffe3048>
 1448a90:	d8c12317 	ldw	r3,1164(sp)
 1448a94:	9811883a 	mov	r8,r19
 1448a98:	00800c04 	movi	r2,48
 1448a9c:	1cc00017 	ldw	r19,0(r3)
 1448aa0:	01005174 	movhi	r4,325
 1448aa4:	18c00104 	addi	r3,r3,4
 1448aa8:	d8811d05 	stb	r2,1140(sp)
 1448aac:	21022b04 	addi	r4,r4,2220
 1448ab0:	00801e04 	movi	r2,120
 1448ab4:	d8811d45 	stb	r2,1141(sp)
 1448ab8:	d8c12315 	stw	r3,1164(sp)
 1448abc:	002b883a 	mov	r21,zero
 1448ac0:	94800094 	ori	r18,r18,2
 1448ac4:	d9012715 	stw	r4,1180(sp)
 1448ac8:	00800084 	movi	r2,2
 1448acc:	9807883a 	mov	r3,r19
 1448ad0:	003f5d06 	br	1448848 <__alt_data_end+0xfffe3048>
 1448ad4:	d8c12203 	ldbu	r3,1160(sp)
 1448ad8:	9080080c 	andi	r2,r18,32
 1448adc:	9811883a 	mov	r8,r19
 1448ae0:	d8c11d85 	stb	r3,1142(sp)
 1448ae4:	1001b126 	beq	r2,zero,14491ac <___vfiprintf_internal_r+0x1118>
 1448ae8:	d9012317 	ldw	r4,1164(sp)
 1448aec:	d9412517 	ldw	r5,1172(sp)
 1448af0:	20800017 	ldw	r2,0(r4)
 1448af4:	2807d7fa 	srai	r3,r5,31
 1448af8:	21000104 	addi	r4,r4,4
 1448afc:	d9012315 	stw	r4,1164(sp)
 1448b00:	11400015 	stw	r5,0(r2)
 1448b04:	10c00115 	stw	r3,4(r2)
 1448b08:	003d9a06 	br	1448174 <__alt_data_end+0xfffe2974>
 1448b0c:	d8812207 	ldb	r2,1160(sp)
 1448b10:	1001c41e 	bne	r2,zero,1449224 <___vfiprintf_internal_r+0x1190>
 1448b14:	00c00804 	movi	r3,32
 1448b18:	d8c12205 	stb	r3,1160(sp)
 1448b1c:	b9800007 	ldb	r6,0(r23)
 1448b20:	003dbd06 	br	1448218 <__alt_data_end+0xfffe2a18>
 1448b24:	00c00ac4 	movi	r3,43
 1448b28:	d8c12205 	stb	r3,1160(sp)
 1448b2c:	b9800007 	ldb	r6,0(r23)
 1448b30:	003db906 	br	1448218 <__alt_data_end+0xfffe2a18>
 1448b34:	d8c12203 	ldbu	r3,1160(sp)
 1448b38:	9080080c 	andi	r2,r18,32
 1448b3c:	9811883a 	mov	r8,r19
 1448b40:	d8c11d85 	stb	r3,1142(sp)
 1448b44:	d8c12317 	ldw	r3,1164(sp)
 1448b48:	103e7e1e 	bne	r2,zero,1448544 <__alt_data_end+0xfffe2d44>
 1448b4c:	9080040c 	andi	r2,r18,16
 1448b50:	1001a926 	beq	r2,zero,14491f8 <___vfiprintf_internal_r+0x1164>
 1448b54:	1cc00017 	ldw	r19,0(r3)
 1448b58:	d9412317 	ldw	r5,1164(sp)
 1448b5c:	982bd7fa 	srai	r21,r19,31
 1448b60:	29400104 	addi	r5,r5,4
 1448b64:	d9412315 	stw	r5,1164(sp)
 1448b68:	a805883a 	mov	r2,r21
 1448b6c:	003e7b06 	br	144855c <__alt_data_end+0xfffe2d5c>
 1448b70:	94800054 	ori	r18,r18,1
 1448b74:	b9800007 	ldb	r6,0(r23)
 1448b78:	003da706 	br	1448218 <__alt_data_end+0xfffe2a18>
 1448b7c:	d8c12203 	ldbu	r3,1160(sp)
 1448b80:	9811883a 	mov	r8,r19
 1448b84:	d8c11d85 	stb	r3,1142(sp)
 1448b88:	30005826 	beq	r6,zero,1448cec <___vfiprintf_internal_r+0xc58>
 1448b8c:	05400044 	movi	r21,1
 1448b90:	d8c10004 	addi	r3,sp,1024
 1448b94:	d9810005 	stb	r6,1024(sp)
 1448b98:	d8011d85 	stb	zero,1142(sp)
 1448b9c:	a829883a 	mov	r20,r21
 1448ba0:	d8c12215 	stw	r3,1160(sp)
 1448ba4:	003f1a06 	br	1448810 <__alt_data_end+0xfffe3010>
 1448ba8:	d9012117 	ldw	r4,1156(sp)
 1448bac:	d9412017 	ldw	r5,1152(sp)
 1448bb0:	d9811a04 	addi	r6,sp,1128
 1448bb4:	d9c12a15 	stw	r7,1192(sp)
 1448bb8:	db012b15 	stw	r12,1196(sp)
 1448bbc:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1448bc0:	d9c12a17 	ldw	r7,1192(sp)
 1448bc4:	db012b17 	ldw	r12,1196(sp)
 1448bc8:	10004e1e 	bne	r2,zero,1448d04 <___vfiprintf_internal_r+0xc70>
 1448bcc:	d9011b17 	ldw	r4,1132(sp)
 1448bd0:	d8c11c17 	ldw	r3,1136(sp)
 1448bd4:	d811883a 	mov	r8,sp
 1448bd8:	21400044 	addi	r5,r4,1
 1448bdc:	003e9d06 	br	1448654 <__alt_data_end+0xfffe2e54>
 1448be0:	d9411b17 	ldw	r5,1132(sp)
 1448be4:	d8c11c17 	ldw	r3,1136(sp)
 1448be8:	28800044 	addi	r2,r5,1
 1448bec:	d9011d87 	ldb	r4,1142(sp)
 1448bf0:	203eb626 	beq	r4,zero,14486cc <__alt_data_end+0xfffe2ecc>
 1448bf4:	01000044 	movi	r4,1
 1448bf8:	d9411d84 	addi	r5,sp,1142
 1448bfc:	1907883a 	add	r3,r3,r4
 1448c00:	41400015 	stw	r5,0(r8)
 1448c04:	41000115 	stw	r4,4(r8)
 1448c08:	d8c11c15 	stw	r3,1136(sp)
 1448c0c:	d8811b15 	stw	r2,1132(sp)
 1448c10:	014001c4 	movi	r5,7
 1448c14:	2880ce16 	blt	r5,r2,1448f50 <___vfiprintf_internal_r+0xebc>
 1448c18:	100b883a 	mov	r5,r2
 1448c1c:	42000204 	addi	r8,r8,8
 1448c20:	10800044 	addi	r2,r2,1
 1448c24:	003ea906 	br	14486cc <__alt_data_end+0xfffe2ecc>
 1448c28:	d9012117 	ldw	r4,1156(sp)
 1448c2c:	d9412017 	ldw	r5,1152(sp)
 1448c30:	d9811a04 	addi	r6,sp,1128
 1448c34:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1448c38:	1000321e 	bne	r2,zero,1448d04 <___vfiprintf_internal_r+0xc70>
 1448c3c:	d9411b17 	ldw	r5,1132(sp)
 1448c40:	d8c11c17 	ldw	r3,1136(sp)
 1448c44:	d811883a 	mov	r8,sp
 1448c48:	28800044 	addi	r2,r5,1
 1448c4c:	003eba06 	br	1448738 <__alt_data_end+0xfffe2f38>
 1448c50:	10803fcc 	andi	r2,r2,255
 1448c54:	00c00044 	movi	r3,1
 1448c58:	10fe4d1e 	bne	r2,r3,1448590 <__alt_data_end+0xfffe2d90>
 1448c5c:	a800021e 	bne	r21,zero,1448c68 <___vfiprintf_internal_r+0xbd4>
 1448c60:	00800244 	movi	r2,9
 1448c64:	14c01b2e 	bgeu	r2,r19,1448cd4 <___vfiprintf_internal_r+0xc40>
 1448c68:	dc012215 	stw	r16,1160(sp)
 1448c6c:	dd010a04 	addi	r20,sp,1064
 1448c70:	a821883a 	mov	r16,r21
 1448c74:	402b883a 	mov	r21,r8
 1448c78:	9809883a 	mov	r4,r19
 1448c7c:	800b883a 	mov	r5,r16
 1448c80:	01800284 	movi	r6,10
 1448c84:	000f883a 	mov	r7,zero
 1448c88:	144a4680 	call	144a468 <__umoddi3>
 1448c8c:	10800c04 	addi	r2,r2,48
 1448c90:	a53fffc4 	addi	r20,r20,-1
 1448c94:	9809883a 	mov	r4,r19
 1448c98:	800b883a 	mov	r5,r16
 1448c9c:	01800284 	movi	r6,10
 1448ca0:	000f883a 	mov	r7,zero
 1448ca4:	a0800005 	stb	r2,0(r20)
 1448ca8:	1449e280 	call	1449e28 <__udivdi3>
 1448cac:	1027883a 	mov	r19,r2
 1448cb0:	10c4b03a 	or	r2,r2,r3
 1448cb4:	1821883a 	mov	r16,r3
 1448cb8:	103fef1e 	bne	r2,zero,1448c78 <__alt_data_end+0xfffe3478>
 1448cbc:	d9011e17 	ldw	r4,1144(sp)
 1448cc0:	dc012217 	ldw	r16,1160(sp)
 1448cc4:	a811883a 	mov	r8,r21
 1448cc8:	dd012215 	stw	r20,1160(sp)
 1448ccc:	2529c83a 	sub	r20,r4,r20
 1448cd0:	003e4106 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 1448cd4:	9cc00c04 	addi	r19,r19,48
 1448cd8:	d8c109c4 	addi	r3,sp,1063
 1448cdc:	dcc109c5 	stb	r19,1063(sp)
 1448ce0:	dd012817 	ldw	r20,1184(sp)
 1448ce4:	d8c12215 	stw	r3,1160(sp)
 1448ce8:	003e3b06 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 1448cec:	d8811c17 	ldw	r2,1136(sp)
 1448cf0:	10000426 	beq	r2,zero,1448d04 <___vfiprintf_internal_r+0xc70>
 1448cf4:	d9012117 	ldw	r4,1156(sp)
 1448cf8:	d9412017 	ldw	r5,1152(sp)
 1448cfc:	d9811a04 	addi	r6,sp,1128
 1448d00:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1448d04:	d9412017 	ldw	r5,1152(sp)
 1448d08:	2880030b 	ldhu	r2,12(r5)
 1448d0c:	1080100c 	andi	r2,r2,64
 1448d10:	103ddc1e 	bne	r2,zero,1448484 <__alt_data_end+0xfffe2c84>
 1448d14:	d8812517 	ldw	r2,1172(sp)
 1448d18:	003ddb06 	br	1448488 <__alt_data_end+0xfffe2c88>
 1448d1c:	1801061e 	bne	r3,zero,1449138 <___vfiprintf_internal_r+0x10a4>
 1448d20:	d8c12217 	ldw	r3,1160(sp)
 1448d24:	00800044 	movi	r2,1
 1448d28:	dd000115 	stw	r20,4(sp)
 1448d2c:	d8c00015 	stw	r3,0(sp)
 1448d30:	dd011c15 	stw	r20,1136(sp)
 1448d34:	d8811b15 	stw	r2,1132(sp)
 1448d38:	a007883a 	mov	r3,r20
 1448d3c:	d811883a 	mov	r8,sp
 1448d40:	42000204 	addi	r8,r8,8
 1448d44:	9480010c 	andi	r18,r18,4
 1448d48:	90003426 	beq	r18,zero,1448e1c <___vfiprintf_internal_r+0xd88>
 1448d4c:	d9412417 	ldw	r5,1168(sp)
 1448d50:	2d65c83a 	sub	r18,r5,r21
 1448d54:	0480310e 	bge	zero,r18,1448e1c <___vfiprintf_internal_r+0xd88>
 1448d58:	04000404 	movi	r16,16
 1448d5c:	8481ad0e 	bge	r16,r18,1449414 <___vfiprintf_internal_r+0x1380>
 1448d60:	01405174 	movhi	r5,325
 1448d64:	29429004 	addi	r5,r5,2624
 1448d68:	d9011b17 	ldw	r4,1132(sp)
 1448d6c:	d9412615 	stw	r5,1176(sp)
 1448d70:	04c001c4 	movi	r19,7
 1448d74:	dd012117 	ldw	r20,1156(sp)
 1448d78:	dd812017 	ldw	r22,1152(sp)
 1448d7c:	00000506 	br	1448d94 <___vfiprintf_internal_r+0xd00>
 1448d80:	21400084 	addi	r5,r4,2
 1448d84:	42000204 	addi	r8,r8,8
 1448d88:	1009883a 	mov	r4,r2
 1448d8c:	94bffc04 	addi	r18,r18,-16
 1448d90:	84800d0e 	bge	r16,r18,1448dc8 <___vfiprintf_internal_r+0xd34>
 1448d94:	18c00404 	addi	r3,r3,16
 1448d98:	20800044 	addi	r2,r4,1
 1448d9c:	47000015 	stw	fp,0(r8)
 1448da0:	44000115 	stw	r16,4(r8)
 1448da4:	d8c11c15 	stw	r3,1136(sp)
 1448da8:	d8811b15 	stw	r2,1132(sp)
 1448dac:	98bff40e 	bge	r19,r2,1448d80 <__alt_data_end+0xfffe3580>
 1448db0:	1800291e 	bne	r3,zero,1448e58 <___vfiprintf_internal_r+0xdc4>
 1448db4:	94bffc04 	addi	r18,r18,-16
 1448db8:	0009883a 	mov	r4,zero
 1448dbc:	01400044 	movi	r5,1
 1448dc0:	d811883a 	mov	r8,sp
 1448dc4:	84bff316 	blt	r16,r18,1448d94 <__alt_data_end+0xfffe3594>
 1448dc8:	d8812617 	ldw	r2,1176(sp)
 1448dcc:	1c87883a 	add	r3,r3,r18
 1448dd0:	44800115 	stw	r18,4(r8)
 1448dd4:	40800015 	stw	r2,0(r8)
 1448dd8:	d8c11c15 	stw	r3,1136(sp)
 1448ddc:	d9411b15 	stw	r5,1132(sp)
 1448de0:	008001c4 	movi	r2,7
 1448de4:	11400d0e 	bge	r2,r5,1448e1c <___vfiprintf_internal_r+0xd88>
 1448de8:	1800061e 	bne	r3,zero,1448e04 <___vfiprintf_internal_r+0xd70>
 1448dec:	d8c12417 	ldw	r3,1168(sp)
 1448df0:	a8c12e16 	blt	r21,r3,14492ac <___vfiprintf_internal_r+0x1218>
 1448df4:	d9012517 	ldw	r4,1172(sp)
 1448df8:	2549883a 	add	r4,r4,r21
 1448dfc:	d9012515 	stw	r4,1172(sp)
 1448e00:	00001206 	br	1448e4c <___vfiprintf_internal_r+0xdb8>
 1448e04:	d9012117 	ldw	r4,1156(sp)
 1448e08:	d9412017 	ldw	r5,1152(sp)
 1448e0c:	d9811a04 	addi	r6,sp,1128
 1448e10:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1448e14:	103fbb1e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 1448e18:	d8c11c17 	ldw	r3,1136(sp)
 1448e1c:	d8812417 	ldw	r2,1168(sp)
 1448e20:	a880010e 	bge	r21,r2,1448e28 <___vfiprintf_internal_r+0xd94>
 1448e24:	102b883a 	mov	r21,r2
 1448e28:	d9012517 	ldw	r4,1172(sp)
 1448e2c:	2549883a 	add	r4,r4,r21
 1448e30:	d9012515 	stw	r4,1172(sp)
 1448e34:	18000526 	beq	r3,zero,1448e4c <___vfiprintf_internal_r+0xdb8>
 1448e38:	d9012117 	ldw	r4,1156(sp)
 1448e3c:	d9412017 	ldw	r5,1152(sp)
 1448e40:	d9811a04 	addi	r6,sp,1128
 1448e44:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1448e48:	103fae1e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 1448e4c:	d8011b15 	stw	zero,1132(sp)
 1448e50:	d811883a 	mov	r8,sp
 1448e54:	003cc706 	br	1448174 <__alt_data_end+0xfffe2974>
 1448e58:	a009883a 	mov	r4,r20
 1448e5c:	b00b883a 	mov	r5,r22
 1448e60:	d9811a04 	addi	r6,sp,1128
 1448e64:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1448e68:	103fa61e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 1448e6c:	d9011b17 	ldw	r4,1132(sp)
 1448e70:	d8c11c17 	ldw	r3,1136(sp)
 1448e74:	d811883a 	mov	r8,sp
 1448e78:	21400044 	addi	r5,r4,1
 1448e7c:	003fc306 	br	1448d8c <__alt_data_end+0xfffe358c>
 1448e80:	d9012417 	ldw	r4,1168(sp)
 1448e84:	256dc83a 	sub	r22,r4,r21
 1448e88:	05be1f0e 	bge	zero,r22,1448708 <__alt_data_end+0xfffe2f08>
 1448e8c:	04c00404 	movi	r19,16
 1448e90:	9d81720e 	bge	r19,r22,144945c <___vfiprintf_internal_r+0x13c8>
 1448e94:	00805174 	movhi	r2,325
 1448e98:	10828c04 	addi	r2,r2,2608
 1448e9c:	d8812615 	stw	r2,1176(sp)
 1448ea0:	028001c4 	movi	r10,7
 1448ea4:	00000506 	br	1448ebc <___vfiprintf_internal_r+0xe28>
 1448ea8:	29000084 	addi	r4,r5,2
 1448eac:	42000204 	addi	r8,r8,8
 1448eb0:	100b883a 	mov	r5,r2
 1448eb4:	b5bffc04 	addi	r22,r22,-16
 1448eb8:	9d800d0e 	bge	r19,r22,1448ef0 <___vfiprintf_internal_r+0xe5c>
 1448ebc:	18c00404 	addi	r3,r3,16
 1448ec0:	28800044 	addi	r2,r5,1
 1448ec4:	44400015 	stw	r17,0(r8)
 1448ec8:	44c00115 	stw	r19,4(r8)
 1448ecc:	d8c11c15 	stw	r3,1136(sp)
 1448ed0:	d8811b15 	stw	r2,1132(sp)
 1448ed4:	50bff40e 	bge	r10,r2,1448ea8 <__alt_data_end+0xfffe36a8>
 1448ed8:	1800111e 	bne	r3,zero,1448f20 <___vfiprintf_internal_r+0xe8c>
 1448edc:	b5bffc04 	addi	r22,r22,-16
 1448ee0:	000b883a 	mov	r5,zero
 1448ee4:	01000044 	movi	r4,1
 1448ee8:	d811883a 	mov	r8,sp
 1448eec:	9dbff316 	blt	r19,r22,1448ebc <__alt_data_end+0xfffe36bc>
 1448ef0:	d9412617 	ldw	r5,1176(sp)
 1448ef4:	1d87883a 	add	r3,r3,r22
 1448ef8:	45800115 	stw	r22,4(r8)
 1448efc:	41400015 	stw	r5,0(r8)
 1448f00:	d8c11c15 	stw	r3,1136(sp)
 1448f04:	d9011b15 	stw	r4,1132(sp)
 1448f08:	008001c4 	movi	r2,7
 1448f0c:	11008516 	blt	r2,r4,1449124 <___vfiprintf_internal_r+0x1090>
 1448f10:	42000204 	addi	r8,r8,8
 1448f14:	20800044 	addi	r2,r4,1
 1448f18:	200b883a 	mov	r5,r4
 1448f1c:	003dfa06 	br	1448708 <__alt_data_end+0xfffe2f08>
 1448f20:	d9012117 	ldw	r4,1156(sp)
 1448f24:	d9412017 	ldw	r5,1152(sp)
 1448f28:	d9811a04 	addi	r6,sp,1128
 1448f2c:	da812a15 	stw	r10,1192(sp)
 1448f30:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1448f34:	da812a17 	ldw	r10,1192(sp)
 1448f38:	103f721e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 1448f3c:	d9411b17 	ldw	r5,1132(sp)
 1448f40:	d8c11c17 	ldw	r3,1136(sp)
 1448f44:	d811883a 	mov	r8,sp
 1448f48:	29000044 	addi	r4,r5,1
 1448f4c:	003fd906 	br	1448eb4 <__alt_data_end+0xfffe36b4>
 1448f50:	1800681e 	bne	r3,zero,14490f4 <___vfiprintf_internal_r+0x1060>
 1448f54:	50004d26 	beq	r10,zero,144908c <___vfiprintf_internal_r+0xff8>
 1448f58:	d8811d04 	addi	r2,sp,1140
 1448f5c:	00c00084 	movi	r3,2
 1448f60:	d8800015 	stw	r2,0(sp)
 1448f64:	d8c00115 	stw	r3,4(sp)
 1448f68:	2005883a 	mov	r2,r4
 1448f6c:	d811883a 	mov	r8,sp
 1448f70:	003de006 	br	14486f4 <__alt_data_end+0xfffe2ef4>
 1448f74:	1800551e 	bne	r3,zero,14490cc <___vfiprintf_internal_r+0x1038>
 1448f78:	000b883a 	mov	r5,zero
 1448f7c:	00800044 	movi	r2,1
 1448f80:	d811883a 	mov	r8,sp
 1448f84:	003dde06 	br	1448700 <__alt_data_end+0xfffe2f00>
 1448f88:	10803fcc 	andi	r2,r2,255
 1448f8c:	1000191e 	bne	r2,zero,1448ff4 <___vfiprintf_internal_r+0xf60>
 1448f90:	9080004c 	andi	r2,r18,1
 1448f94:	10001726 	beq	r2,zero,1448ff4 <___vfiprintf_internal_r+0xf60>
 1448f98:	00800c04 	movi	r2,48
 1448f9c:	d8c109c4 	addi	r3,sp,1063
 1448fa0:	d88109c5 	stb	r2,1063(sp)
 1448fa4:	dd012817 	ldw	r20,1184(sp)
 1448fa8:	d8c12215 	stw	r3,1160(sp)
 1448fac:	003d8a06 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 1448fb0:	d9012717 	ldw	r4,1180(sp)
 1448fb4:	dd010a04 	addi	r20,sp,1064
 1448fb8:	988003cc 	andi	r2,r19,15
 1448fbc:	a806973a 	slli	r3,r21,28
 1448fc0:	2085883a 	add	r2,r4,r2
 1448fc4:	9826d13a 	srli	r19,r19,4
 1448fc8:	10800003 	ldbu	r2,0(r2)
 1448fcc:	a82ad13a 	srli	r21,r21,4
 1448fd0:	a53fffc4 	addi	r20,r20,-1
 1448fd4:	1ce6b03a 	or	r19,r3,r19
 1448fd8:	a0800005 	stb	r2,0(r20)
 1448fdc:	9d44b03a 	or	r2,r19,r21
 1448fe0:	103ff51e 	bne	r2,zero,1448fb8 <__alt_data_end+0xfffe37b8>
 1448fe4:	d9411e17 	ldw	r5,1144(sp)
 1448fe8:	dd012215 	stw	r20,1160(sp)
 1448fec:	2d29c83a 	sub	r20,r5,r20
 1448ff0:	003d7906 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 1448ff4:	d8c10a04 	addi	r3,sp,1064
 1448ff8:	d8c12215 	stw	r3,1160(sp)
 1448ffc:	003d7606 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 1449000:	18009e1e 	bne	r3,zero,144927c <___vfiprintf_internal_r+0x11e8>
 1449004:	d8811d87 	ldb	r2,1142(sp)
 1449008:	10005f26 	beq	r2,zero,1449188 <___vfiprintf_internal_r+0x10f4>
 144900c:	00c00044 	movi	r3,1
 1449010:	d9011d84 	addi	r4,sp,1142
 1449014:	1805883a 	mov	r2,r3
 1449018:	d9000015 	stw	r4,0(sp)
 144901c:	d8c00115 	stw	r3,4(sp)
 1449020:	d811883a 	mov	r8,sp
 1449024:	003efc06 	br	1448c18 <__alt_data_end+0xfffe3418>
 1449028:	d9412417 	ldw	r5,1168(sp)
 144902c:	d811883a 	mov	r8,sp
 1449030:	2d65c83a 	sub	r18,r5,r21
 1449034:	04bf4816 	blt	zero,r18,1448d58 <__alt_data_end+0xfffe3558>
 1449038:	003f6c06 	br	1448dec <__alt_data_end+0xfffe35ec>
 144903c:	b829883a 	mov	r20,r23
 1449040:	003c6906 	br	14481e8 <__alt_data_end+0xfffe29e8>
 1449044:	d9012117 	ldw	r4,1156(sp)
 1449048:	d9412017 	ldw	r5,1152(sp)
 144904c:	d9811a04 	addi	r6,sp,1128
 1449050:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1449054:	103f2b1e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 1449058:	d8c11c17 	ldw	r3,1136(sp)
 144905c:	d811883a 	mov	r8,sp
 1449060:	003f3806 	br	1448d44 <__alt_data_end+0xfffe3544>
 1449064:	00800084 	movi	r2,2
 1449068:	9d46b03a 	or	r3,r19,r21
 144906c:	003df606 	br	1448848 <__alt_data_end+0xfffe3048>
 1449070:	d9012117 	ldw	r4,1156(sp)
 1449074:	d9412017 	ldw	r5,1152(sp)
 1449078:	d9811a04 	addi	r6,sp,1128
 144907c:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1449080:	103f201e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 1449084:	d811883a 	mov	r8,sp
 1449088:	003cc606 	br	14483a4 <__alt_data_end+0xfffe2ba4>
 144908c:	000b883a 	mov	r5,zero
 1449090:	2005883a 	mov	r2,r4
 1449094:	d811883a 	mov	r8,sp
 1449098:	003d9906 	br	1448700 <__alt_data_end+0xfffe2f00>
 144909c:	10803fcc 	andi	r2,r2,255
 14490a0:	1080201c 	xori	r2,r2,128
 14490a4:	10bfe004 	addi	r2,r2,-128
 14490a8:	01000c04 	movi	r4,48
 14490ac:	1100b226 	beq	r2,r4,1449378 <___vfiprintf_internal_r+0x12e4>
 14490b0:	d9412217 	ldw	r5,1160(sp)
 14490b4:	d8811e17 	ldw	r2,1144(sp)
 14490b8:	193fffc5 	stb	r4,-1(r3)
 14490bc:	297fffc4 	addi	r5,r5,-1
 14490c0:	d9412215 	stw	r5,1160(sp)
 14490c4:	1169c83a 	sub	r20,r2,r5
 14490c8:	003d4306 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 14490cc:	d9012117 	ldw	r4,1156(sp)
 14490d0:	d9412017 	ldw	r5,1152(sp)
 14490d4:	d9811a04 	addi	r6,sp,1128
 14490d8:	1447f800 	call	1447f80 <__sprint_r.part.0>
 14490dc:	103f091e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 14490e0:	d9411b17 	ldw	r5,1132(sp)
 14490e4:	d8c11c17 	ldw	r3,1136(sp)
 14490e8:	d811883a 	mov	r8,sp
 14490ec:	28800044 	addi	r2,r5,1
 14490f0:	003d8306 	br	1448700 <__alt_data_end+0xfffe2f00>
 14490f4:	d9012117 	ldw	r4,1156(sp)
 14490f8:	d9412017 	ldw	r5,1152(sp)
 14490fc:	d9811a04 	addi	r6,sp,1128
 1449100:	da812a15 	stw	r10,1192(sp)
 1449104:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1449108:	da812a17 	ldw	r10,1192(sp)
 144910c:	103efd1e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 1449110:	d9411b17 	ldw	r5,1132(sp)
 1449114:	d8c11c17 	ldw	r3,1136(sp)
 1449118:	d811883a 	mov	r8,sp
 144911c:	28800044 	addi	r2,r5,1
 1449120:	003d6a06 	br	14486cc <__alt_data_end+0xfffe2ecc>
 1449124:	1800a01e 	bne	r3,zero,14493a8 <___vfiprintf_internal_r+0x1314>
 1449128:	000b883a 	mov	r5,zero
 144912c:	00800044 	movi	r2,1
 1449130:	d811883a 	mov	r8,sp
 1449134:	003d7406 	br	1448708 <__alt_data_end+0xfffe2f08>
 1449138:	d9012117 	ldw	r4,1156(sp)
 144913c:	d9412017 	ldw	r5,1152(sp)
 1449140:	d9811a04 	addi	r6,sp,1128
 1449144:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1449148:	103eee1e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 144914c:	d8811b17 	ldw	r2,1132(sp)
 1449150:	d8c11c17 	ldw	r3,1136(sp)
 1449154:	d811883a 	mov	r8,sp
 1449158:	10800044 	addi	r2,r2,1
 144915c:	003d8f06 	br	144879c <__alt_data_end+0xfffe2f9c>
 1449160:	04e7c83a 	sub	r19,zero,r19
 1449164:	9804c03a 	cmpne	r2,r19,zero
 1449168:	056bc83a 	sub	r21,zero,r21
 144916c:	a8abc83a 	sub	r21,r21,r2
 1449170:	05800b44 	movi	r22,45
 1449174:	dd811d85 	stb	r22,1142(sp)
 1449178:	8029883a 	mov	r20,r16
 144917c:	00800044 	movi	r2,1
 1449180:	9d46b03a 	or	r3,r19,r21
 1449184:	003cfa06 	br	1448570 <__alt_data_end+0xfffe2d70>
 1449188:	000b883a 	mov	r5,zero
 144918c:	00800044 	movi	r2,1
 1449190:	d811883a 	mov	r8,sp
 1449194:	503d5a26 	beq	r10,zero,1448700 <__alt_data_end+0xfffe2f00>
 1449198:	00c00084 	movi	r3,2
 144919c:	d9011d04 	addi	r4,sp,1140
 14491a0:	d9000015 	stw	r4,0(sp)
 14491a4:	d8c00115 	stw	r3,4(sp)
 14491a8:	003d5206 	br	14486f4 <__alt_data_end+0xfffe2ef4>
 14491ac:	9080040c 	andi	r2,r18,16
 14491b0:	1000421e 	bne	r2,zero,14492bc <___vfiprintf_internal_r+0x1228>
 14491b4:	9480100c 	andi	r18,r18,64
 14491b8:	90009c26 	beq	r18,zero,144942c <___vfiprintf_internal_r+0x1398>
 14491bc:	d9412317 	ldw	r5,1164(sp)
 14491c0:	d8c12517 	ldw	r3,1172(sp)
 14491c4:	28800017 	ldw	r2,0(r5)
 14491c8:	29400104 	addi	r5,r5,4
 14491cc:	d9412315 	stw	r5,1164(sp)
 14491d0:	10c0000d 	sth	r3,0(r2)
 14491d4:	003be706 	br	1448174 <__alt_data_end+0xfffe2974>
 14491d8:	90c0100c 	andi	r3,r18,64
 14491dc:	18003e26 	beq	r3,zero,14492d8 <___vfiprintf_internal_r+0x1244>
 14491e0:	d8c12317 	ldw	r3,1164(sp)
 14491e4:	14c0000b 	ldhu	r19,0(r2)
 14491e8:	002b883a 	mov	r21,zero
 14491ec:	18c00104 	addi	r3,r3,4
 14491f0:	d8c12315 	stw	r3,1164(sp)
 14491f4:	003db706 	br	14488d4 <__alt_data_end+0xfffe30d4>
 14491f8:	9080100c 	andi	r2,r18,64
 14491fc:	10004c26 	beq	r2,zero,1449330 <___vfiprintf_internal_r+0x129c>
 1449200:	1cc0000f 	ldh	r19,0(r3)
 1449204:	d8812317 	ldw	r2,1164(sp)
 1449208:	982bd7fa 	srai	r21,r19,31
 144920c:	10800104 	addi	r2,r2,4
 1449210:	d8812315 	stw	r2,1164(sp)
 1449214:	a805883a 	mov	r2,r21
 1449218:	003cd006 	br	144855c <__alt_data_end+0xfffe2d5c>
 144921c:	00800084 	movi	r2,2
 1449220:	003d8906 	br	1448848 <__alt_data_end+0xfffe3048>
 1449224:	b9800007 	ldb	r6,0(r23)
 1449228:	003bfb06 	br	1448218 <__alt_data_end+0xfffe2a18>
 144922c:	9080100c 	andi	r2,r18,64
 1449230:	10003726 	beq	r2,zero,1449310 <___vfiprintf_internal_r+0x127c>
 1449234:	d9412317 	ldw	r5,1164(sp)
 1449238:	002b883a 	mov	r21,zero
 144923c:	0005883a 	mov	r2,zero
 1449240:	2cc0000b 	ldhu	r19,0(r5)
 1449244:	29400104 	addi	r5,r5,4
 1449248:	d9412315 	stw	r5,1164(sp)
 144924c:	9807883a 	mov	r3,r19
 1449250:	003d7d06 	br	1448848 <__alt_data_end+0xfffe3048>
 1449254:	9080100c 	andi	r2,r18,64
 1449258:	10002526 	beq	r2,zero,14492f0 <___vfiprintf_internal_r+0x125c>
 144925c:	d8812317 	ldw	r2,1164(sp)
 1449260:	002b883a 	mov	r21,zero
 1449264:	14c0000b 	ldhu	r19,0(r2)
 1449268:	10800104 	addi	r2,r2,4
 144926c:	d8812315 	stw	r2,1164(sp)
 1449270:	9807883a 	mov	r3,r19
 1449274:	00800044 	movi	r2,1
 1449278:	003d7306 	br	1448848 <__alt_data_end+0xfffe3048>
 144927c:	d9012117 	ldw	r4,1156(sp)
 1449280:	d9412017 	ldw	r5,1152(sp)
 1449284:	d9811a04 	addi	r6,sp,1128
 1449288:	da812a15 	stw	r10,1192(sp)
 144928c:	1447f800 	call	1447f80 <__sprint_r.part.0>
 1449290:	da812a17 	ldw	r10,1192(sp)
 1449294:	103e9b1e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 1449298:	d9411b17 	ldw	r5,1132(sp)
 144929c:	d8c11c17 	ldw	r3,1136(sp)
 14492a0:	d811883a 	mov	r8,sp
 14492a4:	28800044 	addi	r2,r5,1
 14492a8:	003e5006 	br	1448bec <__alt_data_end+0xfffe33ec>
 14492ac:	182b883a 	mov	r21,r3
 14492b0:	003ed006 	br	1448df4 <__alt_data_end+0xfffe35f4>
 14492b4:	8029883a 	mov	r20,r16
 14492b8:	003dc606 	br	14489d4 <__alt_data_end+0xfffe31d4>
 14492bc:	d8c12317 	ldw	r3,1164(sp)
 14492c0:	d9012517 	ldw	r4,1172(sp)
 14492c4:	18800017 	ldw	r2,0(r3)
 14492c8:	18c00104 	addi	r3,r3,4
 14492cc:	d8c12315 	stw	r3,1164(sp)
 14492d0:	11000015 	stw	r4,0(r2)
 14492d4:	003ba706 	br	1448174 <__alt_data_end+0xfffe2974>
 14492d8:	d9012317 	ldw	r4,1164(sp)
 14492dc:	14c00017 	ldw	r19,0(r2)
 14492e0:	002b883a 	mov	r21,zero
 14492e4:	21000104 	addi	r4,r4,4
 14492e8:	d9012315 	stw	r4,1164(sp)
 14492ec:	003d7906 	br	14488d4 <__alt_data_end+0xfffe30d4>
 14492f0:	d8c12317 	ldw	r3,1164(sp)
 14492f4:	002b883a 	mov	r21,zero
 14492f8:	00800044 	movi	r2,1
 14492fc:	1cc00017 	ldw	r19,0(r3)
 1449300:	18c00104 	addi	r3,r3,4
 1449304:	d8c12315 	stw	r3,1164(sp)
 1449308:	9807883a 	mov	r3,r19
 144930c:	003d4e06 	br	1448848 <__alt_data_end+0xfffe3048>
 1449310:	d8812317 	ldw	r2,1164(sp)
 1449314:	002b883a 	mov	r21,zero
 1449318:	14c00017 	ldw	r19,0(r2)
 144931c:	10800104 	addi	r2,r2,4
 1449320:	d8812315 	stw	r2,1164(sp)
 1449324:	9807883a 	mov	r3,r19
 1449328:	0005883a 	mov	r2,zero
 144932c:	003d4606 	br	1448848 <__alt_data_end+0xfffe3048>
 1449330:	1cc00017 	ldw	r19,0(r3)
 1449334:	d8c12317 	ldw	r3,1164(sp)
 1449338:	982bd7fa 	srai	r21,r19,31
 144933c:	18c00104 	addi	r3,r3,4
 1449340:	d8c12315 	stw	r3,1164(sp)
 1449344:	a805883a 	mov	r2,r21
 1449348:	003c8406 	br	144855c <__alt_data_end+0xfffe2d5c>
 144934c:	01005174 	movhi	r4,325
 1449350:	21028c04 	addi	r4,r4,2608
 1449354:	d9012615 	stw	r4,1176(sp)
 1449358:	003d0606 	br	1448774 <__alt_data_end+0xfffe2f74>
 144935c:	b9800043 	ldbu	r6,1(r23)
 1449360:	94800814 	ori	r18,r18,32
 1449364:	bdc00044 	addi	r23,r23,1
 1449368:	31803fcc 	andi	r6,r6,255
 144936c:	3180201c 	xori	r6,r6,128
 1449370:	31bfe004 	addi	r6,r6,-128
 1449374:	003ba806 	br	1448218 <__alt_data_end+0xfffe2a18>
 1449378:	d8811e17 	ldw	r2,1144(sp)
 144937c:	d8c12217 	ldw	r3,1160(sp)
 1449380:	10e9c83a 	sub	r20,r2,r3
 1449384:	003c9406 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 1449388:	da012a15 	stw	r8,1192(sp)
 144938c:	1440ba40 	call	1440ba4 <strlen>
 1449390:	1029883a 	mov	r20,r2
 1449394:	dd811d83 	ldbu	r22,1142(sp)
 1449398:	dcc12315 	stw	r19,1164(sp)
 144939c:	0021883a 	mov	r16,zero
 14493a0:	da012a17 	ldw	r8,1192(sp)
 14493a4:	003c8c06 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 14493a8:	d9012117 	ldw	r4,1156(sp)
 14493ac:	d9412017 	ldw	r5,1152(sp)
 14493b0:	d9811a04 	addi	r6,sp,1128
 14493b4:	1447f800 	call	1447f80 <__sprint_r.part.0>
 14493b8:	103e521e 	bne	r2,zero,1448d04 <__alt_data_end+0xfffe3504>
 14493bc:	d9411b17 	ldw	r5,1132(sp)
 14493c0:	d8c11c17 	ldw	r3,1136(sp)
 14493c4:	d811883a 	mov	r8,sp
 14493c8:	28800044 	addi	r2,r5,1
 14493cc:	003cce06 	br	1448708 <__alt_data_end+0xfffe2f08>
 14493d0:	01405174 	movhi	r5,325
 14493d4:	29429004 	addi	r5,r5,2624
 14493d8:	d9412615 	stw	r5,1176(sp)
 14493dc:	d9411b17 	ldw	r5,1132(sp)
 14493e0:	29400044 	addi	r5,r5,1
 14493e4:	003cad06 	br	144869c <__alt_data_end+0xfffe2e9c>
 14493e8:	00800184 	movi	r2,6
 14493ec:	1400012e 	bgeu	r2,r16,14493f4 <___vfiprintf_internal_r+0x1360>
 14493f0:	1021883a 	mov	r16,r2
 14493f4:	8029883a 	mov	r20,r16
 14493f8:	802b883a 	mov	r21,r16
 14493fc:	80001c16 	blt	r16,zero,1449470 <___vfiprintf_internal_r+0x13dc>
 1449400:	00c05174 	movhi	r3,325
 1449404:	18c23004 	addi	r3,r3,2240
 1449408:	dcc12315 	stw	r19,1164(sp)
 144940c:	d8c12215 	stw	r3,1160(sp)
 1449410:	003cff06 	br	1448810 <__alt_data_end+0xfffe3010>
 1449414:	d9411b17 	ldw	r5,1132(sp)
 1449418:	00805174 	movhi	r2,325
 144941c:	10829004 	addi	r2,r2,2624
 1449420:	d8812615 	stw	r2,1176(sp)
 1449424:	29400044 	addi	r5,r5,1
 1449428:	003e6706 	br	1448dc8 <__alt_data_end+0xfffe35c8>
 144942c:	d9012317 	ldw	r4,1164(sp)
 1449430:	d9412517 	ldw	r5,1172(sp)
 1449434:	20800017 	ldw	r2,0(r4)
 1449438:	21000104 	addi	r4,r4,4
 144943c:	d9012315 	stw	r4,1164(sp)
 1449440:	11400015 	stw	r5,0(r2)
 1449444:	003b4b06 	br	1448174 <__alt_data_end+0xfffe2974>
 1449448:	8029883a 	mov	r20,r16
 144944c:	dd811d83 	ldbu	r22,1142(sp)
 1449450:	dcc12315 	stw	r19,1164(sp)
 1449454:	0021883a 	mov	r16,zero
 1449458:	003c5f06 	br	14485d8 <__alt_data_end+0xfffe2dd8>
 144945c:	01005174 	movhi	r4,325
 1449460:	21028c04 	addi	r4,r4,2608
 1449464:	d9012615 	stw	r4,1176(sp)
 1449468:	1009883a 	mov	r4,r2
 144946c:	003ea006 	br	1448ef0 <__alt_data_end+0xfffe36f0>
 1449470:	002b883a 	mov	r21,zero
 1449474:	003fe206 	br	1449400 <__alt_data_end+0xfffe3c00>
 1449478:	d9412317 	ldw	r5,1164(sp)
 144947c:	b807883a 	mov	r3,r23
 1449480:	102f883a 	mov	r23,r2
 1449484:	2c000017 	ldw	r16,0(r5)
 1449488:	29000104 	addi	r4,r5,4
 144948c:	d9012315 	stw	r4,1164(sp)
 1449490:	80000416 	blt	r16,zero,14494a4 <___vfiprintf_internal_r+0x1410>
 1449494:	19800047 	ldb	r6,1(r3)
 1449498:	003b5f06 	br	1448218 <__alt_data_end+0xfffe2a18>
 144949c:	043fffc4 	movi	r16,-1
 14494a0:	003bef06 	br	1448460 <__alt_data_end+0xfffe2c60>
 14494a4:	043fffc4 	movi	r16,-1
 14494a8:	19800047 	ldb	r6,1(r3)
 14494ac:	003b5a06 	br	1448218 <__alt_data_end+0xfffe2a18>
 14494b0:	282b883a 	mov	r21,r5
 14494b4:	003cc706 	br	14487d4 <__alt_data_end+0xfffe2fd4>

014494b8 <__vfiprintf_internal>:
 14494b8:	2007883a 	mov	r3,r4
 14494bc:	01005174 	movhi	r4,325
 14494c0:	21059a04 	addi	r4,r4,5736
 14494c4:	21000017 	ldw	r4,0(r4)
 14494c8:	2805883a 	mov	r2,r5
 14494cc:	300f883a 	mov	r7,r6
 14494d0:	180b883a 	mov	r5,r3
 14494d4:	100d883a 	mov	r6,r2
 14494d8:	14480941 	jmpi	1448094 <___vfiprintf_internal_r>

014494dc <_write_r>:
 14494dc:	defffd04 	addi	sp,sp,-12
 14494e0:	dc000015 	stw	r16,0(sp)
 14494e4:	04005174 	movhi	r16,325
 14494e8:	dc400115 	stw	r17,4(sp)
 14494ec:	8408b804 	addi	r16,r16,8928
 14494f0:	2023883a 	mov	r17,r4
 14494f4:	2809883a 	mov	r4,r5
 14494f8:	300b883a 	mov	r5,r6
 14494fc:	380d883a 	mov	r6,r7
 1449500:	dfc00215 	stw	ra,8(sp)
 1449504:	80000015 	stw	zero,0(r16)
 1449508:	144dc5c0 	call	144dc5c <write>
 144950c:	00ffffc4 	movi	r3,-1
 1449510:	10c00526 	beq	r2,r3,1449528 <_write_r+0x4c>
 1449514:	dfc00217 	ldw	ra,8(sp)
 1449518:	dc400117 	ldw	r17,4(sp)
 144951c:	dc000017 	ldw	r16,0(sp)
 1449520:	dec00304 	addi	sp,sp,12
 1449524:	f800283a 	ret
 1449528:	80c00017 	ldw	r3,0(r16)
 144952c:	183ff926 	beq	r3,zero,1449514 <__alt_data_end+0xfffe3d14>
 1449530:	88c00015 	stw	r3,0(r17)
 1449534:	003ff706 	br	1449514 <__alt_data_end+0xfffe3d14>

01449538 <_close_r>:
 1449538:	defffd04 	addi	sp,sp,-12
 144953c:	dc000015 	stw	r16,0(sp)
 1449540:	04005174 	movhi	r16,325
 1449544:	dc400115 	stw	r17,4(sp)
 1449548:	8408b804 	addi	r16,r16,8928
 144954c:	2023883a 	mov	r17,r4
 1449550:	2809883a 	mov	r4,r5
 1449554:	dfc00215 	stw	ra,8(sp)
 1449558:	80000015 	stw	zero,0(r16)
 144955c:	144d3980 	call	144d398 <close>
 1449560:	00ffffc4 	movi	r3,-1
 1449564:	10c00526 	beq	r2,r3,144957c <_close_r+0x44>
 1449568:	dfc00217 	ldw	ra,8(sp)
 144956c:	dc400117 	ldw	r17,4(sp)
 1449570:	dc000017 	ldw	r16,0(sp)
 1449574:	dec00304 	addi	sp,sp,12
 1449578:	f800283a 	ret
 144957c:	80c00017 	ldw	r3,0(r16)
 1449580:	183ff926 	beq	r3,zero,1449568 <__alt_data_end+0xfffe3d68>
 1449584:	88c00015 	stw	r3,0(r17)
 1449588:	003ff706 	br	1449568 <__alt_data_end+0xfffe3d68>

0144958c <_calloc_r>:
 144958c:	defffe04 	addi	sp,sp,-8
 1449590:	dc000015 	stw	r16,0(sp)
 1449594:	2021883a 	mov	r16,r4
 1449598:	2809883a 	mov	r4,r5
 144959c:	300b883a 	mov	r5,r6
 14495a0:	dfc00115 	stw	ra,4(sp)
 14495a4:	1440a480 	call	1440a48 <__mulsi3>
 14495a8:	8009883a 	mov	r4,r16
 14495ac:	100b883a 	mov	r5,r2
 14495b0:	1445aa80 	call	1445aa8 <_malloc_r>
 14495b4:	1021883a 	mov	r16,r2
 14495b8:	10002826 	beq	r2,zero,144965c <_calloc_r+0xd0>
 14495bc:	11bfff17 	ldw	r6,-4(r2)
 14495c0:	00bfff04 	movi	r2,-4
 14495c4:	00c00904 	movi	r3,36
 14495c8:	308c703a 	and	r6,r6,r2
 14495cc:	308d883a 	add	r6,r6,r2
 14495d0:	19801436 	bltu	r3,r6,1449624 <_calloc_r+0x98>
 14495d4:	008004c4 	movi	r2,19
 14495d8:	11800936 	bltu	r2,r6,1449600 <_calloc_r+0x74>
 14495dc:	8005883a 	mov	r2,r16
 14495e0:	10000015 	stw	zero,0(r2)
 14495e4:	10000115 	stw	zero,4(r2)
 14495e8:	10000215 	stw	zero,8(r2)
 14495ec:	8005883a 	mov	r2,r16
 14495f0:	dfc00117 	ldw	ra,4(sp)
 14495f4:	dc000017 	ldw	r16,0(sp)
 14495f8:	dec00204 	addi	sp,sp,8
 14495fc:	f800283a 	ret
 1449600:	80000015 	stw	zero,0(r16)
 1449604:	80000115 	stw	zero,4(r16)
 1449608:	008006c4 	movi	r2,27
 144960c:	11800d2e 	bgeu	r2,r6,1449644 <_calloc_r+0xb8>
 1449610:	80000215 	stw	zero,8(r16)
 1449614:	80000315 	stw	zero,12(r16)
 1449618:	30c00c26 	beq	r6,r3,144964c <_calloc_r+0xc0>
 144961c:	80800404 	addi	r2,r16,16
 1449620:	003fef06 	br	14495e0 <__alt_data_end+0xfffe3de0>
 1449624:	8009883a 	mov	r4,r16
 1449628:	000b883a 	mov	r5,zero
 144962c:	14465cc0 	call	14465cc <memset>
 1449630:	8005883a 	mov	r2,r16
 1449634:	dfc00117 	ldw	ra,4(sp)
 1449638:	dc000017 	ldw	r16,0(sp)
 144963c:	dec00204 	addi	sp,sp,8
 1449640:	f800283a 	ret
 1449644:	80800204 	addi	r2,r16,8
 1449648:	003fe506 	br	14495e0 <__alt_data_end+0xfffe3de0>
 144964c:	80000415 	stw	zero,16(r16)
 1449650:	80800604 	addi	r2,r16,24
 1449654:	80000515 	stw	zero,20(r16)
 1449658:	003fe106 	br	14495e0 <__alt_data_end+0xfffe3de0>
 144965c:	0005883a 	mov	r2,zero
 1449660:	003fe306 	br	14495f0 <__alt_data_end+0xfffe3df0>

01449664 <_fclose_r>:
 1449664:	28003226 	beq	r5,zero,1449730 <_fclose_r+0xcc>
 1449668:	defffc04 	addi	sp,sp,-16
 144966c:	dc400115 	stw	r17,4(sp)
 1449670:	2023883a 	mov	r17,r4
 1449674:	dc000015 	stw	r16,0(sp)
 1449678:	dfc00315 	stw	ra,12(sp)
 144967c:	dc800215 	stw	r18,8(sp)
 1449680:	2821883a 	mov	r16,r5
 1449684:	1444da80 	call	1444da8 <__sfp_lock_acquire>
 1449688:	88000226 	beq	r17,zero,1449694 <_fclose_r+0x30>
 144968c:	88800e17 	ldw	r2,56(r17)
 1449690:	10002926 	beq	r2,zero,1449738 <_fclose_r+0xd4>
 1449694:	8080030f 	ldh	r2,12(r16)
 1449698:	10002226 	beq	r2,zero,1449724 <_fclose_r+0xc0>
 144969c:	8809883a 	mov	r4,r17
 14496a0:	800b883a 	mov	r5,r16
 14496a4:	14447dc0 	call	14447dc <_fflush_r>
 14496a8:	1025883a 	mov	r18,r2
 14496ac:	80800b17 	ldw	r2,44(r16)
 14496b0:	10000426 	beq	r2,zero,14496c4 <_fclose_r+0x60>
 14496b4:	81400717 	ldw	r5,28(r16)
 14496b8:	8809883a 	mov	r4,r17
 14496bc:	103ee83a 	callr	r2
 14496c0:	10002616 	blt	r2,zero,144975c <_fclose_r+0xf8>
 14496c4:	8080030b 	ldhu	r2,12(r16)
 14496c8:	1080200c 	andi	r2,r2,128
 14496cc:	10001f1e 	bne	r2,zero,144974c <_fclose_r+0xe8>
 14496d0:	81400c17 	ldw	r5,48(r16)
 14496d4:	28000526 	beq	r5,zero,14496ec <_fclose_r+0x88>
 14496d8:	80801004 	addi	r2,r16,64
 14496dc:	28800226 	beq	r5,r2,14496e8 <_fclose_r+0x84>
 14496e0:	8809883a 	mov	r4,r17
 14496e4:	1444f0c0 	call	1444f0c <_free_r>
 14496e8:	80000c15 	stw	zero,48(r16)
 14496ec:	81401117 	ldw	r5,68(r16)
 14496f0:	28000326 	beq	r5,zero,1449700 <_fclose_r+0x9c>
 14496f4:	8809883a 	mov	r4,r17
 14496f8:	1444f0c0 	call	1444f0c <_free_r>
 14496fc:	80001115 	stw	zero,68(r16)
 1449700:	8000030d 	sth	zero,12(r16)
 1449704:	1444dac0 	call	1444dac <__sfp_lock_release>
 1449708:	9005883a 	mov	r2,r18
 144970c:	dfc00317 	ldw	ra,12(sp)
 1449710:	dc800217 	ldw	r18,8(sp)
 1449714:	dc400117 	ldw	r17,4(sp)
 1449718:	dc000017 	ldw	r16,0(sp)
 144971c:	dec00404 	addi	sp,sp,16
 1449720:	f800283a 	ret
 1449724:	1444dac0 	call	1444dac <__sfp_lock_release>
 1449728:	0005883a 	mov	r2,zero
 144972c:	003ff706 	br	144970c <__alt_data_end+0xfffe3f0c>
 1449730:	0005883a 	mov	r2,zero
 1449734:	f800283a 	ret
 1449738:	8809883a 	mov	r4,r17
 144973c:	1444d980 	call	1444d98 <__sinit>
 1449740:	8080030f 	ldh	r2,12(r16)
 1449744:	103fd51e 	bne	r2,zero,144969c <__alt_data_end+0xfffe3e9c>
 1449748:	003ff606 	br	1449724 <__alt_data_end+0xfffe3f24>
 144974c:	81400417 	ldw	r5,16(r16)
 1449750:	8809883a 	mov	r4,r17
 1449754:	1444f0c0 	call	1444f0c <_free_r>
 1449758:	003fdd06 	br	14496d0 <__alt_data_end+0xfffe3ed0>
 144975c:	04bfffc4 	movi	r18,-1
 1449760:	003fd806 	br	14496c4 <__alt_data_end+0xfffe3ec4>

01449764 <fclose>:
 1449764:	00805174 	movhi	r2,325
 1449768:	10859a04 	addi	r2,r2,5736
 144976c:	200b883a 	mov	r5,r4
 1449770:	11000017 	ldw	r4,0(r2)
 1449774:	14496641 	jmpi	1449664 <_fclose_r>

01449778 <_fputwc_r>:
 1449778:	3080030b 	ldhu	r2,12(r6)
 144977c:	defff804 	addi	sp,sp,-32
 1449780:	dcc00415 	stw	r19,16(sp)
 1449784:	dc800315 	stw	r18,12(sp)
 1449788:	dc000115 	stw	r16,4(sp)
 144978c:	dfc00715 	stw	ra,28(sp)
 1449790:	dd400615 	stw	r21,24(sp)
 1449794:	dd000515 	stw	r20,20(sp)
 1449798:	dc400215 	stw	r17,8(sp)
 144979c:	10c8000c 	andi	r3,r2,8192
 14497a0:	3021883a 	mov	r16,r6
 14497a4:	2027883a 	mov	r19,r4
 14497a8:	2825883a 	mov	r18,r5
 14497ac:	1800051e 	bne	r3,zero,14497c4 <_fputwc_r+0x4c>
 14497b0:	30c01917 	ldw	r3,100(r6)
 14497b4:	10880014 	ori	r2,r2,8192
 14497b8:	3080030d 	sth	r2,12(r6)
 14497bc:	18880014 	ori	r2,r3,8192
 14497c0:	30801915 	stw	r2,100(r6)
 14497c4:	14458980 	call	1445898 <__locale_mb_cur_max>
 14497c8:	00c00044 	movi	r3,1
 14497cc:	10c03e26 	beq	r2,r3,14498c8 <_fputwc_r+0x150>
 14497d0:	9809883a 	mov	r4,r19
 14497d4:	d80b883a 	mov	r5,sp
 14497d8:	900d883a 	mov	r6,r18
 14497dc:	81c01704 	addi	r7,r16,92
 14497e0:	1449c280 	call	1449c28 <_wcrtomb_r>
 14497e4:	1029883a 	mov	r20,r2
 14497e8:	00bfffc4 	movi	r2,-1
 14497ec:	a0802026 	beq	r20,r2,1449870 <_fputwc_r+0xf8>
 14497f0:	d9400003 	ldbu	r5,0(sp)
 14497f4:	a0001c26 	beq	r20,zero,1449868 <_fputwc_r+0xf0>
 14497f8:	0023883a 	mov	r17,zero
 14497fc:	05400284 	movi	r21,10
 1449800:	00000906 	br	1449828 <_fputwc_r+0xb0>
 1449804:	80800017 	ldw	r2,0(r16)
 1449808:	11400005 	stb	r5,0(r2)
 144980c:	80c00017 	ldw	r3,0(r16)
 1449810:	18c00044 	addi	r3,r3,1
 1449814:	80c00015 	stw	r3,0(r16)
 1449818:	8c400044 	addi	r17,r17,1
 144981c:	dc45883a 	add	r2,sp,r17
 1449820:	8d00112e 	bgeu	r17,r20,1449868 <_fputwc_r+0xf0>
 1449824:	11400003 	ldbu	r5,0(r2)
 1449828:	80c00217 	ldw	r3,8(r16)
 144982c:	18ffffc4 	addi	r3,r3,-1
 1449830:	80c00215 	stw	r3,8(r16)
 1449834:	183ff30e 	bge	r3,zero,1449804 <__alt_data_end+0xfffe4004>
 1449838:	80800617 	ldw	r2,24(r16)
 144983c:	18801916 	blt	r3,r2,14498a4 <_fputwc_r+0x12c>
 1449840:	80800017 	ldw	r2,0(r16)
 1449844:	11400005 	stb	r5,0(r2)
 1449848:	80800017 	ldw	r2,0(r16)
 144984c:	10c00003 	ldbu	r3,0(r2)
 1449850:	10800044 	addi	r2,r2,1
 1449854:	1d402326 	beq	r3,r21,14498e4 <_fputwc_r+0x16c>
 1449858:	80800015 	stw	r2,0(r16)
 144985c:	8c400044 	addi	r17,r17,1
 1449860:	dc45883a 	add	r2,sp,r17
 1449864:	8d3fef36 	bltu	r17,r20,1449824 <__alt_data_end+0xfffe4024>
 1449868:	9005883a 	mov	r2,r18
 144986c:	00000406 	br	1449880 <_fputwc_r+0x108>
 1449870:	80c0030b 	ldhu	r3,12(r16)
 1449874:	a005883a 	mov	r2,r20
 1449878:	18c01014 	ori	r3,r3,64
 144987c:	80c0030d 	sth	r3,12(r16)
 1449880:	dfc00717 	ldw	ra,28(sp)
 1449884:	dd400617 	ldw	r21,24(sp)
 1449888:	dd000517 	ldw	r20,20(sp)
 144988c:	dcc00417 	ldw	r19,16(sp)
 1449890:	dc800317 	ldw	r18,12(sp)
 1449894:	dc400217 	ldw	r17,8(sp)
 1449898:	dc000117 	ldw	r16,4(sp)
 144989c:	dec00804 	addi	sp,sp,32
 14498a0:	f800283a 	ret
 14498a4:	9809883a 	mov	r4,r19
 14498a8:	29403fcc 	andi	r5,r5,255
 14498ac:	800d883a 	mov	r6,r16
 14498b0:	1449ab80 	call	1449ab8 <__swbuf_r>
 14498b4:	10bfffe0 	cmpeqi	r2,r2,-1
 14498b8:	10803fcc 	andi	r2,r2,255
 14498bc:	103fd626 	beq	r2,zero,1449818 <__alt_data_end+0xfffe4018>
 14498c0:	00bfffc4 	movi	r2,-1
 14498c4:	003fee06 	br	1449880 <__alt_data_end+0xfffe4080>
 14498c8:	90ffffc4 	addi	r3,r18,-1
 14498cc:	01003f84 	movi	r4,254
 14498d0:	20ffbf36 	bltu	r4,r3,14497d0 <__alt_data_end+0xfffe3fd0>
 14498d4:	900b883a 	mov	r5,r18
 14498d8:	dc800005 	stb	r18,0(sp)
 14498dc:	1029883a 	mov	r20,r2
 14498e0:	003fc506 	br	14497f8 <__alt_data_end+0xfffe3ff8>
 14498e4:	9809883a 	mov	r4,r19
 14498e8:	a80b883a 	mov	r5,r21
 14498ec:	800d883a 	mov	r6,r16
 14498f0:	1449ab80 	call	1449ab8 <__swbuf_r>
 14498f4:	10bfffe0 	cmpeqi	r2,r2,-1
 14498f8:	003fef06 	br	14498b8 <__alt_data_end+0xfffe40b8>

014498fc <fputwc>:
 14498fc:	defffc04 	addi	sp,sp,-16
 1449900:	dc000115 	stw	r16,4(sp)
 1449904:	04005174 	movhi	r16,325
 1449908:	84059a04 	addi	r16,r16,5736
 144990c:	dc400215 	stw	r17,8(sp)
 1449910:	2023883a 	mov	r17,r4
 1449914:	81000017 	ldw	r4,0(r16)
 1449918:	dfc00315 	stw	ra,12(sp)
 144991c:	280d883a 	mov	r6,r5
 1449920:	20000626 	beq	r4,zero,144993c <fputwc+0x40>
 1449924:	20800e17 	ldw	r2,56(r4)
 1449928:	1000041e 	bne	r2,zero,144993c <fputwc+0x40>
 144992c:	d9400015 	stw	r5,0(sp)
 1449930:	1444d980 	call	1444d98 <__sinit>
 1449934:	81000017 	ldw	r4,0(r16)
 1449938:	d9800017 	ldw	r6,0(sp)
 144993c:	880b883a 	mov	r5,r17
 1449940:	dfc00317 	ldw	ra,12(sp)
 1449944:	dc400217 	ldw	r17,8(sp)
 1449948:	dc000117 	ldw	r16,4(sp)
 144994c:	dec00404 	addi	sp,sp,16
 1449950:	14497781 	jmpi	1449778 <_fputwc_r>

01449954 <_fstat_r>:
 1449954:	defffd04 	addi	sp,sp,-12
 1449958:	dc000015 	stw	r16,0(sp)
 144995c:	04005174 	movhi	r16,325
 1449960:	dc400115 	stw	r17,4(sp)
 1449964:	8408b804 	addi	r16,r16,8928
 1449968:	2023883a 	mov	r17,r4
 144996c:	2809883a 	mov	r4,r5
 1449970:	300b883a 	mov	r5,r6
 1449974:	dfc00215 	stw	ra,8(sp)
 1449978:	80000015 	stw	zero,0(r16)
 144997c:	144d4ec0 	call	144d4ec <fstat>
 1449980:	00ffffc4 	movi	r3,-1
 1449984:	10c00526 	beq	r2,r3,144999c <_fstat_r+0x48>
 1449988:	dfc00217 	ldw	ra,8(sp)
 144998c:	dc400117 	ldw	r17,4(sp)
 1449990:	dc000017 	ldw	r16,0(sp)
 1449994:	dec00304 	addi	sp,sp,12
 1449998:	f800283a 	ret
 144999c:	80c00017 	ldw	r3,0(r16)
 14499a0:	183ff926 	beq	r3,zero,1449988 <__alt_data_end+0xfffe4188>
 14499a4:	88c00015 	stw	r3,0(r17)
 14499a8:	003ff706 	br	1449988 <__alt_data_end+0xfffe4188>

014499ac <_isatty_r>:
 14499ac:	defffd04 	addi	sp,sp,-12
 14499b0:	dc000015 	stw	r16,0(sp)
 14499b4:	04005174 	movhi	r16,325
 14499b8:	dc400115 	stw	r17,4(sp)
 14499bc:	8408b804 	addi	r16,r16,8928
 14499c0:	2023883a 	mov	r17,r4
 14499c4:	2809883a 	mov	r4,r5
 14499c8:	dfc00215 	stw	ra,8(sp)
 14499cc:	80000015 	stw	zero,0(r16)
 14499d0:	144d5f40 	call	144d5f4 <isatty>
 14499d4:	00ffffc4 	movi	r3,-1
 14499d8:	10c00526 	beq	r2,r3,14499f0 <_isatty_r+0x44>
 14499dc:	dfc00217 	ldw	ra,8(sp)
 14499e0:	dc400117 	ldw	r17,4(sp)
 14499e4:	dc000017 	ldw	r16,0(sp)
 14499e8:	dec00304 	addi	sp,sp,12
 14499ec:	f800283a 	ret
 14499f0:	80c00017 	ldw	r3,0(r16)
 14499f4:	183ff926 	beq	r3,zero,14499dc <__alt_data_end+0xfffe41dc>
 14499f8:	88c00015 	stw	r3,0(r17)
 14499fc:	003ff706 	br	14499dc <__alt_data_end+0xfffe41dc>

01449a00 <_lseek_r>:
 1449a00:	defffd04 	addi	sp,sp,-12
 1449a04:	dc000015 	stw	r16,0(sp)
 1449a08:	04005174 	movhi	r16,325
 1449a0c:	dc400115 	stw	r17,4(sp)
 1449a10:	8408b804 	addi	r16,r16,8928
 1449a14:	2023883a 	mov	r17,r4
 1449a18:	2809883a 	mov	r4,r5
 1449a1c:	300b883a 	mov	r5,r6
 1449a20:	380d883a 	mov	r6,r7
 1449a24:	dfc00215 	stw	ra,8(sp)
 1449a28:	80000015 	stw	zero,0(r16)
 1449a2c:	144d7d40 	call	144d7d4 <lseek>
 1449a30:	00ffffc4 	movi	r3,-1
 1449a34:	10c00526 	beq	r2,r3,1449a4c <_lseek_r+0x4c>
 1449a38:	dfc00217 	ldw	ra,8(sp)
 1449a3c:	dc400117 	ldw	r17,4(sp)
 1449a40:	dc000017 	ldw	r16,0(sp)
 1449a44:	dec00304 	addi	sp,sp,12
 1449a48:	f800283a 	ret
 1449a4c:	80c00017 	ldw	r3,0(r16)
 1449a50:	183ff926 	beq	r3,zero,1449a38 <__alt_data_end+0xfffe4238>
 1449a54:	88c00015 	stw	r3,0(r17)
 1449a58:	003ff706 	br	1449a38 <__alt_data_end+0xfffe4238>

01449a5c <_read_r>:
 1449a5c:	defffd04 	addi	sp,sp,-12
 1449a60:	dc000015 	stw	r16,0(sp)
 1449a64:	04005174 	movhi	r16,325
 1449a68:	dc400115 	stw	r17,4(sp)
 1449a6c:	8408b804 	addi	r16,r16,8928
 1449a70:	2023883a 	mov	r17,r4
 1449a74:	2809883a 	mov	r4,r5
 1449a78:	300b883a 	mov	r5,r6
 1449a7c:	380d883a 	mov	r6,r7
 1449a80:	dfc00215 	stw	ra,8(sp)
 1449a84:	80000015 	stw	zero,0(r16)
 1449a88:	144d9a80 	call	144d9a8 <read>
 1449a8c:	00ffffc4 	movi	r3,-1
 1449a90:	10c00526 	beq	r2,r3,1449aa8 <_read_r+0x4c>
 1449a94:	dfc00217 	ldw	ra,8(sp)
 1449a98:	dc400117 	ldw	r17,4(sp)
 1449a9c:	dc000017 	ldw	r16,0(sp)
 1449aa0:	dec00304 	addi	sp,sp,12
 1449aa4:	f800283a 	ret
 1449aa8:	80c00017 	ldw	r3,0(r16)
 1449aac:	183ff926 	beq	r3,zero,1449a94 <__alt_data_end+0xfffe4294>
 1449ab0:	88c00015 	stw	r3,0(r17)
 1449ab4:	003ff706 	br	1449a94 <__alt_data_end+0xfffe4294>

01449ab8 <__swbuf_r>:
 1449ab8:	defffc04 	addi	sp,sp,-16
 1449abc:	dc800215 	stw	r18,8(sp)
 1449ac0:	dc400115 	stw	r17,4(sp)
 1449ac4:	dc000015 	stw	r16,0(sp)
 1449ac8:	dfc00315 	stw	ra,12(sp)
 1449acc:	2025883a 	mov	r18,r4
 1449ad0:	2823883a 	mov	r17,r5
 1449ad4:	3021883a 	mov	r16,r6
 1449ad8:	20000226 	beq	r4,zero,1449ae4 <__swbuf_r+0x2c>
 1449adc:	20800e17 	ldw	r2,56(r4)
 1449ae0:	10004126 	beq	r2,zero,1449be8 <__swbuf_r+0x130>
 1449ae4:	80c00617 	ldw	r3,24(r16)
 1449ae8:	8180030b 	ldhu	r6,12(r16)
 1449aec:	80c00215 	stw	r3,8(r16)
 1449af0:	30c0020c 	andi	r3,r6,8
 1449af4:	18003526 	beq	r3,zero,1449bcc <__swbuf_r+0x114>
 1449af8:	80c00417 	ldw	r3,16(r16)
 1449afc:	18003326 	beq	r3,zero,1449bcc <__swbuf_r+0x114>
 1449b00:	3088000c 	andi	r2,r6,8192
 1449b04:	8c403fcc 	andi	r17,r17,255
 1449b08:	10001726 	beq	r2,zero,1449b68 <__swbuf_r+0xb0>
 1449b0c:	80800017 	ldw	r2,0(r16)
 1449b10:	81000517 	ldw	r4,20(r16)
 1449b14:	10c7c83a 	sub	r3,r2,r3
 1449b18:	19001d0e 	bge	r3,r4,1449b90 <__swbuf_r+0xd8>
 1449b1c:	18c00044 	addi	r3,r3,1
 1449b20:	81400217 	ldw	r5,8(r16)
 1449b24:	11000044 	addi	r4,r2,1
 1449b28:	81000015 	stw	r4,0(r16)
 1449b2c:	297fffc4 	addi	r5,r5,-1
 1449b30:	81400215 	stw	r5,8(r16)
 1449b34:	14400005 	stb	r17,0(r2)
 1449b38:	80800517 	ldw	r2,20(r16)
 1449b3c:	10c01d26 	beq	r2,r3,1449bb4 <__swbuf_r+0xfc>
 1449b40:	8080030b 	ldhu	r2,12(r16)
 1449b44:	1080004c 	andi	r2,r2,1
 1449b48:	1000181e 	bne	r2,zero,1449bac <__swbuf_r+0xf4>
 1449b4c:	8805883a 	mov	r2,r17
 1449b50:	dfc00317 	ldw	ra,12(sp)
 1449b54:	dc800217 	ldw	r18,8(sp)
 1449b58:	dc400117 	ldw	r17,4(sp)
 1449b5c:	dc000017 	ldw	r16,0(sp)
 1449b60:	dec00404 	addi	sp,sp,16
 1449b64:	f800283a 	ret
 1449b68:	81001917 	ldw	r4,100(r16)
 1449b6c:	00b7ffc4 	movi	r2,-8193
 1449b70:	31880014 	ori	r6,r6,8192
 1449b74:	2084703a 	and	r2,r4,r2
 1449b78:	80801915 	stw	r2,100(r16)
 1449b7c:	80800017 	ldw	r2,0(r16)
 1449b80:	81000517 	ldw	r4,20(r16)
 1449b84:	8180030d 	sth	r6,12(r16)
 1449b88:	10c7c83a 	sub	r3,r2,r3
 1449b8c:	193fe316 	blt	r3,r4,1449b1c <__alt_data_end+0xfffe431c>
 1449b90:	9009883a 	mov	r4,r18
 1449b94:	800b883a 	mov	r5,r16
 1449b98:	14447dc0 	call	14447dc <_fflush_r>
 1449b9c:	1000091e 	bne	r2,zero,1449bc4 <__swbuf_r+0x10c>
 1449ba0:	80800017 	ldw	r2,0(r16)
 1449ba4:	00c00044 	movi	r3,1
 1449ba8:	003fdd06 	br	1449b20 <__alt_data_end+0xfffe4320>
 1449bac:	00800284 	movi	r2,10
 1449bb0:	88bfe61e 	bne	r17,r2,1449b4c <__alt_data_end+0xfffe434c>
 1449bb4:	9009883a 	mov	r4,r18
 1449bb8:	800b883a 	mov	r5,r16
 1449bbc:	14447dc0 	call	14447dc <_fflush_r>
 1449bc0:	103fe226 	beq	r2,zero,1449b4c <__alt_data_end+0xfffe434c>
 1449bc4:	00bfffc4 	movi	r2,-1
 1449bc8:	003fe106 	br	1449b50 <__alt_data_end+0xfffe4350>
 1449bcc:	9009883a 	mov	r4,r18
 1449bd0:	800b883a 	mov	r5,r16
 1449bd4:	1442d5c0 	call	1442d5c <__swsetup_r>
 1449bd8:	1000051e 	bne	r2,zero,1449bf0 <__swbuf_r+0x138>
 1449bdc:	8180030b 	ldhu	r6,12(r16)
 1449be0:	80c00417 	ldw	r3,16(r16)
 1449be4:	003fc606 	br	1449b00 <__alt_data_end+0xfffe4300>
 1449be8:	1444d980 	call	1444d98 <__sinit>
 1449bec:	003fbd06 	br	1449ae4 <__alt_data_end+0xfffe42e4>
 1449bf0:	80c0030b 	ldhu	r3,12(r16)
 1449bf4:	00bfffc4 	movi	r2,-1
 1449bf8:	18c01014 	ori	r3,r3,64
 1449bfc:	80c0030d 	sth	r3,12(r16)
 1449c00:	00c00244 	movi	r3,9
 1449c04:	90c00015 	stw	r3,0(r18)
 1449c08:	003fd106 	br	1449b50 <__alt_data_end+0xfffe4350>

01449c0c <__swbuf>:
 1449c0c:	00c05174 	movhi	r3,325
 1449c10:	18c59a04 	addi	r3,r3,5736
 1449c14:	2005883a 	mov	r2,r4
 1449c18:	19000017 	ldw	r4,0(r3)
 1449c1c:	280d883a 	mov	r6,r5
 1449c20:	100b883a 	mov	r5,r2
 1449c24:	1449ab81 	jmpi	1449ab8 <__swbuf_r>

01449c28 <_wcrtomb_r>:
 1449c28:	defff604 	addi	sp,sp,-40
 1449c2c:	00805174 	movhi	r2,325
 1449c30:	dc800815 	stw	r18,32(sp)
 1449c34:	dc400715 	stw	r17,28(sp)
 1449c38:	dc000615 	stw	r16,24(sp)
 1449c3c:	10859e04 	addi	r2,r2,5752
 1449c40:	dfc00915 	stw	ra,36(sp)
 1449c44:	2021883a 	mov	r16,r4
 1449c48:	3823883a 	mov	r17,r7
 1449c4c:	14800017 	ldw	r18,0(r2)
 1449c50:	28001426 	beq	r5,zero,1449ca4 <_wcrtomb_r+0x7c>
 1449c54:	d9400415 	stw	r5,16(sp)
 1449c58:	d9800515 	stw	r6,20(sp)
 1449c5c:	144588c0 	call	144588c <__locale_charset>
 1449c60:	d9400417 	ldw	r5,16(sp)
 1449c64:	d9800517 	ldw	r6,20(sp)
 1449c68:	8009883a 	mov	r4,r16
 1449c6c:	dc400015 	stw	r17,0(sp)
 1449c70:	100f883a 	mov	r7,r2
 1449c74:	903ee83a 	callr	r18
 1449c78:	00ffffc4 	movi	r3,-1
 1449c7c:	10c0031e 	bne	r2,r3,1449c8c <_wcrtomb_r+0x64>
 1449c80:	88000015 	stw	zero,0(r17)
 1449c84:	00c02284 	movi	r3,138
 1449c88:	80c00015 	stw	r3,0(r16)
 1449c8c:	dfc00917 	ldw	ra,36(sp)
 1449c90:	dc800817 	ldw	r18,32(sp)
 1449c94:	dc400717 	ldw	r17,28(sp)
 1449c98:	dc000617 	ldw	r16,24(sp)
 1449c9c:	dec00a04 	addi	sp,sp,40
 1449ca0:	f800283a 	ret
 1449ca4:	144588c0 	call	144588c <__locale_charset>
 1449ca8:	8009883a 	mov	r4,r16
 1449cac:	dc400015 	stw	r17,0(sp)
 1449cb0:	d9400104 	addi	r5,sp,4
 1449cb4:	000d883a 	mov	r6,zero
 1449cb8:	100f883a 	mov	r7,r2
 1449cbc:	903ee83a 	callr	r18
 1449cc0:	003fed06 	br	1449c78 <__alt_data_end+0xfffe4478>

01449cc4 <wcrtomb>:
 1449cc4:	defff504 	addi	sp,sp,-44
 1449cc8:	dc400515 	stw	r17,20(sp)
 1449ccc:	dc000415 	stw	r16,16(sp)
 1449cd0:	dfc00a15 	stw	ra,40(sp)
 1449cd4:	dd400915 	stw	r21,36(sp)
 1449cd8:	dd000815 	stw	r20,32(sp)
 1449cdc:	dcc00715 	stw	r19,28(sp)
 1449ce0:	dc800615 	stw	r18,24(sp)
 1449ce4:	2021883a 	mov	r16,r4
 1449ce8:	3023883a 	mov	r17,r6
 1449cec:	20001d26 	beq	r4,zero,1449d64 <wcrtomb+0xa0>
 1449cf0:	04805174 	movhi	r18,325
 1449cf4:	94859a04 	addi	r18,r18,5736
 1449cf8:	00805174 	movhi	r2,325
 1449cfc:	95400017 	ldw	r21,0(r18)
 1449d00:	10859e04 	addi	r2,r2,5752
 1449d04:	15000017 	ldw	r20,0(r2)
 1449d08:	2827883a 	mov	r19,r5
 1449d0c:	144588c0 	call	144588c <__locale_charset>
 1449d10:	a809883a 	mov	r4,r21
 1449d14:	dc400015 	stw	r17,0(sp)
 1449d18:	800b883a 	mov	r5,r16
 1449d1c:	980d883a 	mov	r6,r19
 1449d20:	100f883a 	mov	r7,r2
 1449d24:	a03ee83a 	callr	r20
 1449d28:	00ffffc4 	movi	r3,-1
 1449d2c:	10c0041e 	bne	r2,r3,1449d40 <wcrtomb+0x7c>
 1449d30:	90c00017 	ldw	r3,0(r18)
 1449d34:	01002284 	movi	r4,138
 1449d38:	88000015 	stw	zero,0(r17)
 1449d3c:	19000015 	stw	r4,0(r3)
 1449d40:	dfc00a17 	ldw	ra,40(sp)
 1449d44:	dd400917 	ldw	r21,36(sp)
 1449d48:	dd000817 	ldw	r20,32(sp)
 1449d4c:	dcc00717 	ldw	r19,28(sp)
 1449d50:	dc800617 	ldw	r18,24(sp)
 1449d54:	dc400517 	ldw	r17,20(sp)
 1449d58:	dc000417 	ldw	r16,16(sp)
 1449d5c:	dec00b04 	addi	sp,sp,44
 1449d60:	f800283a 	ret
 1449d64:	04805174 	movhi	r18,325
 1449d68:	94859a04 	addi	r18,r18,5736
 1449d6c:	00805174 	movhi	r2,325
 1449d70:	94c00017 	ldw	r19,0(r18)
 1449d74:	10859e04 	addi	r2,r2,5752
 1449d78:	14000017 	ldw	r16,0(r2)
 1449d7c:	144588c0 	call	144588c <__locale_charset>
 1449d80:	9809883a 	mov	r4,r19
 1449d84:	dc400015 	stw	r17,0(sp)
 1449d88:	d9400104 	addi	r5,sp,4
 1449d8c:	000d883a 	mov	r6,zero
 1449d90:	100f883a 	mov	r7,r2
 1449d94:	803ee83a 	callr	r16
 1449d98:	003fe306 	br	1449d28 <__alt_data_end+0xfffe4528>

01449d9c <__ascii_wctomb>:
 1449d9c:	28000526 	beq	r5,zero,1449db4 <__ascii_wctomb+0x18>
 1449da0:	00803fc4 	movi	r2,255
 1449da4:	11800536 	bltu	r2,r6,1449dbc <__ascii_wctomb+0x20>
 1449da8:	29800005 	stb	r6,0(r5)
 1449dac:	00800044 	movi	r2,1
 1449db0:	f800283a 	ret
 1449db4:	0005883a 	mov	r2,zero
 1449db8:	f800283a 	ret
 1449dbc:	00802284 	movi	r2,138
 1449dc0:	20800015 	stw	r2,0(r4)
 1449dc4:	00bfffc4 	movi	r2,-1
 1449dc8:	f800283a 	ret

01449dcc <_wctomb_r>:
 1449dcc:	00805174 	movhi	r2,325
 1449dd0:	defff904 	addi	sp,sp,-28
 1449dd4:	10859e04 	addi	r2,r2,5752
 1449dd8:	dfc00615 	stw	ra,24(sp)
 1449ddc:	dc400515 	stw	r17,20(sp)
 1449de0:	dc000415 	stw	r16,16(sp)
 1449de4:	3823883a 	mov	r17,r7
 1449de8:	14000017 	ldw	r16,0(r2)
 1449dec:	d9000115 	stw	r4,4(sp)
 1449df0:	d9400215 	stw	r5,8(sp)
 1449df4:	d9800315 	stw	r6,12(sp)
 1449df8:	144588c0 	call	144588c <__locale_charset>
 1449dfc:	d9000117 	ldw	r4,4(sp)
 1449e00:	d9400217 	ldw	r5,8(sp)
 1449e04:	d9800317 	ldw	r6,12(sp)
 1449e08:	dc400015 	stw	r17,0(sp)
 1449e0c:	100f883a 	mov	r7,r2
 1449e10:	803ee83a 	callr	r16
 1449e14:	dfc00617 	ldw	ra,24(sp)
 1449e18:	dc400517 	ldw	r17,20(sp)
 1449e1c:	dc000417 	ldw	r16,16(sp)
 1449e20:	dec00704 	addi	sp,sp,28
 1449e24:	f800283a 	ret

01449e28 <__udivdi3>:
 1449e28:	defff504 	addi	sp,sp,-44
 1449e2c:	dcc00415 	stw	r19,16(sp)
 1449e30:	dc000115 	stw	r16,4(sp)
 1449e34:	dfc00a15 	stw	ra,40(sp)
 1449e38:	df000915 	stw	fp,36(sp)
 1449e3c:	ddc00815 	stw	r23,32(sp)
 1449e40:	dd800715 	stw	r22,28(sp)
 1449e44:	dd400615 	stw	r21,24(sp)
 1449e48:	dd000515 	stw	r20,20(sp)
 1449e4c:	dc800315 	stw	r18,12(sp)
 1449e50:	dc400215 	stw	r17,8(sp)
 1449e54:	2027883a 	mov	r19,r4
 1449e58:	2821883a 	mov	r16,r5
 1449e5c:	3800471e 	bne	r7,zero,1449f7c <__udivdi3+0x154>
 1449e60:	3025883a 	mov	r18,r6
 1449e64:	2023883a 	mov	r17,r4
 1449e68:	2980592e 	bgeu	r5,r6,1449fd0 <__udivdi3+0x1a8>
 1449e6c:	00bfffd4 	movui	r2,65535
 1449e70:	2829883a 	mov	r20,r5
 1449e74:	1180b236 	bltu	r2,r6,144a140 <__udivdi3+0x318>
 1449e78:	00803fc4 	movi	r2,255
 1449e7c:	1181622e 	bgeu	r2,r6,144a408 <__udivdi3+0x5e0>
 1449e80:	00800204 	movi	r2,8
 1449e84:	1007883a 	mov	r3,r2
 1449e88:	3084d83a 	srl	r2,r6,r2
 1449e8c:	01005174 	movhi	r4,325
 1449e90:	2101e104 	addi	r4,r4,1924
 1449e94:	2085883a 	add	r2,r4,r2
 1449e98:	11000003 	ldbu	r4,0(r2)
 1449e9c:	20c9883a 	add	r4,r4,r3
 1449ea0:	00c00804 	movi	r3,32
 1449ea4:	1907c83a 	sub	r3,r3,r4
 1449ea8:	18000526 	beq	r3,zero,1449ec0 <__udivdi3+0x98>
 1449eac:	80e0983a 	sll	r16,r16,r3
 1449eb0:	9908d83a 	srl	r4,r19,r4
 1449eb4:	30e4983a 	sll	r18,r6,r3
 1449eb8:	98e2983a 	sll	r17,r19,r3
 1449ebc:	8128b03a 	or	r20,r16,r4
 1449ec0:	902ad43a 	srli	r21,r18,16
 1449ec4:	a009883a 	mov	r4,r20
 1449ec8:	95bfffcc 	andi	r22,r18,65535
 1449ecc:	a80b883a 	mov	r5,r21
 1449ed0:	144aba80 	call	144aba8 <__umodsi3>
 1449ed4:	a009883a 	mov	r4,r20
 1449ed8:	a80b883a 	mov	r5,r21
 1449edc:	102f883a 	mov	r23,r2
 1449ee0:	144aba00 	call	144aba0 <__udivsi3>
 1449ee4:	1009883a 	mov	r4,r2
 1449ee8:	b00b883a 	mov	r5,r22
 1449eec:	1021883a 	mov	r16,r2
 1449ef0:	1440a480 	call	1440a48 <__mulsi3>
 1449ef4:	b82e943a 	slli	r23,r23,16
 1449ef8:	8808d43a 	srli	r4,r17,16
 1449efc:	b906b03a 	or	r3,r23,r4
 1449f00:	1880052e 	bgeu	r3,r2,1449f18 <__udivdi3+0xf0>
 1449f04:	1c87883a 	add	r3,r3,r18
 1449f08:	813fffc4 	addi	r4,r16,-1
 1449f0c:	1c800136 	bltu	r3,r18,1449f14 <__udivdi3+0xec>
 1449f10:	18815236 	bltu	r3,r2,144a45c <__udivdi3+0x634>
 1449f14:	2021883a 	mov	r16,r4
 1449f18:	18a7c83a 	sub	r19,r3,r2
 1449f1c:	9809883a 	mov	r4,r19
 1449f20:	a80b883a 	mov	r5,r21
 1449f24:	144aba80 	call	144aba8 <__umodsi3>
 1449f28:	1029883a 	mov	r20,r2
 1449f2c:	9809883a 	mov	r4,r19
 1449f30:	a80b883a 	mov	r5,r21
 1449f34:	a028943a 	slli	r20,r20,16
 1449f38:	144aba00 	call	144aba0 <__udivsi3>
 1449f3c:	1009883a 	mov	r4,r2
 1449f40:	b00b883a 	mov	r5,r22
 1449f44:	8c7fffcc 	andi	r17,r17,65535
 1449f48:	1027883a 	mov	r19,r2
 1449f4c:	a462b03a 	or	r17,r20,r17
 1449f50:	1440a480 	call	1440a48 <__mulsi3>
 1449f54:	8880052e 	bgeu	r17,r2,1449f6c <__udivdi3+0x144>
 1449f58:	8ca3883a 	add	r17,r17,r18
 1449f5c:	98ffffc4 	addi	r3,r19,-1
 1449f60:	8c811036 	bltu	r17,r18,144a3a4 <__udivdi3+0x57c>
 1449f64:	88810f2e 	bgeu	r17,r2,144a3a4 <__udivdi3+0x57c>
 1449f68:	9cffff84 	addi	r19,r19,-2
 1449f6c:	8020943a 	slli	r16,r16,16
 1449f70:	0007883a 	mov	r3,zero
 1449f74:	9c04b03a 	or	r2,r19,r16
 1449f78:	00006006 	br	144a0fc <__udivdi3+0x2d4>
 1449f7c:	29c05d36 	bltu	r5,r7,144a0f4 <__udivdi3+0x2cc>
 1449f80:	00bfffd4 	movui	r2,65535
 1449f84:	11c0692e 	bgeu	r2,r7,144a12c <__udivdi3+0x304>
 1449f88:	00804034 	movhi	r2,256
 1449f8c:	10bfffc4 	addi	r2,r2,-1
 1449f90:	11c10e2e 	bgeu	r2,r7,144a3cc <__udivdi3+0x5a4>
 1449f94:	01400604 	movi	r5,24
 1449f98:	2811883a 	mov	r8,r5
 1449f9c:	394ad83a 	srl	r5,r7,r5
 1449fa0:	00805174 	movhi	r2,325
 1449fa4:	1081e104 	addi	r2,r2,1924
 1449fa8:	114b883a 	add	r5,r2,r5
 1449fac:	29400003 	ldbu	r5,0(r5)
 1449fb0:	00c00804 	movi	r3,32
 1449fb4:	2a0b883a 	add	r5,r5,r8
 1449fb8:	196fc83a 	sub	r23,r3,r5
 1449fbc:	b8006b1e 	bne	r23,zero,144a16c <__udivdi3+0x344>
 1449fc0:	3c011436 	bltu	r7,r16,144a414 <__udivdi3+0x5ec>
 1449fc4:	9985403a 	cmpgeu	r2,r19,r6
 1449fc8:	0007883a 	mov	r3,zero
 1449fcc:	00004b06 	br	144a0fc <__udivdi3+0x2d4>
 1449fd0:	3000041e 	bne	r6,zero,1449fe4 <__udivdi3+0x1bc>
 1449fd4:	01000044 	movi	r4,1
 1449fd8:	000b883a 	mov	r5,zero
 1449fdc:	144aba00 	call	144aba0 <__udivsi3>
 1449fe0:	1025883a 	mov	r18,r2
 1449fe4:	00bfffd4 	movui	r2,65535
 1449fe8:	14805b2e 	bgeu	r2,r18,144a158 <__udivdi3+0x330>
 1449fec:	00804034 	movhi	r2,256
 1449ff0:	10bfffc4 	addi	r2,r2,-1
 1449ff4:	1480fe2e 	bgeu	r2,r18,144a3f0 <__udivdi3+0x5c8>
 1449ff8:	00800604 	movi	r2,24
 1449ffc:	1007883a 	mov	r3,r2
 144a000:	9084d83a 	srl	r2,r18,r2
 144a004:	01005174 	movhi	r4,325
 144a008:	2101e104 	addi	r4,r4,1924
 144a00c:	2085883a 	add	r2,r4,r2
 144a010:	11800003 	ldbu	r6,0(r2)
 144a014:	01c00804 	movi	r7,32
 144a018:	30c7883a 	add	r3,r6,r3
 144a01c:	38cfc83a 	sub	r7,r7,r3
 144a020:	3800a71e 	bne	r7,zero,144a2c0 <__udivdi3+0x498>
 144a024:	9028d43a 	srli	r20,r18,16
 144a028:	84a1c83a 	sub	r16,r16,r18
 144a02c:	957fffcc 	andi	r21,r18,65535
 144a030:	00c00044 	movi	r3,1
 144a034:	8009883a 	mov	r4,r16
 144a038:	a00b883a 	mov	r5,r20
 144a03c:	d8c00015 	stw	r3,0(sp)
 144a040:	144aba80 	call	144aba8 <__umodsi3>
 144a044:	8009883a 	mov	r4,r16
 144a048:	a00b883a 	mov	r5,r20
 144a04c:	102d883a 	mov	r22,r2
 144a050:	144aba00 	call	144aba0 <__udivsi3>
 144a054:	1009883a 	mov	r4,r2
 144a058:	a80b883a 	mov	r5,r21
 144a05c:	1021883a 	mov	r16,r2
 144a060:	1440a480 	call	1440a48 <__mulsi3>
 144a064:	b02c943a 	slli	r22,r22,16
 144a068:	880ed43a 	srli	r7,r17,16
 144a06c:	d8c00017 	ldw	r3,0(sp)
 144a070:	b1ccb03a 	or	r6,r22,r7
 144a074:	3080052e 	bgeu	r6,r2,144a08c <__udivdi3+0x264>
 144a078:	348d883a 	add	r6,r6,r18
 144a07c:	813fffc4 	addi	r4,r16,-1
 144a080:	34800136 	bltu	r6,r18,144a088 <__udivdi3+0x260>
 144a084:	3080f236 	bltu	r6,r2,144a450 <__udivdi3+0x628>
 144a088:	2021883a 	mov	r16,r4
 144a08c:	30a7c83a 	sub	r19,r6,r2
 144a090:	9809883a 	mov	r4,r19
 144a094:	a00b883a 	mov	r5,r20
 144a098:	d8c00015 	stw	r3,0(sp)
 144a09c:	144aba80 	call	144aba8 <__umodsi3>
 144a0a0:	102d883a 	mov	r22,r2
 144a0a4:	9809883a 	mov	r4,r19
 144a0a8:	a00b883a 	mov	r5,r20
 144a0ac:	b02c943a 	slli	r22,r22,16
 144a0b0:	144aba00 	call	144aba0 <__udivsi3>
 144a0b4:	1009883a 	mov	r4,r2
 144a0b8:	a80b883a 	mov	r5,r21
 144a0bc:	8c7fffcc 	andi	r17,r17,65535
 144a0c0:	1027883a 	mov	r19,r2
 144a0c4:	b462b03a 	or	r17,r22,r17
 144a0c8:	1440a480 	call	1440a48 <__mulsi3>
 144a0cc:	d8c00017 	ldw	r3,0(sp)
 144a0d0:	8880052e 	bgeu	r17,r2,144a0e8 <__udivdi3+0x2c0>
 144a0d4:	8ca3883a 	add	r17,r17,r18
 144a0d8:	993fffc4 	addi	r4,r19,-1
 144a0dc:	8c80af36 	bltu	r17,r18,144a39c <__udivdi3+0x574>
 144a0e0:	8880ae2e 	bgeu	r17,r2,144a39c <__udivdi3+0x574>
 144a0e4:	9cffff84 	addi	r19,r19,-2
 144a0e8:	8020943a 	slli	r16,r16,16
 144a0ec:	9c04b03a 	or	r2,r19,r16
 144a0f0:	00000206 	br	144a0fc <__udivdi3+0x2d4>
 144a0f4:	0007883a 	mov	r3,zero
 144a0f8:	0005883a 	mov	r2,zero
 144a0fc:	dfc00a17 	ldw	ra,40(sp)
 144a100:	df000917 	ldw	fp,36(sp)
 144a104:	ddc00817 	ldw	r23,32(sp)
 144a108:	dd800717 	ldw	r22,28(sp)
 144a10c:	dd400617 	ldw	r21,24(sp)
 144a110:	dd000517 	ldw	r20,20(sp)
 144a114:	dcc00417 	ldw	r19,16(sp)
 144a118:	dc800317 	ldw	r18,12(sp)
 144a11c:	dc400217 	ldw	r17,8(sp)
 144a120:	dc000117 	ldw	r16,4(sp)
 144a124:	dec00b04 	addi	sp,sp,44
 144a128:	f800283a 	ret
 144a12c:	00803fc4 	movi	r2,255
 144a130:	11c0a92e 	bgeu	r2,r7,144a3d8 <__udivdi3+0x5b0>
 144a134:	01400204 	movi	r5,8
 144a138:	2811883a 	mov	r8,r5
 144a13c:	003f9706 	br	1449f9c <__alt_data_end+0xfffe479c>
 144a140:	00804034 	movhi	r2,256
 144a144:	10bfffc4 	addi	r2,r2,-1
 144a148:	1180a62e 	bgeu	r2,r6,144a3e4 <__udivdi3+0x5bc>
 144a14c:	00800604 	movi	r2,24
 144a150:	1007883a 	mov	r3,r2
 144a154:	003f4c06 	br	1449e88 <__alt_data_end+0xfffe4688>
 144a158:	00803fc4 	movi	r2,255
 144a15c:	1480a72e 	bgeu	r2,r18,144a3fc <__udivdi3+0x5d4>
 144a160:	00800204 	movi	r2,8
 144a164:	1007883a 	mov	r3,r2
 144a168:	003fa506 	br	144a000 <__alt_data_end+0xfffe4800>
 144a16c:	3178d83a 	srl	fp,r6,r5
 144a170:	3dce983a 	sll	r7,r7,r23
 144a174:	8168d83a 	srl	r20,r16,r5
 144a178:	9950d83a 	srl	r8,r19,r5
 144a17c:	3f38b03a 	or	fp,r7,fp
 144a180:	e024d43a 	srli	r18,fp,16
 144a184:	85e0983a 	sll	r16,r16,r23
 144a188:	a009883a 	mov	r4,r20
 144a18c:	900b883a 	mov	r5,r18
 144a190:	8220b03a 	or	r16,r16,r8
 144a194:	35ea983a 	sll	r21,r6,r23
 144a198:	144aba80 	call	144aba8 <__umodsi3>
 144a19c:	a009883a 	mov	r4,r20
 144a1a0:	900b883a 	mov	r5,r18
 144a1a4:	1023883a 	mov	r17,r2
 144a1a8:	e5bfffcc 	andi	r22,fp,65535
 144a1ac:	144aba00 	call	144aba0 <__udivsi3>
 144a1b0:	1009883a 	mov	r4,r2
 144a1b4:	b00b883a 	mov	r5,r22
 144a1b8:	1029883a 	mov	r20,r2
 144a1bc:	1440a480 	call	1440a48 <__mulsi3>
 144a1c0:	8806943a 	slli	r3,r17,16
 144a1c4:	8014d43a 	srli	r10,r16,16
 144a1c8:	1a92b03a 	or	r9,r3,r10
 144a1cc:	4880042e 	bgeu	r9,r2,144a1e0 <__udivdi3+0x3b8>
 144a1d0:	4f13883a 	add	r9,r9,fp
 144a1d4:	a0ffffc4 	addi	r3,r20,-1
 144a1d8:	4f00952e 	bgeu	r9,fp,144a430 <__udivdi3+0x608>
 144a1dc:	1829883a 	mov	r20,r3
 144a1e0:	48a3c83a 	sub	r17,r9,r2
 144a1e4:	8809883a 	mov	r4,r17
 144a1e8:	900b883a 	mov	r5,r18
 144a1ec:	144aba80 	call	144aba8 <__umodsi3>
 144a1f0:	8809883a 	mov	r4,r17
 144a1f4:	900b883a 	mov	r5,r18
 144a1f8:	d8800015 	stw	r2,0(sp)
 144a1fc:	144aba00 	call	144aba0 <__udivsi3>
 144a200:	1009883a 	mov	r4,r2
 144a204:	b00b883a 	mov	r5,r22
 144a208:	1023883a 	mov	r17,r2
 144a20c:	1440a480 	call	1440a48 <__mulsi3>
 144a210:	d8c00017 	ldw	r3,0(sp)
 144a214:	823fffcc 	andi	r8,r16,65535
 144a218:	1806943a 	slli	r3,r3,16
 144a21c:	1a20b03a 	or	r16,r3,r8
 144a220:	8080042e 	bgeu	r16,r2,144a234 <__udivdi3+0x40c>
 144a224:	8721883a 	add	r16,r16,fp
 144a228:	88ffffc4 	addi	r3,r17,-1
 144a22c:	87007c2e 	bgeu	r16,fp,144a420 <__udivdi3+0x5f8>
 144a230:	1823883a 	mov	r17,r3
 144a234:	a028943a 	slli	r20,r20,16
 144a238:	acbfffcc 	andi	r18,r21,65535
 144a23c:	900b883a 	mov	r5,r18
 144a240:	8d28b03a 	or	r20,r17,r20
 144a244:	a022d43a 	srli	r17,r20,16
 144a248:	a5bfffcc 	andi	r22,r20,65535
 144a24c:	b009883a 	mov	r4,r22
 144a250:	a82ad43a 	srli	r21,r21,16
 144a254:	80a1c83a 	sub	r16,r16,r2
 144a258:	1440a480 	call	1440a48 <__mulsi3>
 144a25c:	8809883a 	mov	r4,r17
 144a260:	900b883a 	mov	r5,r18
 144a264:	1039883a 	mov	fp,r2
 144a268:	1440a480 	call	1440a48 <__mulsi3>
 144a26c:	8809883a 	mov	r4,r17
 144a270:	a80b883a 	mov	r5,r21
 144a274:	1025883a 	mov	r18,r2
 144a278:	1440a480 	call	1440a48 <__mulsi3>
 144a27c:	b009883a 	mov	r4,r22
 144a280:	a80b883a 	mov	r5,r21
 144a284:	1023883a 	mov	r17,r2
 144a288:	1440a480 	call	1440a48 <__mulsi3>
 144a28c:	e006d43a 	srli	r3,fp,16
 144a290:	9085883a 	add	r2,r18,r2
 144a294:	10c7883a 	add	r3,r2,r3
 144a298:	1c80022e 	bgeu	r3,r18,144a2a4 <__udivdi3+0x47c>
 144a29c:	00800074 	movhi	r2,1
 144a2a0:	88a3883a 	add	r17,r17,r2
 144a2a4:	1808d43a 	srli	r4,r3,16
 144a2a8:	8909883a 	add	r4,r17,r4
 144a2ac:	81004436 	bltu	r16,r4,144a3c0 <__udivdi3+0x598>
 144a2b0:	81003e26 	beq	r16,r4,144a3ac <__udivdi3+0x584>
 144a2b4:	a005883a 	mov	r2,r20
 144a2b8:	0007883a 	mov	r3,zero
 144a2bc:	003f8f06 	br	144a0fc <__alt_data_end+0xfffe48fc>
 144a2c0:	91e4983a 	sll	r18,r18,r7
 144a2c4:	80eed83a 	srl	r23,r16,r3
 144a2c8:	81cc983a 	sll	r6,r16,r7
 144a2cc:	9028d43a 	srli	r20,r18,16
 144a2d0:	98c6d83a 	srl	r3,r19,r3
 144a2d4:	b809883a 	mov	r4,r23
 144a2d8:	a00b883a 	mov	r5,r20
 144a2dc:	30ecb03a 	or	r22,r6,r3
 144a2e0:	99e2983a 	sll	r17,r19,r7
 144a2e4:	144aba80 	call	144aba8 <__umodsi3>
 144a2e8:	b809883a 	mov	r4,r23
 144a2ec:	a00b883a 	mov	r5,r20
 144a2f0:	1021883a 	mov	r16,r2
 144a2f4:	957fffcc 	andi	r21,r18,65535
 144a2f8:	144aba00 	call	144aba0 <__udivsi3>
 144a2fc:	a80b883a 	mov	r5,r21
 144a300:	1009883a 	mov	r4,r2
 144a304:	102f883a 	mov	r23,r2
 144a308:	1440a480 	call	1440a48 <__mulsi3>
 144a30c:	8020943a 	slli	r16,r16,16
 144a310:	b00ad43a 	srli	r5,r22,16
 144a314:	814cb03a 	or	r6,r16,r5
 144a318:	3080062e 	bgeu	r6,r2,144a334 <__udivdi3+0x50c>
 144a31c:	348d883a 	add	r6,r6,r18
 144a320:	b8ffffc4 	addi	r3,r23,-1
 144a324:	34804836 	bltu	r6,r18,144a448 <__udivdi3+0x620>
 144a328:	3080472e 	bgeu	r6,r2,144a448 <__udivdi3+0x620>
 144a32c:	bdffff84 	addi	r23,r23,-2
 144a330:	348d883a 	add	r6,r6,r18
 144a334:	30a7c83a 	sub	r19,r6,r2
 144a338:	9809883a 	mov	r4,r19
 144a33c:	a00b883a 	mov	r5,r20
 144a340:	144aba80 	call	144aba8 <__umodsi3>
 144a344:	9809883a 	mov	r4,r19
 144a348:	a00b883a 	mov	r5,r20
 144a34c:	1039883a 	mov	fp,r2
 144a350:	144aba00 	call	144aba0 <__udivsi3>
 144a354:	1009883a 	mov	r4,r2
 144a358:	a80b883a 	mov	r5,r21
 144a35c:	e038943a 	slli	fp,fp,16
 144a360:	1027883a 	mov	r19,r2
 144a364:	1440a480 	call	1440a48 <__mulsi3>
 144a368:	b1bfffcc 	andi	r6,r22,65535
 144a36c:	e18cb03a 	or	r6,fp,r6
 144a370:	3080062e 	bgeu	r6,r2,144a38c <__udivdi3+0x564>
 144a374:	348d883a 	add	r6,r6,r18
 144a378:	98ffffc4 	addi	r3,r19,-1
 144a37c:	34803036 	bltu	r6,r18,144a440 <__udivdi3+0x618>
 144a380:	30802f2e 	bgeu	r6,r2,144a440 <__udivdi3+0x618>
 144a384:	9cffff84 	addi	r19,r19,-2
 144a388:	348d883a 	add	r6,r6,r18
 144a38c:	b82e943a 	slli	r23,r23,16
 144a390:	30a1c83a 	sub	r16,r6,r2
 144a394:	9dc6b03a 	or	r3,r19,r23
 144a398:	003f2606 	br	144a034 <__alt_data_end+0xfffe4834>
 144a39c:	2027883a 	mov	r19,r4
 144a3a0:	003f5106 	br	144a0e8 <__alt_data_end+0xfffe48e8>
 144a3a4:	1827883a 	mov	r19,r3
 144a3a8:	003ef006 	br	1449f6c <__alt_data_end+0xfffe476c>
 144a3ac:	1808943a 	slli	r4,r3,16
 144a3b0:	9dc6983a 	sll	r3,r19,r23
 144a3b4:	e73fffcc 	andi	fp,fp,65535
 144a3b8:	2709883a 	add	r4,r4,fp
 144a3bc:	193fbd2e 	bgeu	r3,r4,144a2b4 <__alt_data_end+0xfffe4ab4>
 144a3c0:	a0bfffc4 	addi	r2,r20,-1
 144a3c4:	0007883a 	mov	r3,zero
 144a3c8:	003f4c06 	br	144a0fc <__alt_data_end+0xfffe48fc>
 144a3cc:	01400404 	movi	r5,16
 144a3d0:	2811883a 	mov	r8,r5
 144a3d4:	003ef106 	br	1449f9c <__alt_data_end+0xfffe479c>
 144a3d8:	000b883a 	mov	r5,zero
 144a3dc:	0011883a 	mov	r8,zero
 144a3e0:	003eee06 	br	1449f9c <__alt_data_end+0xfffe479c>
 144a3e4:	00800404 	movi	r2,16
 144a3e8:	1007883a 	mov	r3,r2
 144a3ec:	003ea606 	br	1449e88 <__alt_data_end+0xfffe4688>
 144a3f0:	00800404 	movi	r2,16
 144a3f4:	1007883a 	mov	r3,r2
 144a3f8:	003f0106 	br	144a000 <__alt_data_end+0xfffe4800>
 144a3fc:	0005883a 	mov	r2,zero
 144a400:	0007883a 	mov	r3,zero
 144a404:	003efe06 	br	144a000 <__alt_data_end+0xfffe4800>
 144a408:	0005883a 	mov	r2,zero
 144a40c:	0007883a 	mov	r3,zero
 144a410:	003e9d06 	br	1449e88 <__alt_data_end+0xfffe4688>
 144a414:	0007883a 	mov	r3,zero
 144a418:	00800044 	movi	r2,1
 144a41c:	003f3706 	br	144a0fc <__alt_data_end+0xfffe48fc>
 144a420:	80bf832e 	bgeu	r16,r2,144a230 <__alt_data_end+0xfffe4a30>
 144a424:	8c7fff84 	addi	r17,r17,-2
 144a428:	8721883a 	add	r16,r16,fp
 144a42c:	003f8106 	br	144a234 <__alt_data_end+0xfffe4a34>
 144a430:	48bf6a2e 	bgeu	r9,r2,144a1dc <__alt_data_end+0xfffe49dc>
 144a434:	a53fff84 	addi	r20,r20,-2
 144a438:	4f13883a 	add	r9,r9,fp
 144a43c:	003f6806 	br	144a1e0 <__alt_data_end+0xfffe49e0>
 144a440:	1827883a 	mov	r19,r3
 144a444:	003fd106 	br	144a38c <__alt_data_end+0xfffe4b8c>
 144a448:	182f883a 	mov	r23,r3
 144a44c:	003fb906 	br	144a334 <__alt_data_end+0xfffe4b34>
 144a450:	843fff84 	addi	r16,r16,-2
 144a454:	348d883a 	add	r6,r6,r18
 144a458:	003f0c06 	br	144a08c <__alt_data_end+0xfffe488c>
 144a45c:	843fff84 	addi	r16,r16,-2
 144a460:	1c87883a 	add	r3,r3,r18
 144a464:	003eac06 	br	1449f18 <__alt_data_end+0xfffe4718>

0144a468 <__umoddi3>:
 144a468:	defff404 	addi	sp,sp,-48
 144a46c:	dd800815 	stw	r22,32(sp)
 144a470:	dc400315 	stw	r17,12(sp)
 144a474:	dc000215 	stw	r16,8(sp)
 144a478:	dfc00b15 	stw	ra,44(sp)
 144a47c:	df000a15 	stw	fp,40(sp)
 144a480:	ddc00915 	stw	r23,36(sp)
 144a484:	dd400715 	stw	r21,28(sp)
 144a488:	dd000615 	stw	r20,24(sp)
 144a48c:	dcc00515 	stw	r19,20(sp)
 144a490:	dc800415 	stw	r18,16(sp)
 144a494:	2021883a 	mov	r16,r4
 144a498:	2823883a 	mov	r17,r5
 144a49c:	282d883a 	mov	r22,r5
 144a4a0:	38003c1e 	bne	r7,zero,144a594 <__umoddi3+0x12c>
 144a4a4:	3027883a 	mov	r19,r6
 144a4a8:	2029883a 	mov	r20,r4
 144a4ac:	2980522e 	bgeu	r5,r6,144a5f8 <__umoddi3+0x190>
 144a4b0:	00bfffd4 	movui	r2,65535
 144a4b4:	1180a436 	bltu	r2,r6,144a748 <__umoddi3+0x2e0>
 144a4b8:	00803fc4 	movi	r2,255
 144a4bc:	11815e2e 	bgeu	r2,r6,144aa38 <__umoddi3+0x5d0>
 144a4c0:	01400204 	movi	r5,8
 144a4c4:	2805883a 	mov	r2,r5
 144a4c8:	314ad83a 	srl	r5,r6,r5
 144a4cc:	00c05174 	movhi	r3,325
 144a4d0:	18c1e104 	addi	r3,r3,1924
 144a4d4:	194b883a 	add	r5,r3,r5
 144a4d8:	29000003 	ldbu	r4,0(r5)
 144a4dc:	2089883a 	add	r4,r4,r2
 144a4e0:	00800804 	movi	r2,32
 144a4e4:	1105c83a 	sub	r2,r2,r4
 144a4e8:	10010c26 	beq	r2,zero,144a91c <__umoddi3+0x4b4>
 144a4ec:	88a2983a 	sll	r17,r17,r2
 144a4f0:	8108d83a 	srl	r4,r16,r4
 144a4f4:	30a6983a 	sll	r19,r6,r2
 144a4f8:	80a8983a 	sll	r20,r16,r2
 144a4fc:	1025883a 	mov	r18,r2
 144a500:	892cb03a 	or	r22,r17,r4
 144a504:	9822d43a 	srli	r17,r19,16
 144a508:	b009883a 	mov	r4,r22
 144a50c:	9d7fffcc 	andi	r21,r19,65535
 144a510:	880b883a 	mov	r5,r17
 144a514:	144aba80 	call	144aba8 <__umodsi3>
 144a518:	b009883a 	mov	r4,r22
 144a51c:	880b883a 	mov	r5,r17
 144a520:	102f883a 	mov	r23,r2
 144a524:	144aba00 	call	144aba0 <__udivsi3>
 144a528:	1009883a 	mov	r4,r2
 144a52c:	a80b883a 	mov	r5,r21
 144a530:	1440a480 	call	1440a48 <__mulsi3>
 144a534:	b82e943a 	slli	r23,r23,16
 144a538:	a008d43a 	srli	r4,r20,16
 144a53c:	b906b03a 	or	r3,r23,r4
 144a540:	1880042e 	bgeu	r3,r2,144a554 <__umoddi3+0xec>
 144a544:	1cc7883a 	add	r3,r3,r19
 144a548:	1cc00236 	bltu	r3,r19,144a554 <__umoddi3+0xec>
 144a54c:	1880012e 	bgeu	r3,r2,144a554 <__umoddi3+0xec>
 144a550:	1cc7883a 	add	r3,r3,r19
 144a554:	18a1c83a 	sub	r16,r3,r2
 144a558:	8009883a 	mov	r4,r16
 144a55c:	880b883a 	mov	r5,r17
 144a560:	144aba80 	call	144aba8 <__umodsi3>
 144a564:	8009883a 	mov	r4,r16
 144a568:	880b883a 	mov	r5,r17
 144a56c:	102d883a 	mov	r22,r2
 144a570:	144aba00 	call	144aba0 <__udivsi3>
 144a574:	1009883a 	mov	r4,r2
 144a578:	a80b883a 	mov	r5,r21
 144a57c:	b02c943a 	slli	r22,r22,16
 144a580:	1440a480 	call	1440a48 <__mulsi3>
 144a584:	a13fffcc 	andi	r4,r20,65535
 144a588:	b106b03a 	or	r3,r22,r4
 144a58c:	1880572e 	bgeu	r3,r2,144a6ec <__umoddi3+0x284>
 144a590:	00005206 	br	144a6dc <__umoddi3+0x274>
 144a594:	29c05936 	bltu	r5,r7,144a6fc <__umoddi3+0x294>
 144a598:	00bfffd4 	movui	r2,65535
 144a59c:	11c0652e 	bgeu	r2,r7,144a734 <__umoddi3+0x2cc>
 144a5a0:	00804034 	movhi	r2,256
 144a5a4:	10bfffc4 	addi	r2,r2,-1
 144a5a8:	11c1172e 	bgeu	r2,r7,144aa08 <__umoddi3+0x5a0>
 144a5ac:	01400604 	movi	r5,24
 144a5b0:	282b883a 	mov	r21,r5
 144a5b4:	394ad83a 	srl	r5,r7,r5
 144a5b8:	00c05174 	movhi	r3,325
 144a5bc:	18c1e104 	addi	r3,r3,1924
 144a5c0:	194b883a 	add	r5,r3,r5
 144a5c4:	28800003 	ldbu	r2,0(r5)
 144a5c8:	00c00804 	movi	r3,32
 144a5cc:	156b883a 	add	r21,r2,r21
 144a5d0:	1d69c83a 	sub	r20,r3,r21
 144a5d4:	a000671e 	bne	r20,zero,144a774 <__umoddi3+0x30c>
 144a5d8:	3c400136 	bltu	r7,r17,144a5e0 <__umoddi3+0x178>
 144a5dc:	81812336 	bltu	r16,r6,144aa6c <__umoddi3+0x604>
 144a5e0:	8185c83a 	sub	r2,r16,r6
 144a5e4:	89e3c83a 	sub	r17,r17,r7
 144a5e8:	8087803a 	cmpltu	r3,r16,r2
 144a5ec:	88edc83a 	sub	r22,r17,r3
 144a5f0:	b007883a 	mov	r3,r22
 144a5f4:	00004306 	br	144a704 <__umoddi3+0x29c>
 144a5f8:	3000041e 	bne	r6,zero,144a60c <__umoddi3+0x1a4>
 144a5fc:	01000044 	movi	r4,1
 144a600:	000b883a 	mov	r5,zero
 144a604:	144aba00 	call	144aba0 <__udivsi3>
 144a608:	1027883a 	mov	r19,r2
 144a60c:	00bfffd4 	movui	r2,65535
 144a610:	14c0532e 	bgeu	r2,r19,144a760 <__umoddi3+0x2f8>
 144a614:	00804034 	movhi	r2,256
 144a618:	10bfffc4 	addi	r2,r2,-1
 144a61c:	14c1032e 	bgeu	r2,r19,144aa2c <__umoddi3+0x5c4>
 144a620:	00800604 	movi	r2,24
 144a624:	1007883a 	mov	r3,r2
 144a628:	9884d83a 	srl	r2,r19,r2
 144a62c:	01005174 	movhi	r4,325
 144a630:	2101e104 	addi	r4,r4,1924
 144a634:	2085883a 	add	r2,r4,r2
 144a638:	11000003 	ldbu	r4,0(r2)
 144a63c:	00800804 	movi	r2,32
 144a640:	20c7883a 	add	r3,r4,r3
 144a644:	10c5c83a 	sub	r2,r2,r3
 144a648:	1000b61e 	bne	r2,zero,144a924 <__umoddi3+0x4bc>
 144a64c:	982ad43a 	srli	r21,r19,16
 144a650:	8ce3c83a 	sub	r17,r17,r19
 144a654:	9dbfffcc 	andi	r22,r19,65535
 144a658:	0025883a 	mov	r18,zero
 144a65c:	8809883a 	mov	r4,r17
 144a660:	a80b883a 	mov	r5,r21
 144a664:	144aba80 	call	144aba8 <__umodsi3>
 144a668:	8809883a 	mov	r4,r17
 144a66c:	a80b883a 	mov	r5,r21
 144a670:	102f883a 	mov	r23,r2
 144a674:	144aba00 	call	144aba0 <__udivsi3>
 144a678:	1009883a 	mov	r4,r2
 144a67c:	b00b883a 	mov	r5,r22
 144a680:	1440a480 	call	1440a48 <__mulsi3>
 144a684:	b82e943a 	slli	r23,r23,16
 144a688:	a008d43a 	srli	r4,r20,16
 144a68c:	b906b03a 	or	r3,r23,r4
 144a690:	1880032e 	bgeu	r3,r2,144a6a0 <__umoddi3+0x238>
 144a694:	1cc7883a 	add	r3,r3,r19
 144a698:	1cc00136 	bltu	r3,r19,144a6a0 <__umoddi3+0x238>
 144a69c:	1880f136 	bltu	r3,r2,144aa64 <__umoddi3+0x5fc>
 144a6a0:	18a1c83a 	sub	r16,r3,r2
 144a6a4:	8009883a 	mov	r4,r16
 144a6a8:	a80b883a 	mov	r5,r21
 144a6ac:	144aba80 	call	144aba8 <__umodsi3>
 144a6b0:	8009883a 	mov	r4,r16
 144a6b4:	a80b883a 	mov	r5,r21
 144a6b8:	1023883a 	mov	r17,r2
 144a6bc:	144aba00 	call	144aba0 <__udivsi3>
 144a6c0:	1009883a 	mov	r4,r2
 144a6c4:	b00b883a 	mov	r5,r22
 144a6c8:	8822943a 	slli	r17,r17,16
 144a6cc:	1440a480 	call	1440a48 <__mulsi3>
 144a6d0:	a13fffcc 	andi	r4,r20,65535
 144a6d4:	8906b03a 	or	r3,r17,r4
 144a6d8:	1880042e 	bgeu	r3,r2,144a6ec <__umoddi3+0x284>
 144a6dc:	1cc7883a 	add	r3,r3,r19
 144a6e0:	1cc00236 	bltu	r3,r19,144a6ec <__umoddi3+0x284>
 144a6e4:	1880012e 	bgeu	r3,r2,144a6ec <__umoddi3+0x284>
 144a6e8:	1cc7883a 	add	r3,r3,r19
 144a6ec:	1887c83a 	sub	r3,r3,r2
 144a6f0:	1c84d83a 	srl	r2,r3,r18
 144a6f4:	0007883a 	mov	r3,zero
 144a6f8:	00000206 	br	144a704 <__umoddi3+0x29c>
 144a6fc:	2005883a 	mov	r2,r4
 144a700:	2807883a 	mov	r3,r5
 144a704:	dfc00b17 	ldw	ra,44(sp)
 144a708:	df000a17 	ldw	fp,40(sp)
 144a70c:	ddc00917 	ldw	r23,36(sp)
 144a710:	dd800817 	ldw	r22,32(sp)
 144a714:	dd400717 	ldw	r21,28(sp)
 144a718:	dd000617 	ldw	r20,24(sp)
 144a71c:	dcc00517 	ldw	r19,20(sp)
 144a720:	dc800417 	ldw	r18,16(sp)
 144a724:	dc400317 	ldw	r17,12(sp)
 144a728:	dc000217 	ldw	r16,8(sp)
 144a72c:	dec00c04 	addi	sp,sp,48
 144a730:	f800283a 	ret
 144a734:	00803fc4 	movi	r2,255
 144a738:	11c0b02e 	bgeu	r2,r7,144a9fc <__umoddi3+0x594>
 144a73c:	01400204 	movi	r5,8
 144a740:	282b883a 	mov	r21,r5
 144a744:	003f9b06 	br	144a5b4 <__alt_data_end+0xfffe4db4>
 144a748:	00804034 	movhi	r2,256
 144a74c:	10bfffc4 	addi	r2,r2,-1
 144a750:	1180b02e 	bgeu	r2,r6,144aa14 <__umoddi3+0x5ac>
 144a754:	01400604 	movi	r5,24
 144a758:	2805883a 	mov	r2,r5
 144a75c:	003f5a06 	br	144a4c8 <__alt_data_end+0xfffe4cc8>
 144a760:	00803fc4 	movi	r2,255
 144a764:	14c0ae2e 	bgeu	r2,r19,144aa20 <__umoddi3+0x5b8>
 144a768:	00800204 	movi	r2,8
 144a76c:	1007883a 	mov	r3,r2
 144a770:	003fad06 	br	144a628 <__alt_data_end+0xfffe4e28>
 144a774:	3d0a983a 	sll	r5,r7,r20
 144a778:	356cd83a 	srl	r22,r6,r21
 144a77c:	8d78d83a 	srl	fp,r17,r21
 144a780:	8d10983a 	sll	r8,r17,r20
 144a784:	2dacb03a 	or	r22,r5,r22
 144a788:	b02ed43a 	srli	r23,r22,16
 144a78c:	8564d83a 	srl	r18,r16,r21
 144a790:	e009883a 	mov	r4,fp
 144a794:	b80b883a 	mov	r5,r23
 144a798:	44a4b03a 	or	r18,r8,r18
 144a79c:	3526983a 	sll	r19,r6,r20
 144a7a0:	144aba80 	call	144aba8 <__umodsi3>
 144a7a4:	e009883a 	mov	r4,fp
 144a7a8:	b80b883a 	mov	r5,r23
 144a7ac:	b47fffcc 	andi	r17,r22,65535
 144a7b0:	d8800015 	stw	r2,0(sp)
 144a7b4:	144aba00 	call	144aba0 <__udivsi3>
 144a7b8:	1009883a 	mov	r4,r2
 144a7bc:	880b883a 	mov	r5,r17
 144a7c0:	1039883a 	mov	fp,r2
 144a7c4:	1440a480 	call	1440a48 <__mulsi3>
 144a7c8:	d9800017 	ldw	r6,0(sp)
 144a7cc:	9008d43a 	srli	r4,r18,16
 144a7d0:	8520983a 	sll	r16,r16,r20
 144a7d4:	300c943a 	slli	r6,r6,16
 144a7d8:	3106b03a 	or	r3,r6,r4
 144a7dc:	1880042e 	bgeu	r3,r2,144a7f0 <__umoddi3+0x388>
 144a7e0:	1d87883a 	add	r3,r3,r22
 144a7e4:	e13fffc4 	addi	r4,fp,-1
 144a7e8:	1d809a2e 	bgeu	r3,r22,144aa54 <__umoddi3+0x5ec>
 144a7ec:	2039883a 	mov	fp,r4
 144a7f0:	1887c83a 	sub	r3,r3,r2
 144a7f4:	1809883a 	mov	r4,r3
 144a7f8:	b80b883a 	mov	r5,r23
 144a7fc:	d8c00115 	stw	r3,4(sp)
 144a800:	144aba80 	call	144aba8 <__umodsi3>
 144a804:	d8c00117 	ldw	r3,4(sp)
 144a808:	b80b883a 	mov	r5,r23
 144a80c:	d8800015 	stw	r2,0(sp)
 144a810:	1809883a 	mov	r4,r3
 144a814:	144aba00 	call	144aba0 <__udivsi3>
 144a818:	880b883a 	mov	r5,r17
 144a81c:	1009883a 	mov	r4,r2
 144a820:	102f883a 	mov	r23,r2
 144a824:	1440a480 	call	1440a48 <__mulsi3>
 144a828:	d9800017 	ldw	r6,0(sp)
 144a82c:	947fffcc 	andi	r17,r18,65535
 144a830:	300c943a 	slli	r6,r6,16
 144a834:	3464b03a 	or	r18,r6,r17
 144a838:	9080042e 	bgeu	r18,r2,144a84c <__umoddi3+0x3e4>
 144a83c:	95a5883a 	add	r18,r18,r22
 144a840:	b8ffffc4 	addi	r3,r23,-1
 144a844:	95807f2e 	bgeu	r18,r22,144aa44 <__umoddi3+0x5dc>
 144a848:	182f883a 	mov	r23,r3
 144a84c:	e038943a 	slli	fp,fp,16
 144a850:	980cd43a 	srli	r6,r19,16
 144a854:	98ffffcc 	andi	r3,r19,65535
 144a858:	bf38b03a 	or	fp,r23,fp
 144a85c:	e02ed43a 	srli	r23,fp,16
 144a860:	e73fffcc 	andi	fp,fp,65535
 144a864:	180b883a 	mov	r5,r3
 144a868:	e009883a 	mov	r4,fp
 144a86c:	d9800015 	stw	r6,0(sp)
 144a870:	d8c00115 	stw	r3,4(sp)
 144a874:	90a5c83a 	sub	r18,r18,r2
 144a878:	1440a480 	call	1440a48 <__mulsi3>
 144a87c:	d8c00117 	ldw	r3,4(sp)
 144a880:	b809883a 	mov	r4,r23
 144a884:	1023883a 	mov	r17,r2
 144a888:	180b883a 	mov	r5,r3
 144a88c:	1440a480 	call	1440a48 <__mulsi3>
 144a890:	d9800017 	ldw	r6,0(sp)
 144a894:	b809883a 	mov	r4,r23
 144a898:	d8800115 	stw	r2,4(sp)
 144a89c:	300b883a 	mov	r5,r6
 144a8a0:	302f883a 	mov	r23,r6
 144a8a4:	1440a480 	call	1440a48 <__mulsi3>
 144a8a8:	e009883a 	mov	r4,fp
 144a8ac:	b80b883a 	mov	r5,r23
 144a8b0:	d8800015 	stw	r2,0(sp)
 144a8b4:	1440a480 	call	1440a48 <__mulsi3>
 144a8b8:	d8c00117 	ldw	r3,4(sp)
 144a8bc:	880cd43a 	srli	r6,r17,16
 144a8c0:	d9c00017 	ldw	r7,0(sp)
 144a8c4:	1885883a 	add	r2,r3,r2
 144a8c8:	118d883a 	add	r6,r2,r6
 144a8cc:	30c0022e 	bgeu	r6,r3,144a8d8 <__umoddi3+0x470>
 144a8d0:	00800074 	movhi	r2,1
 144a8d4:	388f883a 	add	r7,r7,r2
 144a8d8:	3006d43a 	srli	r3,r6,16
 144a8dc:	300c943a 	slli	r6,r6,16
 144a8e0:	8c7fffcc 	andi	r17,r17,65535
 144a8e4:	38c7883a 	add	r3,r7,r3
 144a8e8:	3463883a 	add	r17,r6,r17
 144a8ec:	90c03d36 	bltu	r18,r3,144a9e4 <__umoddi3+0x57c>
 144a8f0:	90c06026 	beq	r18,r3,144aa74 <__umoddi3+0x60c>
 144a8f4:	90c9c83a 	sub	r4,r18,r3
 144a8f8:	880f883a 	mov	r7,r17
 144a8fc:	81cfc83a 	sub	r7,r16,r7
 144a900:	81c7803a 	cmpltu	r3,r16,r7
 144a904:	20c7c83a 	sub	r3,r4,r3
 144a908:	1d44983a 	sll	r2,r3,r21
 144a90c:	3d0ed83a 	srl	r7,r7,r20
 144a910:	1d06d83a 	srl	r3,r3,r20
 144a914:	11c4b03a 	or	r2,r2,r7
 144a918:	003f7a06 	br	144a704 <__alt_data_end+0xfffe4f04>
 144a91c:	0025883a 	mov	r18,zero
 144a920:	003ef806 	br	144a504 <__alt_data_end+0xfffe4d04>
 144a924:	98a6983a 	sll	r19,r19,r2
 144a928:	88e8d83a 	srl	r20,r17,r3
 144a92c:	80c6d83a 	srl	r3,r16,r3
 144a930:	982ad43a 	srli	r21,r19,16
 144a934:	88a2983a 	sll	r17,r17,r2
 144a938:	a009883a 	mov	r4,r20
 144a93c:	a80b883a 	mov	r5,r21
 144a940:	88eeb03a 	or	r23,r17,r3
 144a944:	1025883a 	mov	r18,r2
 144a948:	144aba80 	call	144aba8 <__umodsi3>
 144a94c:	a009883a 	mov	r4,r20
 144a950:	a80b883a 	mov	r5,r21
 144a954:	1023883a 	mov	r17,r2
 144a958:	9dbfffcc 	andi	r22,r19,65535
 144a95c:	144aba00 	call	144aba0 <__udivsi3>
 144a960:	1009883a 	mov	r4,r2
 144a964:	b00b883a 	mov	r5,r22
 144a968:	1440a480 	call	1440a48 <__mulsi3>
 144a96c:	8822943a 	slli	r17,r17,16
 144a970:	b808d43a 	srli	r4,r23,16
 144a974:	84a8983a 	sll	r20,r16,r18
 144a978:	8906b03a 	or	r3,r17,r4
 144a97c:	1880042e 	bgeu	r3,r2,144a990 <__umoddi3+0x528>
 144a980:	1cc7883a 	add	r3,r3,r19
 144a984:	1cc00236 	bltu	r3,r19,144a990 <__umoddi3+0x528>
 144a988:	1880012e 	bgeu	r3,r2,144a990 <__umoddi3+0x528>
 144a98c:	1cc7883a 	add	r3,r3,r19
 144a990:	18a1c83a 	sub	r16,r3,r2
 144a994:	8009883a 	mov	r4,r16
 144a998:	a80b883a 	mov	r5,r21
 144a99c:	144aba80 	call	144aba8 <__umodsi3>
 144a9a0:	8009883a 	mov	r4,r16
 144a9a4:	a80b883a 	mov	r5,r21
 144a9a8:	1039883a 	mov	fp,r2
 144a9ac:	144aba00 	call	144aba0 <__udivsi3>
 144a9b0:	1009883a 	mov	r4,r2
 144a9b4:	b00b883a 	mov	r5,r22
 144a9b8:	1440a480 	call	1440a48 <__mulsi3>
 144a9bc:	e006943a 	slli	r3,fp,16
 144a9c0:	b93fffcc 	andi	r4,r23,65535
 144a9c4:	1906b03a 	or	r3,r3,r4
 144a9c8:	1880042e 	bgeu	r3,r2,144a9dc <__umoddi3+0x574>
 144a9cc:	1cc7883a 	add	r3,r3,r19
 144a9d0:	1cc00236 	bltu	r3,r19,144a9dc <__umoddi3+0x574>
 144a9d4:	1880012e 	bgeu	r3,r2,144a9dc <__umoddi3+0x574>
 144a9d8:	1cc7883a 	add	r3,r3,r19
 144a9dc:	18a3c83a 	sub	r17,r3,r2
 144a9e0:	003f1e06 	br	144a65c <__alt_data_end+0xfffe4e5c>
 144a9e4:	8ccfc83a 	sub	r7,r17,r19
 144a9e8:	1d89c83a 	sub	r4,r3,r22
 144a9ec:	89e3803a 	cmpltu	r17,r17,r7
 144a9f0:	2463c83a 	sub	r17,r4,r17
 144a9f4:	9449c83a 	sub	r4,r18,r17
 144a9f8:	003fc006 	br	144a8fc <__alt_data_end+0xfffe50fc>
 144a9fc:	000b883a 	mov	r5,zero
 144aa00:	002b883a 	mov	r21,zero
 144aa04:	003eeb06 	br	144a5b4 <__alt_data_end+0xfffe4db4>
 144aa08:	01400404 	movi	r5,16
 144aa0c:	282b883a 	mov	r21,r5
 144aa10:	003ee806 	br	144a5b4 <__alt_data_end+0xfffe4db4>
 144aa14:	01400404 	movi	r5,16
 144aa18:	2805883a 	mov	r2,r5
 144aa1c:	003eaa06 	br	144a4c8 <__alt_data_end+0xfffe4cc8>
 144aa20:	0005883a 	mov	r2,zero
 144aa24:	0007883a 	mov	r3,zero
 144aa28:	003eff06 	br	144a628 <__alt_data_end+0xfffe4e28>
 144aa2c:	00800404 	movi	r2,16
 144aa30:	1007883a 	mov	r3,r2
 144aa34:	003efc06 	br	144a628 <__alt_data_end+0xfffe4e28>
 144aa38:	000b883a 	mov	r5,zero
 144aa3c:	0005883a 	mov	r2,zero
 144aa40:	003ea106 	br	144a4c8 <__alt_data_end+0xfffe4cc8>
 144aa44:	90bf802e 	bgeu	r18,r2,144a848 <__alt_data_end+0xfffe5048>
 144aa48:	bdffff84 	addi	r23,r23,-2
 144aa4c:	95a5883a 	add	r18,r18,r22
 144aa50:	003f7e06 	br	144a84c <__alt_data_end+0xfffe504c>
 144aa54:	18bf652e 	bgeu	r3,r2,144a7ec <__alt_data_end+0xfffe4fec>
 144aa58:	e73fff84 	addi	fp,fp,-2
 144aa5c:	1d87883a 	add	r3,r3,r22
 144aa60:	003f6306 	br	144a7f0 <__alt_data_end+0xfffe4ff0>
 144aa64:	1cc7883a 	add	r3,r3,r19
 144aa68:	003f0d06 	br	144a6a0 <__alt_data_end+0xfffe4ea0>
 144aa6c:	8005883a 	mov	r2,r16
 144aa70:	003edf06 	br	144a5f0 <__alt_data_end+0xfffe4df0>
 144aa74:	847fdb36 	bltu	r16,r17,144a9e4 <__alt_data_end+0xfffe51e4>
 144aa78:	880f883a 	mov	r7,r17
 144aa7c:	0009883a 	mov	r4,zero
 144aa80:	003f9e06 	br	144a8fc <__alt_data_end+0xfffe50fc>

0144aa84 <udivmodsi4>:
 144aa84:	2900182e 	bgeu	r5,r4,144aae8 <udivmodsi4+0x64>
 144aa88:	28001716 	blt	r5,zero,144aae8 <udivmodsi4+0x64>
 144aa8c:	00800804 	movi	r2,32
 144aa90:	00c00044 	movi	r3,1
 144aa94:	00000206 	br	144aaa0 <udivmodsi4+0x1c>
 144aa98:	10001126 	beq	r2,zero,144aae0 <udivmodsi4+0x5c>
 144aa9c:	28000516 	blt	r5,zero,144aab4 <udivmodsi4+0x30>
 144aaa0:	294b883a 	add	r5,r5,r5
 144aaa4:	10bfffc4 	addi	r2,r2,-1
 144aaa8:	18c7883a 	add	r3,r3,r3
 144aaac:	293ffa36 	bltu	r5,r4,144aa98 <__alt_data_end+0xfffe5298>
 144aab0:	18000b26 	beq	r3,zero,144aae0 <udivmodsi4+0x5c>
 144aab4:	0005883a 	mov	r2,zero
 144aab8:	21400236 	bltu	r4,r5,144aac4 <udivmodsi4+0x40>
 144aabc:	2149c83a 	sub	r4,r4,r5
 144aac0:	10c4b03a 	or	r2,r2,r3
 144aac4:	1806d07a 	srli	r3,r3,1
 144aac8:	280ad07a 	srli	r5,r5,1
 144aacc:	183ffa1e 	bne	r3,zero,144aab8 <__alt_data_end+0xfffe52b8>
 144aad0:	3000011e 	bne	r6,zero,144aad8 <udivmodsi4+0x54>
 144aad4:	f800283a 	ret
 144aad8:	2005883a 	mov	r2,r4
 144aadc:	f800283a 	ret
 144aae0:	0005883a 	mov	r2,zero
 144aae4:	003ffa06 	br	144aad0 <__alt_data_end+0xfffe52d0>
 144aae8:	00c00044 	movi	r3,1
 144aaec:	003ff106 	br	144aab4 <__alt_data_end+0xfffe52b4>

0144aaf0 <__divsi3>:
 144aaf0:	defffe04 	addi	sp,sp,-8
 144aaf4:	dfc00115 	stw	ra,4(sp)
 144aaf8:	dc000015 	stw	r16,0(sp)
 144aafc:	20000b16 	blt	r4,zero,144ab2c <__divsi3+0x3c>
 144ab00:	0021883a 	mov	r16,zero
 144ab04:	28000c16 	blt	r5,zero,144ab38 <__divsi3+0x48>
 144ab08:	000d883a 	mov	r6,zero
 144ab0c:	144aa840 	call	144aa84 <udivmodsi4>
 144ab10:	0407c83a 	sub	r3,zero,r16
 144ab14:	1884f03a 	xor	r2,r3,r2
 144ab18:	1405883a 	add	r2,r2,r16
 144ab1c:	dfc00117 	ldw	ra,4(sp)
 144ab20:	dc000017 	ldw	r16,0(sp)
 144ab24:	dec00204 	addi	sp,sp,8
 144ab28:	f800283a 	ret
 144ab2c:	0109c83a 	sub	r4,zero,r4
 144ab30:	04000044 	movi	r16,1
 144ab34:	283ff40e 	bge	r5,zero,144ab08 <__alt_data_end+0xfffe5308>
 144ab38:	014bc83a 	sub	r5,zero,r5
 144ab3c:	8400005c 	xori	r16,r16,1
 144ab40:	003ff106 	br	144ab08 <__alt_data_end+0xfffe5308>

0144ab44 <__modsi3>:
 144ab44:	defffd04 	addi	sp,sp,-12
 144ab48:	dfc00215 	stw	ra,8(sp)
 144ab4c:	dc400115 	stw	r17,4(sp)
 144ab50:	dc000015 	stw	r16,0(sp)
 144ab54:	20000c16 	blt	r4,zero,144ab88 <__modsi3+0x44>
 144ab58:	0023883a 	mov	r17,zero
 144ab5c:	0021883a 	mov	r16,zero
 144ab60:	28000d16 	blt	r5,zero,144ab98 <__modsi3+0x54>
 144ab64:	01800044 	movi	r6,1
 144ab68:	144aa840 	call	144aa84 <udivmodsi4>
 144ab6c:	1404f03a 	xor	r2,r2,r16
 144ab70:	8885883a 	add	r2,r17,r2
 144ab74:	dfc00217 	ldw	ra,8(sp)
 144ab78:	dc400117 	ldw	r17,4(sp)
 144ab7c:	dc000017 	ldw	r16,0(sp)
 144ab80:	dec00304 	addi	sp,sp,12
 144ab84:	f800283a 	ret
 144ab88:	0109c83a 	sub	r4,zero,r4
 144ab8c:	04400044 	movi	r17,1
 144ab90:	043fffc4 	movi	r16,-1
 144ab94:	283ff30e 	bge	r5,zero,144ab64 <__alt_data_end+0xfffe5364>
 144ab98:	014bc83a 	sub	r5,zero,r5
 144ab9c:	003ff106 	br	144ab64 <__alt_data_end+0xfffe5364>

0144aba0 <__udivsi3>:
 144aba0:	000d883a 	mov	r6,zero
 144aba4:	144aa841 	jmpi	144aa84 <udivmodsi4>

0144aba8 <__umodsi3>:
 144aba8:	01800044 	movi	r6,1
 144abac:	144aa841 	jmpi	144aa84 <udivmodsi4>

0144abb0 <__adddf3>:
 144abb0:	02000434 	movhi	r8,16
 144abb4:	423fffc4 	addi	r8,r8,-1
 144abb8:	defffb04 	addi	sp,sp,-20
 144abbc:	2a12703a 	and	r9,r5,r8
 144abc0:	2806d7fa 	srli	r3,r5,31
 144abc4:	3a10703a 	and	r8,r7,r8
 144abc8:	3804d53a 	srli	r2,r7,20
 144abcc:	3014d77a 	srli	r10,r6,29
 144abd0:	dc000015 	stw	r16,0(sp)
 144abd4:	481290fa 	slli	r9,r9,3
 144abd8:	2820d53a 	srli	r16,r5,20
 144abdc:	401090fa 	slli	r8,r8,3
 144abe0:	200ad77a 	srli	r5,r4,29
 144abe4:	380ed7fa 	srli	r7,r7,31
 144abe8:	dc800215 	stw	r18,8(sp)
 144abec:	dc400115 	stw	r17,4(sp)
 144abf0:	dfc00415 	stw	ra,16(sp)
 144abf4:	dcc00315 	stw	r19,12(sp)
 144abf8:	1c803fcc 	andi	r18,r3,255
 144abfc:	8401ffcc 	andi	r16,r16,2047
 144ac00:	494ab03a 	or	r5,r9,r5
 144ac04:	202290fa 	slli	r17,r4,3
 144ac08:	1081ffcc 	andi	r2,r2,2047
 144ac0c:	4290b03a 	or	r8,r8,r10
 144ac10:	300c90fa 	slli	r6,r6,3
 144ac14:	91c07026 	beq	r18,r7,144add8 <__adddf3+0x228>
 144ac18:	8087c83a 	sub	r3,r16,r2
 144ac1c:	00c0b30e 	bge	zero,r3,144aeec <__adddf3+0x33c>
 144ac20:	10002a1e 	bne	r2,zero,144accc <__adddf3+0x11c>
 144ac24:	4184b03a 	or	r2,r8,r6
 144ac28:	1000991e 	bne	r2,zero,144ae90 <__adddf3+0x2e0>
 144ac2c:	888001cc 	andi	r2,r17,7
 144ac30:	10005b26 	beq	r2,zero,144ada0 <__adddf3+0x1f0>
 144ac34:	88c003cc 	andi	r3,r17,15
 144ac38:	00800104 	movi	r2,4
 144ac3c:	18805826 	beq	r3,r2,144ada0 <__adddf3+0x1f0>
 144ac40:	89800104 	addi	r6,r17,4
 144ac44:	3463803a 	cmpltu	r17,r6,r17
 144ac48:	2c4b883a 	add	r5,r5,r17
 144ac4c:	2880202c 	andhi	r2,r5,128
 144ac50:	9007883a 	mov	r3,r18
 144ac54:	3023883a 	mov	r17,r6
 144ac58:	10005426 	beq	r2,zero,144adac <__adddf3+0x1fc>
 144ac5c:	84000044 	addi	r16,r16,1
 144ac60:	0081ffc4 	movi	r2,2047
 144ac64:	8080c126 	beq	r16,r2,144af6c <__adddf3+0x3bc>
 144ac68:	013fe034 	movhi	r4,65408
 144ac6c:	213fffc4 	addi	r4,r4,-1
 144ac70:	290a703a 	and	r5,r5,r4
 144ac74:	2804977a 	slli	r2,r5,29
 144ac78:	280a927a 	slli	r5,r5,9
 144ac7c:	8822d0fa 	srli	r17,r17,3
 144ac80:	8401ffcc 	andi	r16,r16,2047
 144ac84:	2808d33a 	srli	r4,r5,12
 144ac88:	1444b03a 	or	r2,r2,r17
 144ac8c:	8401ffcc 	andi	r16,r16,2047
 144ac90:	800a953a 	slli	r5,r16,20
 144ac94:	18c03fcc 	andi	r3,r3,255
 144ac98:	04000434 	movhi	r16,16
 144ac9c:	180697fa 	slli	r3,r3,31
 144aca0:	843fffc4 	addi	r16,r16,-1
 144aca4:	2420703a 	and	r16,r4,r16
 144aca8:	8160b03a 	or	r16,r16,r5
 144acac:	80c6b03a 	or	r3,r16,r3
 144acb0:	dfc00417 	ldw	ra,16(sp)
 144acb4:	dcc00317 	ldw	r19,12(sp)
 144acb8:	dc800217 	ldw	r18,8(sp)
 144acbc:	dc400117 	ldw	r17,4(sp)
 144acc0:	dc000017 	ldw	r16,0(sp)
 144acc4:	dec00504 	addi	sp,sp,20
 144acc8:	f800283a 	ret
 144accc:	0081ffc4 	movi	r2,2047
 144acd0:	80bfd626 	beq	r16,r2,144ac2c <__alt_data_end+0xfffe542c>
 144acd4:	42002034 	orhi	r8,r8,128
 144acd8:	00800e04 	movi	r2,56
 144acdc:	10c0a616 	blt	r2,r3,144af78 <__adddf3+0x3c8>
 144ace0:	008007c4 	movi	r2,31
 144ace4:	10c0c916 	blt	r2,r3,144b00c <__adddf3+0x45c>
 144ace8:	00800804 	movi	r2,32
 144acec:	10c5c83a 	sub	r2,r2,r3
 144acf0:	408e983a 	sll	r7,r8,r2
 144acf4:	30c8d83a 	srl	r4,r6,r3
 144acf8:	3084983a 	sll	r2,r6,r2
 144acfc:	40c6d83a 	srl	r3,r8,r3
 144ad00:	390cb03a 	or	r6,r7,r4
 144ad04:	1004c03a 	cmpne	r2,r2,zero
 144ad08:	308cb03a 	or	r6,r6,r2
 144ad0c:	898dc83a 	sub	r6,r17,r6
 144ad10:	89a3803a 	cmpltu	r17,r17,r6
 144ad14:	28cbc83a 	sub	r5,r5,r3
 144ad18:	2c4bc83a 	sub	r5,r5,r17
 144ad1c:	3023883a 	mov	r17,r6
 144ad20:	2880202c 	andhi	r2,r5,128
 144ad24:	10006d26 	beq	r2,zero,144aedc <__adddf3+0x32c>
 144ad28:	04c02034 	movhi	r19,128
 144ad2c:	9cffffc4 	addi	r19,r19,-1
 144ad30:	2ce6703a 	and	r19,r5,r19
 144ad34:	98007e26 	beq	r19,zero,144af30 <__adddf3+0x380>
 144ad38:	9809883a 	mov	r4,r19
 144ad3c:	14409e40 	call	14409e4 <__clzsi2>
 144ad40:	10fffe04 	addi	r3,r2,-8
 144ad44:	010007c4 	movi	r4,31
 144ad48:	20c07f16 	blt	r4,r3,144af48 <__adddf3+0x398>
 144ad4c:	01400a04 	movi	r5,40
 144ad50:	2885c83a 	sub	r2,r5,r2
 144ad54:	888ad83a 	srl	r5,r17,r2
 144ad58:	98e6983a 	sll	r19,r19,r3
 144ad5c:	88e2983a 	sll	r17,r17,r3
 144ad60:	2ce6b03a 	or	r19,r5,r19
 144ad64:	1c007c16 	blt	r3,r16,144af58 <__adddf3+0x3a8>
 144ad68:	1c21c83a 	sub	r16,r3,r16
 144ad6c:	81400044 	addi	r5,r16,1
 144ad70:	00c007c4 	movi	r3,31
 144ad74:	19409816 	blt	r3,r5,144afd8 <__adddf3+0x428>
 144ad78:	1c21c83a 	sub	r16,r3,r16
 144ad7c:	8c08983a 	sll	r4,r17,r16
 144ad80:	8946d83a 	srl	r3,r17,r5
 144ad84:	9c20983a 	sll	r16,r19,r16
 144ad88:	2008c03a 	cmpne	r4,r4,zero
 144ad8c:	994ad83a 	srl	r5,r19,r5
 144ad90:	1c06b03a 	or	r3,r3,r16
 144ad94:	1922b03a 	or	r17,r3,r4
 144ad98:	0021883a 	mov	r16,zero
 144ad9c:	003fa306 	br	144ac2c <__alt_data_end+0xfffe542c>
 144ada0:	2880202c 	andhi	r2,r5,128
 144ada4:	9007883a 	mov	r3,r18
 144ada8:	103fac1e 	bne	r2,zero,144ac5c <__alt_data_end+0xfffe545c>
 144adac:	2804977a 	slli	r2,r5,29
 144adb0:	8822d0fa 	srli	r17,r17,3
 144adb4:	0101ffc4 	movi	r4,2047
 144adb8:	280ad0fa 	srli	r5,r5,3
 144adbc:	1444b03a 	or	r2,r2,r17
 144adc0:	81002c26 	beq	r16,r4,144ae74 <__adddf3+0x2c4>
 144adc4:	8120703a 	and	r16,r16,r4
 144adc8:	01000434 	movhi	r4,16
 144adcc:	213fffc4 	addi	r4,r4,-1
 144add0:	2908703a 	and	r4,r5,r4
 144add4:	003fad06 	br	144ac8c <__alt_data_end+0xfffe548c>
 144add8:	8089c83a 	sub	r4,r16,r2
 144addc:	01006a0e 	bge	zero,r4,144af88 <__adddf3+0x3d8>
 144ade0:	10003326 	beq	r2,zero,144aeb0 <__adddf3+0x300>
 144ade4:	0081ffc4 	movi	r2,2047
 144ade8:	80bf9026 	beq	r16,r2,144ac2c <__alt_data_end+0xfffe542c>
 144adec:	42002034 	orhi	r8,r8,128
 144adf0:	00800e04 	movi	r2,56
 144adf4:	1100b116 	blt	r2,r4,144b0bc <__adddf3+0x50c>
 144adf8:	008007c4 	movi	r2,31
 144adfc:	1100e216 	blt	r2,r4,144b188 <__adddf3+0x5d8>
 144ae00:	00800804 	movi	r2,32
 144ae04:	1105c83a 	sub	r2,r2,r4
 144ae08:	4092983a 	sll	r9,r8,r2
 144ae0c:	310ed83a 	srl	r7,r6,r4
 144ae10:	3084983a 	sll	r2,r6,r2
 144ae14:	4110d83a 	srl	r8,r8,r4
 144ae18:	49ccb03a 	or	r6,r9,r7
 144ae1c:	1004c03a 	cmpne	r2,r2,zero
 144ae20:	308cb03a 	or	r6,r6,r2
 144ae24:	344d883a 	add	r6,r6,r17
 144ae28:	3463803a 	cmpltu	r17,r6,r17
 144ae2c:	414b883a 	add	r5,r8,r5
 144ae30:	2c4b883a 	add	r5,r5,r17
 144ae34:	3023883a 	mov	r17,r6
 144ae38:	2880202c 	andhi	r2,r5,128
 144ae3c:	10002726 	beq	r2,zero,144aedc <__adddf3+0x32c>
 144ae40:	84000044 	addi	r16,r16,1
 144ae44:	0081ffc4 	movi	r2,2047
 144ae48:	8080ae26 	beq	r16,r2,144b104 <__adddf3+0x554>
 144ae4c:	00bfe034 	movhi	r2,65408
 144ae50:	10bfffc4 	addi	r2,r2,-1
 144ae54:	288a703a 	and	r5,r5,r2
 144ae58:	880cd07a 	srli	r6,r17,1
 144ae5c:	280897fa 	slli	r4,r5,31
 144ae60:	88c0004c 	andi	r3,r17,1
 144ae64:	30e2b03a 	or	r17,r6,r3
 144ae68:	280ad07a 	srli	r5,r5,1
 144ae6c:	8922b03a 	or	r17,r17,r4
 144ae70:	003f6e06 	br	144ac2c <__alt_data_end+0xfffe542c>
 144ae74:	1148b03a 	or	r4,r2,r5
 144ae78:	20003c26 	beq	r4,zero,144af6c <__adddf3+0x3bc>
 144ae7c:	29000234 	orhi	r4,r5,8
 144ae80:	01400434 	movhi	r5,16
 144ae84:	297fffc4 	addi	r5,r5,-1
 144ae88:	2148703a 	and	r4,r4,r5
 144ae8c:	003f7f06 	br	144ac8c <__alt_data_end+0xfffe548c>
 144ae90:	18ffffc4 	addi	r3,r3,-1
 144ae94:	18004d1e 	bne	r3,zero,144afcc <__adddf3+0x41c>
 144ae98:	898dc83a 	sub	r6,r17,r6
 144ae9c:	89a3803a 	cmpltu	r17,r17,r6
 144aea0:	2a0bc83a 	sub	r5,r5,r8
 144aea4:	2c4bc83a 	sub	r5,r5,r17
 144aea8:	3023883a 	mov	r17,r6
 144aeac:	003f9c06 	br	144ad20 <__alt_data_end+0xfffe5520>
 144aeb0:	4184b03a 	or	r2,r8,r6
 144aeb4:	103f5d26 	beq	r2,zero,144ac2c <__alt_data_end+0xfffe542c>
 144aeb8:	213fffc4 	addi	r4,r4,-1
 144aebc:	203fd926 	beq	r4,zero,144ae24 <__alt_data_end+0xfffe5624>
 144aec0:	0081ffc4 	movi	r2,2047
 144aec4:	80bfca1e 	bne	r16,r2,144adf0 <__alt_data_end+0xfffe55f0>
 144aec8:	003f5806 	br	144ac2c <__alt_data_end+0xfffe542c>
 144aecc:	10c8b03a 	or	r4,r2,r3
 144aed0:	20008b26 	beq	r4,zero,144b100 <__adddf3+0x550>
 144aed4:	100b883a 	mov	r5,r2
 144aed8:	1823883a 	mov	r17,r3
 144aedc:	888001cc 	andi	r2,r17,7
 144aee0:	103f541e 	bne	r2,zero,144ac34 <__alt_data_end+0xfffe5434>
 144aee4:	9007883a 	mov	r3,r18
 144aee8:	003fb006 	br	144adac <__alt_data_end+0xfffe55ac>
 144aeec:	1800531e 	bne	r3,zero,144b03c <__adddf3+0x48c>
 144aef0:	80800044 	addi	r2,r16,1
 144aef4:	1081ffcc 	andi	r2,r2,2047
 144aef8:	00c00044 	movi	r3,1
 144aefc:	1880990e 	bge	r3,r2,144b164 <__adddf3+0x5b4>
 144af00:	8985c83a 	sub	r2,r17,r6
 144af04:	8887803a 	cmpltu	r3,r17,r2
 144af08:	2a27c83a 	sub	r19,r5,r8
 144af0c:	98e7c83a 	sub	r19,r19,r3
 144af10:	98c0202c 	andhi	r3,r19,128
 144af14:	18006226 	beq	r3,zero,144b0a0 <__adddf3+0x4f0>
 144af18:	3463c83a 	sub	r17,r6,r17
 144af1c:	4151c83a 	sub	r8,r8,r5
 144af20:	344d803a 	cmpltu	r6,r6,r17
 144af24:	41a7c83a 	sub	r19,r8,r6
 144af28:	3825883a 	mov	r18,r7
 144af2c:	983f821e 	bne	r19,zero,144ad38 <__alt_data_end+0xfffe5538>
 144af30:	8809883a 	mov	r4,r17
 144af34:	14409e40 	call	14409e4 <__clzsi2>
 144af38:	10800804 	addi	r2,r2,32
 144af3c:	10fffe04 	addi	r3,r2,-8
 144af40:	010007c4 	movi	r4,31
 144af44:	20ff810e 	bge	r4,r3,144ad4c <__alt_data_end+0xfffe554c>
 144af48:	14fff604 	addi	r19,r2,-40
 144af4c:	8ce6983a 	sll	r19,r17,r19
 144af50:	0023883a 	mov	r17,zero
 144af54:	1c3f840e 	bge	r3,r16,144ad68 <__alt_data_end+0xfffe5568>
 144af58:	017fe034 	movhi	r5,65408
 144af5c:	297fffc4 	addi	r5,r5,-1
 144af60:	80e1c83a 	sub	r16,r16,r3
 144af64:	994a703a 	and	r5,r19,r5
 144af68:	003f3006 	br	144ac2c <__alt_data_end+0xfffe542c>
 144af6c:	0009883a 	mov	r4,zero
 144af70:	0005883a 	mov	r2,zero
 144af74:	003f4506 	br	144ac8c <__alt_data_end+0xfffe548c>
 144af78:	418cb03a 	or	r6,r8,r6
 144af7c:	300cc03a 	cmpne	r6,r6,zero
 144af80:	0007883a 	mov	r3,zero
 144af84:	003f6106 	br	144ad0c <__alt_data_end+0xfffe550c>
 144af88:	2000921e 	bne	r4,zero,144b1d4 <__adddf3+0x624>
 144af8c:	80800044 	addi	r2,r16,1
 144af90:	11c1ffcc 	andi	r7,r2,2047
 144af94:	01000044 	movi	r4,1
 144af98:	21c0610e 	bge	r4,r7,144b120 <__adddf3+0x570>
 144af9c:	0101ffc4 	movi	r4,2047
 144afa0:	1100a326 	beq	r2,r4,144b230 <__adddf3+0x680>
 144afa4:	344d883a 	add	r6,r6,r17
 144afa8:	3463803a 	cmpltu	r17,r6,r17
 144afac:	414b883a 	add	r5,r8,r5
 144afb0:	2c4b883a 	add	r5,r5,r17
 144afb4:	282297fa 	slli	r17,r5,31
 144afb8:	300cd07a 	srli	r6,r6,1
 144afbc:	280ad07a 	srli	r5,r5,1
 144afc0:	1021883a 	mov	r16,r2
 144afc4:	89a2b03a 	or	r17,r17,r6
 144afc8:	003f1806 	br	144ac2c <__alt_data_end+0xfffe542c>
 144afcc:	0081ffc4 	movi	r2,2047
 144afd0:	80bf411e 	bne	r16,r2,144acd8 <__alt_data_end+0xfffe54d8>
 144afd4:	003f1506 	br	144ac2c <__alt_data_end+0xfffe542c>
 144afd8:	80bff844 	addi	r2,r16,-31
 144afdc:	00c00804 	movi	r3,32
 144afe0:	9884d83a 	srl	r2,r19,r2
 144afe4:	28c04a26 	beq	r5,r3,144b110 <__adddf3+0x560>
 144afe8:	00c00fc4 	movi	r3,63
 144afec:	1c21c83a 	sub	r16,r3,r16
 144aff0:	9c26983a 	sll	r19,r19,r16
 144aff4:	9c62b03a 	or	r17,r19,r17
 144aff8:	8822c03a 	cmpne	r17,r17,zero
 144affc:	88a2b03a 	or	r17,r17,r2
 144b000:	000b883a 	mov	r5,zero
 144b004:	0021883a 	mov	r16,zero
 144b008:	003fb406 	br	144aedc <__alt_data_end+0xfffe56dc>
 144b00c:	18bff804 	addi	r2,r3,-32
 144b010:	01000804 	movi	r4,32
 144b014:	4084d83a 	srl	r2,r8,r2
 144b018:	19003f26 	beq	r3,r4,144b118 <__adddf3+0x568>
 144b01c:	01001004 	movi	r4,64
 144b020:	20c7c83a 	sub	r3,r4,r3
 144b024:	40d0983a 	sll	r8,r8,r3
 144b028:	418cb03a 	or	r6,r8,r6
 144b02c:	300cc03a 	cmpne	r6,r6,zero
 144b030:	308cb03a 	or	r6,r6,r2
 144b034:	0007883a 	mov	r3,zero
 144b038:	003f3406 	br	144ad0c <__alt_data_end+0xfffe550c>
 144b03c:	80002326 	beq	r16,zero,144b0cc <__adddf3+0x51c>
 144b040:	0101ffc4 	movi	r4,2047
 144b044:	11005e26 	beq	r2,r4,144b1c0 <__adddf3+0x610>
 144b048:	00c7c83a 	sub	r3,zero,r3
 144b04c:	29402034 	orhi	r5,r5,128
 144b050:	01000e04 	movi	r4,56
 144b054:	20c07216 	blt	r4,r3,144b220 <__adddf3+0x670>
 144b058:	010007c4 	movi	r4,31
 144b05c:	20c0ce16 	blt	r4,r3,144b398 <__adddf3+0x7e8>
 144b060:	01000804 	movi	r4,32
 144b064:	20c9c83a 	sub	r4,r4,r3
 144b068:	2914983a 	sll	r10,r5,r4
 144b06c:	88d2d83a 	srl	r9,r17,r3
 144b070:	8908983a 	sll	r4,r17,r4
 144b074:	28c6d83a 	srl	r3,r5,r3
 144b078:	5262b03a 	or	r17,r10,r9
 144b07c:	2008c03a 	cmpne	r4,r4,zero
 144b080:	8922b03a 	or	r17,r17,r4
 144b084:	3463c83a 	sub	r17,r6,r17
 144b088:	40c7c83a 	sub	r3,r8,r3
 144b08c:	344d803a 	cmpltu	r6,r6,r17
 144b090:	198bc83a 	sub	r5,r3,r6
 144b094:	1021883a 	mov	r16,r2
 144b098:	3825883a 	mov	r18,r7
 144b09c:	003f2006 	br	144ad20 <__alt_data_end+0xfffe5520>
 144b0a0:	9886b03a 	or	r3,r19,r2
 144b0a4:	1800141e 	bne	r3,zero,144b0f8 <__adddf3+0x548>
 144b0a8:	0007883a 	mov	r3,zero
 144b0ac:	000b883a 	mov	r5,zero
 144b0b0:	0023883a 	mov	r17,zero
 144b0b4:	0021883a 	mov	r16,zero
 144b0b8:	003f3c06 	br	144adac <__alt_data_end+0xfffe55ac>
 144b0bc:	418cb03a 	or	r6,r8,r6
 144b0c0:	300cc03a 	cmpne	r6,r6,zero
 144b0c4:	0011883a 	mov	r8,zero
 144b0c8:	003f5606 	br	144ae24 <__alt_data_end+0xfffe5624>
 144b0cc:	2c48b03a 	or	r4,r5,r17
 144b0d0:	20003b26 	beq	r4,zero,144b1c0 <__adddf3+0x610>
 144b0d4:	00c6303a 	nor	r3,zero,r3
 144b0d8:	1800371e 	bne	r3,zero,144b1b8 <__adddf3+0x608>
 144b0dc:	3463c83a 	sub	r17,r6,r17
 144b0e0:	414bc83a 	sub	r5,r8,r5
 144b0e4:	344d803a 	cmpltu	r6,r6,r17
 144b0e8:	298bc83a 	sub	r5,r5,r6
 144b0ec:	1021883a 	mov	r16,r2
 144b0f0:	3825883a 	mov	r18,r7
 144b0f4:	003f0a06 	br	144ad20 <__alt_data_end+0xfffe5520>
 144b0f8:	1023883a 	mov	r17,r2
 144b0fc:	003f0d06 	br	144ad34 <__alt_data_end+0xfffe5534>
 144b100:	0007883a 	mov	r3,zero
 144b104:	000b883a 	mov	r5,zero
 144b108:	0023883a 	mov	r17,zero
 144b10c:	003f2706 	br	144adac <__alt_data_end+0xfffe55ac>
 144b110:	0027883a 	mov	r19,zero
 144b114:	003fb706 	br	144aff4 <__alt_data_end+0xfffe57f4>
 144b118:	0011883a 	mov	r8,zero
 144b11c:	003fc206 	br	144b028 <__alt_data_end+0xfffe5828>
 144b120:	2c44b03a 	or	r2,r5,r17
 144b124:	8000871e 	bne	r16,zero,144b344 <__adddf3+0x794>
 144b128:	1000b126 	beq	r2,zero,144b3f0 <__adddf3+0x840>
 144b12c:	4184b03a 	or	r2,r8,r6
 144b130:	103ebe26 	beq	r2,zero,144ac2c <__alt_data_end+0xfffe542c>
 144b134:	3445883a 	add	r2,r6,r17
 144b138:	1463803a 	cmpltu	r17,r2,r17
 144b13c:	414b883a 	add	r5,r8,r5
 144b140:	2c4b883a 	add	r5,r5,r17
 144b144:	28c0202c 	andhi	r3,r5,128
 144b148:	1023883a 	mov	r17,r2
 144b14c:	183f6326 	beq	r3,zero,144aedc <__alt_data_end+0xfffe56dc>
 144b150:	00bfe034 	movhi	r2,65408
 144b154:	10bfffc4 	addi	r2,r2,-1
 144b158:	2021883a 	mov	r16,r4
 144b15c:	288a703a 	and	r5,r5,r2
 144b160:	003eb206 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b164:	2c44b03a 	or	r2,r5,r17
 144b168:	8000251e 	bne	r16,zero,144b200 <__adddf3+0x650>
 144b16c:	10004b1e 	bne	r2,zero,144b29c <__adddf3+0x6ec>
 144b170:	4184b03a 	or	r2,r8,r6
 144b174:	103fe226 	beq	r2,zero,144b100 <__alt_data_end+0xfffe5900>
 144b178:	400b883a 	mov	r5,r8
 144b17c:	3023883a 	mov	r17,r6
 144b180:	3825883a 	mov	r18,r7
 144b184:	003ea906 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b188:	20bff804 	addi	r2,r4,-32
 144b18c:	01c00804 	movi	r7,32
 144b190:	4084d83a 	srl	r2,r8,r2
 144b194:	21c07e26 	beq	r4,r7,144b390 <__adddf3+0x7e0>
 144b198:	01c01004 	movi	r7,64
 144b19c:	3909c83a 	sub	r4,r7,r4
 144b1a0:	4110983a 	sll	r8,r8,r4
 144b1a4:	418cb03a 	or	r6,r8,r6
 144b1a8:	300cc03a 	cmpne	r6,r6,zero
 144b1ac:	308cb03a 	or	r6,r6,r2
 144b1b0:	0011883a 	mov	r8,zero
 144b1b4:	003f1b06 	br	144ae24 <__alt_data_end+0xfffe5624>
 144b1b8:	0101ffc4 	movi	r4,2047
 144b1bc:	113fa41e 	bne	r2,r4,144b050 <__alt_data_end+0xfffe5850>
 144b1c0:	400b883a 	mov	r5,r8
 144b1c4:	3023883a 	mov	r17,r6
 144b1c8:	1021883a 	mov	r16,r2
 144b1cc:	3825883a 	mov	r18,r7
 144b1d0:	003e9606 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b1d4:	80001a1e 	bne	r16,zero,144b240 <__adddf3+0x690>
 144b1d8:	2c4eb03a 	or	r7,r5,r17
 144b1dc:	38005526 	beq	r7,zero,144b334 <__adddf3+0x784>
 144b1e0:	0108303a 	nor	r4,zero,r4
 144b1e4:	2000511e 	bne	r4,zero,144b32c <__adddf3+0x77c>
 144b1e8:	89a3883a 	add	r17,r17,r6
 144b1ec:	414b883a 	add	r5,r8,r5
 144b1f0:	898d803a 	cmpltu	r6,r17,r6
 144b1f4:	298b883a 	add	r5,r5,r6
 144b1f8:	1021883a 	mov	r16,r2
 144b1fc:	003f0e06 	br	144ae38 <__alt_data_end+0xfffe5638>
 144b200:	1000341e 	bne	r2,zero,144b2d4 <__adddf3+0x724>
 144b204:	4184b03a 	or	r2,r8,r6
 144b208:	10006f26 	beq	r2,zero,144b3c8 <__adddf3+0x818>
 144b20c:	400b883a 	mov	r5,r8
 144b210:	3023883a 	mov	r17,r6
 144b214:	3825883a 	mov	r18,r7
 144b218:	0401ffc4 	movi	r16,2047
 144b21c:	003e8306 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b220:	2c62b03a 	or	r17,r5,r17
 144b224:	8822c03a 	cmpne	r17,r17,zero
 144b228:	0007883a 	mov	r3,zero
 144b22c:	003f9506 	br	144b084 <__alt_data_end+0xfffe5884>
 144b230:	1021883a 	mov	r16,r2
 144b234:	000b883a 	mov	r5,zero
 144b238:	0023883a 	mov	r17,zero
 144b23c:	003edb06 	br	144adac <__alt_data_end+0xfffe55ac>
 144b240:	01c1ffc4 	movi	r7,2047
 144b244:	11c03b26 	beq	r2,r7,144b334 <__adddf3+0x784>
 144b248:	0109c83a 	sub	r4,zero,r4
 144b24c:	29402034 	orhi	r5,r5,128
 144b250:	01c00e04 	movi	r7,56
 144b254:	39006216 	blt	r7,r4,144b3e0 <__adddf3+0x830>
 144b258:	01c007c4 	movi	r7,31
 144b25c:	39006b16 	blt	r7,r4,144b40c <__adddf3+0x85c>
 144b260:	01c00804 	movi	r7,32
 144b264:	390fc83a 	sub	r7,r7,r4
 144b268:	29d4983a 	sll	r10,r5,r7
 144b26c:	8912d83a 	srl	r9,r17,r4
 144b270:	89ce983a 	sll	r7,r17,r7
 144b274:	2908d83a 	srl	r4,r5,r4
 144b278:	5262b03a 	or	r17,r10,r9
 144b27c:	380ac03a 	cmpne	r5,r7,zero
 144b280:	8962b03a 	or	r17,r17,r5
 144b284:	89a3883a 	add	r17,r17,r6
 144b288:	2211883a 	add	r8,r4,r8
 144b28c:	898d803a 	cmpltu	r6,r17,r6
 144b290:	418b883a 	add	r5,r8,r6
 144b294:	1021883a 	mov	r16,r2
 144b298:	003ee706 	br	144ae38 <__alt_data_end+0xfffe5638>
 144b29c:	4184b03a 	or	r2,r8,r6
 144b2a0:	103e6226 	beq	r2,zero,144ac2c <__alt_data_end+0xfffe542c>
 144b2a4:	8987c83a 	sub	r3,r17,r6
 144b2a8:	88c9803a 	cmpltu	r4,r17,r3
 144b2ac:	2a05c83a 	sub	r2,r5,r8
 144b2b0:	1105c83a 	sub	r2,r2,r4
 144b2b4:	1100202c 	andhi	r4,r2,128
 144b2b8:	203f0426 	beq	r4,zero,144aecc <__alt_data_end+0xfffe56cc>
 144b2bc:	3463c83a 	sub	r17,r6,r17
 144b2c0:	414bc83a 	sub	r5,r8,r5
 144b2c4:	344d803a 	cmpltu	r6,r6,r17
 144b2c8:	298bc83a 	sub	r5,r5,r6
 144b2cc:	3825883a 	mov	r18,r7
 144b2d0:	003e5606 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b2d4:	4184b03a 	or	r2,r8,r6
 144b2d8:	10002b26 	beq	r2,zero,144b388 <__adddf3+0x7d8>
 144b2dc:	2804d0fa 	srli	r2,r5,3
 144b2e0:	8822d0fa 	srli	r17,r17,3
 144b2e4:	280a977a 	slli	r5,r5,29
 144b2e8:	10c0022c 	andhi	r3,r2,8
 144b2ec:	2c62b03a 	or	r17,r5,r17
 144b2f0:	18000826 	beq	r3,zero,144b314 <__adddf3+0x764>
 144b2f4:	4008d0fa 	srli	r4,r8,3
 144b2f8:	20c0022c 	andhi	r3,r4,8
 144b2fc:	1800051e 	bne	r3,zero,144b314 <__adddf3+0x764>
 144b300:	300cd0fa 	srli	r6,r6,3
 144b304:	4010977a 	slli	r8,r8,29
 144b308:	2005883a 	mov	r2,r4
 144b30c:	3825883a 	mov	r18,r7
 144b310:	41a2b03a 	or	r17,r8,r6
 144b314:	880ad77a 	srli	r5,r17,29
 144b318:	100490fa 	slli	r2,r2,3
 144b31c:	882290fa 	slli	r17,r17,3
 144b320:	0401ffc4 	movi	r16,2047
 144b324:	288ab03a 	or	r5,r5,r2
 144b328:	003e4006 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b32c:	01c1ffc4 	movi	r7,2047
 144b330:	11ffc71e 	bne	r2,r7,144b250 <__alt_data_end+0xfffe5a50>
 144b334:	400b883a 	mov	r5,r8
 144b338:	3023883a 	mov	r17,r6
 144b33c:	1021883a 	mov	r16,r2
 144b340:	003e3a06 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b344:	10002d26 	beq	r2,zero,144b3fc <__adddf3+0x84c>
 144b348:	4184b03a 	or	r2,r8,r6
 144b34c:	10000e26 	beq	r2,zero,144b388 <__adddf3+0x7d8>
 144b350:	2804d0fa 	srli	r2,r5,3
 144b354:	8822d0fa 	srli	r17,r17,3
 144b358:	280a977a 	slli	r5,r5,29
 144b35c:	10c0022c 	andhi	r3,r2,8
 144b360:	2c62b03a 	or	r17,r5,r17
 144b364:	183feb26 	beq	r3,zero,144b314 <__alt_data_end+0xfffe5b14>
 144b368:	4008d0fa 	srli	r4,r8,3
 144b36c:	20c0022c 	andhi	r3,r4,8
 144b370:	183fe81e 	bne	r3,zero,144b314 <__alt_data_end+0xfffe5b14>
 144b374:	300cd0fa 	srli	r6,r6,3
 144b378:	4010977a 	slli	r8,r8,29
 144b37c:	2005883a 	mov	r2,r4
 144b380:	41a2b03a 	or	r17,r8,r6
 144b384:	003fe306 	br	144b314 <__alt_data_end+0xfffe5b14>
 144b388:	0401ffc4 	movi	r16,2047
 144b38c:	003e2706 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b390:	0011883a 	mov	r8,zero
 144b394:	003f8306 	br	144b1a4 <__alt_data_end+0xfffe59a4>
 144b398:	193ff804 	addi	r4,r3,-32
 144b39c:	02400804 	movi	r9,32
 144b3a0:	2908d83a 	srl	r4,r5,r4
 144b3a4:	1a402526 	beq	r3,r9,144b43c <__adddf3+0x88c>
 144b3a8:	02401004 	movi	r9,64
 144b3ac:	48c7c83a 	sub	r3,r9,r3
 144b3b0:	28ca983a 	sll	r5,r5,r3
 144b3b4:	2c62b03a 	or	r17,r5,r17
 144b3b8:	8822c03a 	cmpne	r17,r17,zero
 144b3bc:	8922b03a 	or	r17,r17,r4
 144b3c0:	0007883a 	mov	r3,zero
 144b3c4:	003f2f06 	br	144b084 <__alt_data_end+0xfffe5884>
 144b3c8:	01402034 	movhi	r5,128
 144b3cc:	0007883a 	mov	r3,zero
 144b3d0:	297fffc4 	addi	r5,r5,-1
 144b3d4:	047ffe04 	movi	r17,-8
 144b3d8:	0401ffc4 	movi	r16,2047
 144b3dc:	003e7306 	br	144adac <__alt_data_end+0xfffe55ac>
 144b3e0:	2c62b03a 	or	r17,r5,r17
 144b3e4:	8822c03a 	cmpne	r17,r17,zero
 144b3e8:	0009883a 	mov	r4,zero
 144b3ec:	003fa506 	br	144b284 <__alt_data_end+0xfffe5a84>
 144b3f0:	400b883a 	mov	r5,r8
 144b3f4:	3023883a 	mov	r17,r6
 144b3f8:	003e0c06 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b3fc:	400b883a 	mov	r5,r8
 144b400:	3023883a 	mov	r17,r6
 144b404:	0401ffc4 	movi	r16,2047
 144b408:	003e0806 	br	144ac2c <__alt_data_end+0xfffe542c>
 144b40c:	21fff804 	addi	r7,r4,-32
 144b410:	02400804 	movi	r9,32
 144b414:	29ced83a 	srl	r7,r5,r7
 144b418:	22400a26 	beq	r4,r9,144b444 <__adddf3+0x894>
 144b41c:	02401004 	movi	r9,64
 144b420:	4909c83a 	sub	r4,r9,r4
 144b424:	290a983a 	sll	r5,r5,r4
 144b428:	2c62b03a 	or	r17,r5,r17
 144b42c:	8822c03a 	cmpne	r17,r17,zero
 144b430:	89e2b03a 	or	r17,r17,r7
 144b434:	0009883a 	mov	r4,zero
 144b438:	003f9206 	br	144b284 <__alt_data_end+0xfffe5a84>
 144b43c:	000b883a 	mov	r5,zero
 144b440:	003fdc06 	br	144b3b4 <__alt_data_end+0xfffe5bb4>
 144b444:	000b883a 	mov	r5,zero
 144b448:	003ff706 	br	144b428 <__alt_data_end+0xfffe5c28>

0144b44c <__divdf3>:
 144b44c:	defff004 	addi	sp,sp,-64
 144b450:	dc800815 	stw	r18,32(sp)
 144b454:	2824d53a 	srli	r18,r5,20
 144b458:	dd800c15 	stw	r22,48(sp)
 144b45c:	282cd7fa 	srli	r22,r5,31
 144b460:	dc000615 	stw	r16,24(sp)
 144b464:	04000434 	movhi	r16,16
 144b468:	df000e15 	stw	fp,56(sp)
 144b46c:	dd000a15 	stw	r20,40(sp)
 144b470:	dcc00915 	stw	r19,36(sp)
 144b474:	dc400715 	stw	r17,28(sp)
 144b478:	843fffc4 	addi	r16,r16,-1
 144b47c:	dfc00f15 	stw	ra,60(sp)
 144b480:	ddc00d15 	stw	r23,52(sp)
 144b484:	dd400b15 	stw	r21,44(sp)
 144b488:	9481ffcc 	andi	r18,r18,2047
 144b48c:	2029883a 	mov	r20,r4
 144b490:	2027883a 	mov	r19,r4
 144b494:	2c22703a 	and	r17,r5,r16
 144b498:	b7003fcc 	andi	fp,r22,255
 144b49c:	90005e26 	beq	r18,zero,144b618 <__divdf3+0x1cc>
 144b4a0:	0081ffc4 	movi	r2,2047
 144b4a4:	90803526 	beq	r18,r2,144b57c <__divdf3+0x130>
 144b4a8:	8c000434 	orhi	r16,r17,16
 144b4ac:	2004d77a 	srli	r2,r4,29
 144b4b0:	802090fa 	slli	r16,r16,3
 144b4b4:	202690fa 	slli	r19,r4,3
 144b4b8:	94bf0044 	addi	r18,r18,-1023
 144b4bc:	80a2b03a 	or	r17,r16,r2
 144b4c0:	0029883a 	mov	r20,zero
 144b4c4:	0011883a 	mov	r8,zero
 144b4c8:	380ad53a 	srli	r5,r7,20
 144b4cc:	382ed7fa 	srli	r23,r7,31
 144b4d0:	04000434 	movhi	r16,16
 144b4d4:	843fffc4 	addi	r16,r16,-1
 144b4d8:	2941ffcc 	andi	r5,r5,2047
 144b4dc:	302b883a 	mov	r21,r6
 144b4e0:	3c20703a 	and	r16,r7,r16
 144b4e4:	ba403fcc 	andi	r9,r23,255
 144b4e8:	28006726 	beq	r5,zero,144b688 <__divdf3+0x23c>
 144b4ec:	0081ffc4 	movi	r2,2047
 144b4f0:	28805f26 	beq	r5,r2,144b670 <__divdf3+0x224>
 144b4f4:	84000434 	orhi	r16,r16,16
 144b4f8:	3004d77a 	srli	r2,r6,29
 144b4fc:	802090fa 	slli	r16,r16,3
 144b500:	302a90fa 	slli	r21,r6,3
 144b504:	297f0044 	addi	r5,r5,-1023
 144b508:	80a0b03a 	or	r16,r16,r2
 144b50c:	000f883a 	mov	r7,zero
 144b510:	3d06b03a 	or	r3,r7,r20
 144b514:	180690ba 	slli	r3,r3,2
 144b518:	00805174 	movhi	r2,325
 144b51c:	10ad4f04 	addi	r2,r2,-19140
 144b520:	1885883a 	add	r2,r3,r2
 144b524:	10800017 	ldw	r2,0(r2)
 144b528:	b5c8f03a 	xor	r4,r22,r23
 144b52c:	200d883a 	mov	r6,r4
 144b530:	25003fcc 	andi	r20,r4,255
 144b534:	9165c83a 	sub	r18,r18,r5
 144b538:	1000683a 	jmp	r2
 144b53c:	0144b784 	movi	r5,4830
 144b540:	0144b5b4 	movhi	r5,4822
 144b544:	0144b748 	cmpgei	r5,zero,4829
 144b548:	0144b598 	cmpnei	r5,zero,4822
 144b54c:	0144b748 	cmpgei	r5,zero,4829
 144b550:	0144b71c 	xori	r5,zero,4828
 144b554:	0144b748 	cmpgei	r5,zero,4829
 144b558:	0144b598 	cmpnei	r5,zero,4822
 144b55c:	0144b5b4 	movhi	r5,4822
 144b560:	0144b5b4 	movhi	r5,4822
 144b564:	0144b71c 	xori	r5,zero,4828
 144b568:	0144b598 	cmpnei	r5,zero,4822
 144b56c:	0144b5a8 	cmpgeui	r5,zero,4822
 144b570:	0144b5a8 	cmpgeui	r5,zero,4822
 144b574:	0144b5a8 	cmpgeui	r5,zero,4822
 144b578:	0144b758 	cmpnei	r5,zero,4829
 144b57c:	8904b03a 	or	r2,r17,r4
 144b580:	1000631e 	bne	r2,zero,144b710 <__divdf3+0x2c4>
 144b584:	05000204 	movi	r20,8
 144b588:	0023883a 	mov	r17,zero
 144b58c:	0027883a 	mov	r19,zero
 144b590:	02000084 	movi	r8,2
 144b594:	003fcc06 	br	144b4c8 <__alt_data_end+0xfffe5cc8>
 144b598:	8023883a 	mov	r17,r16
 144b59c:	a827883a 	mov	r19,r21
 144b5a0:	4839883a 	mov	fp,r9
 144b5a4:	3811883a 	mov	r8,r7
 144b5a8:	00800084 	movi	r2,2
 144b5ac:	4081531e 	bne	r8,r2,144bafc <__divdf3+0x6b0>
 144b5b0:	e029883a 	mov	r20,fp
 144b5b4:	a180004c 	andi	r6,r20,1
 144b5b8:	0201ffc4 	movi	r8,2047
 144b5bc:	000b883a 	mov	r5,zero
 144b5c0:	0027883a 	mov	r19,zero
 144b5c4:	4010953a 	slli	r8,r8,20
 144b5c8:	30c03fcc 	andi	r3,r6,255
 144b5cc:	04000434 	movhi	r16,16
 144b5d0:	180697fa 	slli	r3,r3,31
 144b5d4:	843fffc4 	addi	r16,r16,-1
 144b5d8:	2c20703a 	and	r16,r5,r16
 144b5dc:	8220b03a 	or	r16,r16,r8
 144b5e0:	80c6b03a 	or	r3,r16,r3
 144b5e4:	9805883a 	mov	r2,r19
 144b5e8:	dfc00f17 	ldw	ra,60(sp)
 144b5ec:	df000e17 	ldw	fp,56(sp)
 144b5f0:	ddc00d17 	ldw	r23,52(sp)
 144b5f4:	dd800c17 	ldw	r22,48(sp)
 144b5f8:	dd400b17 	ldw	r21,44(sp)
 144b5fc:	dd000a17 	ldw	r20,40(sp)
 144b600:	dcc00917 	ldw	r19,36(sp)
 144b604:	dc800817 	ldw	r18,32(sp)
 144b608:	dc400717 	ldw	r17,28(sp)
 144b60c:	dc000617 	ldw	r16,24(sp)
 144b610:	dec01004 	addi	sp,sp,64
 144b614:	f800283a 	ret
 144b618:	8904b03a 	or	r2,r17,r4
 144b61c:	10003726 	beq	r2,zero,144b6fc <__divdf3+0x2b0>
 144b620:	88014d26 	beq	r17,zero,144bb58 <__divdf3+0x70c>
 144b624:	8809883a 	mov	r4,r17
 144b628:	d9800215 	stw	r6,8(sp)
 144b62c:	d9c00515 	stw	r7,20(sp)
 144b630:	14409e40 	call	14409e4 <__clzsi2>
 144b634:	d9800217 	ldw	r6,8(sp)
 144b638:	d9c00517 	ldw	r7,20(sp)
 144b63c:	1007883a 	mov	r3,r2
 144b640:	01000a04 	movi	r4,40
 144b644:	1cfffe04 	addi	r19,r3,-8
 144b648:	20c9c83a 	sub	r4,r4,r3
 144b64c:	8cca983a 	sll	r5,r17,r19
 144b650:	a108d83a 	srl	r4,r20,r4
 144b654:	a4e6983a 	sll	r19,r20,r19
 144b658:	2162b03a 	or	r17,r4,r5
 144b65c:	04bf0344 	movi	r18,-1011
 144b660:	90e5c83a 	sub	r18,r18,r3
 144b664:	0029883a 	mov	r20,zero
 144b668:	0011883a 	mov	r8,zero
 144b66c:	003f9606 	br	144b4c8 <__alt_data_end+0xfffe5cc8>
 144b670:	8184b03a 	or	r2,r16,r6
 144b674:	10001f1e 	bne	r2,zero,144b6f4 <__divdf3+0x2a8>
 144b678:	0021883a 	mov	r16,zero
 144b67c:	002b883a 	mov	r21,zero
 144b680:	01c00084 	movi	r7,2
 144b684:	003fa206 	br	144b510 <__alt_data_end+0xfffe5d10>
 144b688:	8184b03a 	or	r2,r16,r6
 144b68c:	10001526 	beq	r2,zero,144b6e4 <__divdf3+0x298>
 144b690:	80013d26 	beq	r16,zero,144bb88 <__divdf3+0x73c>
 144b694:	8009883a 	mov	r4,r16
 144b698:	d9800215 	stw	r6,8(sp)
 144b69c:	da000315 	stw	r8,12(sp)
 144b6a0:	da400415 	stw	r9,16(sp)
 144b6a4:	14409e40 	call	14409e4 <__clzsi2>
 144b6a8:	d9800217 	ldw	r6,8(sp)
 144b6ac:	da000317 	ldw	r8,12(sp)
 144b6b0:	da400417 	ldw	r9,16(sp)
 144b6b4:	1007883a 	mov	r3,r2
 144b6b8:	01000a04 	movi	r4,40
 144b6bc:	1d7ffe04 	addi	r21,r3,-8
 144b6c0:	20c9c83a 	sub	r4,r4,r3
 144b6c4:	8560983a 	sll	r16,r16,r21
 144b6c8:	3108d83a 	srl	r4,r6,r4
 144b6cc:	356a983a 	sll	r21,r6,r21
 144b6d0:	2420b03a 	or	r16,r4,r16
 144b6d4:	017f0344 	movi	r5,-1011
 144b6d8:	28cbc83a 	sub	r5,r5,r3
 144b6dc:	000f883a 	mov	r7,zero
 144b6e0:	003f8b06 	br	144b510 <__alt_data_end+0xfffe5d10>
 144b6e4:	0021883a 	mov	r16,zero
 144b6e8:	002b883a 	mov	r21,zero
 144b6ec:	01c00044 	movi	r7,1
 144b6f0:	003f8706 	br	144b510 <__alt_data_end+0xfffe5d10>
 144b6f4:	01c000c4 	movi	r7,3
 144b6f8:	003f8506 	br	144b510 <__alt_data_end+0xfffe5d10>
 144b6fc:	05000104 	movi	r20,4
 144b700:	0023883a 	mov	r17,zero
 144b704:	0027883a 	mov	r19,zero
 144b708:	02000044 	movi	r8,1
 144b70c:	003f6e06 	br	144b4c8 <__alt_data_end+0xfffe5cc8>
 144b710:	05000304 	movi	r20,12
 144b714:	020000c4 	movi	r8,3
 144b718:	003f6b06 	br	144b4c8 <__alt_data_end+0xfffe5cc8>
 144b71c:	01400434 	movhi	r5,16
 144b720:	000d883a 	mov	r6,zero
 144b724:	297fffc4 	addi	r5,r5,-1
 144b728:	04ffffc4 	movi	r19,-1
 144b72c:	0201ffc4 	movi	r8,2047
 144b730:	003fa406 	br	144b5c4 <__alt_data_end+0xfffe5dc4>
 144b734:	043f0084 	movi	r16,-1022
 144b738:	84a1c83a 	sub	r16,r16,r18
 144b73c:	00800e04 	movi	r2,56
 144b740:	14014d0e 	bge	r2,r16,144bc78 <__divdf3+0x82c>
 144b744:	a180004c 	andi	r6,r20,1
 144b748:	0011883a 	mov	r8,zero
 144b74c:	000b883a 	mov	r5,zero
 144b750:	0027883a 	mov	r19,zero
 144b754:	003f9b06 	br	144b5c4 <__alt_data_end+0xfffe5dc4>
 144b758:	8880022c 	andhi	r2,r17,8
 144b75c:	1000f026 	beq	r2,zero,144bb20 <__divdf3+0x6d4>
 144b760:	8080022c 	andhi	r2,r16,8
 144b764:	1000ee1e 	bne	r2,zero,144bb20 <__divdf3+0x6d4>
 144b768:	00800434 	movhi	r2,16
 144b76c:	81400234 	orhi	r5,r16,8
 144b770:	10bfffc4 	addi	r2,r2,-1
 144b774:	b80d883a 	mov	r6,r23
 144b778:	288a703a 	and	r5,r5,r2
 144b77c:	a827883a 	mov	r19,r21
 144b780:	003fea06 	br	144b72c <__alt_data_end+0xfffe5f2c>
 144b784:	84411c36 	bltu	r16,r17,144bbf8 <__divdf3+0x7ac>
 144b788:	8c011a26 	beq	r17,r16,144bbf4 <__divdf3+0x7a8>
 144b78c:	94bfffc4 	addi	r18,r18,-1
 144b790:	dcc00015 	stw	r19,0(sp)
 144b794:	8811883a 	mov	r8,r17
 144b798:	002d883a 	mov	r22,zero
 144b79c:	a80cd63a 	srli	r6,r21,24
 144b7a0:	8020923a 	slli	r16,r16,8
 144b7a4:	a82a923a 	slli	r21,r21,8
 144b7a8:	4009883a 	mov	r4,r8
 144b7ac:	342eb03a 	or	r23,r6,r16
 144b7b0:	dd400115 	stw	r21,4(sp)
 144b7b4:	b82ad43a 	srli	r21,r23,16
 144b7b8:	da000315 	stw	r8,12(sp)
 144b7bc:	bcffffcc 	andi	r19,r23,65535
 144b7c0:	a80b883a 	mov	r5,r21
 144b7c4:	144aba00 	call	144aba0 <__udivsi3>
 144b7c8:	1009883a 	mov	r4,r2
 144b7cc:	980b883a 	mov	r5,r19
 144b7d0:	1023883a 	mov	r17,r2
 144b7d4:	1440a480 	call	1440a48 <__mulsi3>
 144b7d8:	da000317 	ldw	r8,12(sp)
 144b7dc:	a80b883a 	mov	r5,r21
 144b7e0:	1039883a 	mov	fp,r2
 144b7e4:	4009883a 	mov	r4,r8
 144b7e8:	144aba80 	call	144aba8 <__umodsi3>
 144b7ec:	d8c00017 	ldw	r3,0(sp)
 144b7f0:	1004943a 	slli	r2,r2,16
 144b7f4:	1810d43a 	srli	r8,r3,16
 144b7f8:	120eb03a 	or	r7,r2,r8
 144b7fc:	3f00062e 	bgeu	r7,fp,144b818 <__divdf3+0x3cc>
 144b800:	3dcf883a 	add	r7,r7,r23
 144b804:	88bfffc4 	addi	r2,r17,-1
 144b808:	3dc10a36 	bltu	r7,r23,144bc34 <__divdf3+0x7e8>
 144b80c:	3f01092e 	bgeu	r7,fp,144bc34 <__divdf3+0x7e8>
 144b810:	8c7fff84 	addi	r17,r17,-2
 144b814:	3dcf883a 	add	r7,r7,r23
 144b818:	3f39c83a 	sub	fp,r7,fp
 144b81c:	e009883a 	mov	r4,fp
 144b820:	a80b883a 	mov	r5,r21
 144b824:	144aba00 	call	144aba0 <__udivsi3>
 144b828:	1009883a 	mov	r4,r2
 144b82c:	980b883a 	mov	r5,r19
 144b830:	1021883a 	mov	r16,r2
 144b834:	1440a480 	call	1440a48 <__mulsi3>
 144b838:	e009883a 	mov	r4,fp
 144b83c:	a80b883a 	mov	r5,r21
 144b840:	d8800315 	stw	r2,12(sp)
 144b844:	144aba80 	call	144aba8 <__umodsi3>
 144b848:	d9000017 	ldw	r4,0(sp)
 144b84c:	1004943a 	slli	r2,r2,16
 144b850:	da000317 	ldw	r8,12(sp)
 144b854:	20ffffcc 	andi	r3,r4,65535
 144b858:	10ceb03a 	or	r7,r2,r3
 144b85c:	3a00062e 	bgeu	r7,r8,144b878 <__divdf3+0x42c>
 144b860:	3dcf883a 	add	r7,r7,r23
 144b864:	80bfffc4 	addi	r2,r16,-1
 144b868:	3dc0f036 	bltu	r7,r23,144bc2c <__divdf3+0x7e0>
 144b86c:	3a00ef2e 	bgeu	r7,r8,144bc2c <__divdf3+0x7e0>
 144b870:	843fff84 	addi	r16,r16,-2
 144b874:	3dcf883a 	add	r7,r7,r23
 144b878:	d8c00117 	ldw	r3,4(sp)
 144b87c:	8822943a 	slli	r17,r17,16
 144b880:	3a0fc83a 	sub	r7,r7,r8
 144b884:	1806d43a 	srli	r3,r3,16
 144b888:	8462b03a 	or	r17,r16,r17
 144b88c:	8affffcc 	andi	r11,r17,65535
 144b890:	d8c00015 	stw	r3,0(sp)
 144b894:	d8c00117 	ldw	r3,4(sp)
 144b898:	8820d43a 	srli	r16,r17,16
 144b89c:	5809883a 	mov	r4,r11
 144b8a0:	1f3fffcc 	andi	fp,r3,65535
 144b8a4:	e00b883a 	mov	r5,fp
 144b8a8:	d9c00515 	stw	r7,20(sp)
 144b8ac:	dac00215 	stw	r11,8(sp)
 144b8b0:	1440a480 	call	1440a48 <__mulsi3>
 144b8b4:	8009883a 	mov	r4,r16
 144b8b8:	e00b883a 	mov	r5,fp
 144b8bc:	d8800415 	stw	r2,16(sp)
 144b8c0:	1440a480 	call	1440a48 <__mulsi3>
 144b8c4:	d9400017 	ldw	r5,0(sp)
 144b8c8:	8009883a 	mov	r4,r16
 144b8cc:	d8800315 	stw	r2,12(sp)
 144b8d0:	1440a480 	call	1440a48 <__mulsi3>
 144b8d4:	dac00217 	ldw	r11,8(sp)
 144b8d8:	d9400017 	ldw	r5,0(sp)
 144b8dc:	d8800215 	stw	r2,8(sp)
 144b8e0:	5809883a 	mov	r4,r11
 144b8e4:	1440a480 	call	1440a48 <__mulsi3>
 144b8e8:	da400417 	ldw	r9,16(sp)
 144b8ec:	da800317 	ldw	r10,12(sp)
 144b8f0:	d9c00517 	ldw	r7,20(sp)
 144b8f4:	480ad43a 	srli	r5,r9,16
 144b8f8:	5085883a 	add	r2,r10,r2
 144b8fc:	db000217 	ldw	r12,8(sp)
 144b900:	1151883a 	add	r8,r2,r5
 144b904:	4280022e 	bgeu	r8,r10,144b910 <__divdf3+0x4c4>
 144b908:	00800074 	movhi	r2,1
 144b90c:	6099883a 	add	r12,r12,r2
 144b910:	400ad43a 	srli	r5,r8,16
 144b914:	4010943a 	slli	r8,r8,16
 144b918:	4c3fffcc 	andi	r16,r9,65535
 144b91c:	6149883a 	add	r4,r12,r5
 144b920:	4411883a 	add	r8,r8,r16
 144b924:	3900a736 	bltu	r7,r4,144bbc4 <__divdf3+0x778>
 144b928:	3900c426 	beq	r7,r4,144bc3c <__divdf3+0x7f0>
 144b92c:	3909c83a 	sub	r4,r7,r4
 144b930:	b221c83a 	sub	r16,r22,r8
 144b934:	b42d803a 	cmpltu	r22,r22,r16
 144b938:	25adc83a 	sub	r22,r4,r22
 144b93c:	b5c0c626 	beq	r22,r23,144bc58 <__divdf3+0x80c>
 144b940:	b009883a 	mov	r4,r22
 144b944:	a80b883a 	mov	r5,r21
 144b948:	144aba00 	call	144aba0 <__udivsi3>
 144b94c:	1009883a 	mov	r4,r2
 144b950:	980b883a 	mov	r5,r19
 144b954:	d8800315 	stw	r2,12(sp)
 144b958:	1440a480 	call	1440a48 <__mulsi3>
 144b95c:	a80b883a 	mov	r5,r21
 144b960:	b009883a 	mov	r4,r22
 144b964:	d8800415 	stw	r2,16(sp)
 144b968:	144aba80 	call	144aba8 <__umodsi3>
 144b96c:	1004943a 	slli	r2,r2,16
 144b970:	800ed43a 	srli	r7,r16,16
 144b974:	da400417 	ldw	r9,16(sp)
 144b978:	da000317 	ldw	r8,12(sp)
 144b97c:	11cab03a 	or	r5,r2,r7
 144b980:	2a40062e 	bgeu	r5,r9,144b99c <__divdf3+0x550>
 144b984:	2dcb883a 	add	r5,r5,r23
 144b988:	40bfffc4 	addi	r2,r8,-1
 144b98c:	2dc0b436 	bltu	r5,r23,144bc60 <__divdf3+0x814>
 144b990:	2a40b32e 	bgeu	r5,r9,144bc60 <__divdf3+0x814>
 144b994:	423fff84 	addi	r8,r8,-2
 144b998:	2dcb883a 	add	r5,r5,r23
 144b99c:	2a6dc83a 	sub	r22,r5,r9
 144b9a0:	b009883a 	mov	r4,r22
 144b9a4:	a80b883a 	mov	r5,r21
 144b9a8:	da000315 	stw	r8,12(sp)
 144b9ac:	144aba00 	call	144aba0 <__udivsi3>
 144b9b0:	980b883a 	mov	r5,r19
 144b9b4:	1009883a 	mov	r4,r2
 144b9b8:	d8800415 	stw	r2,16(sp)
 144b9bc:	1440a480 	call	1440a48 <__mulsi3>
 144b9c0:	b009883a 	mov	r4,r22
 144b9c4:	a80b883a 	mov	r5,r21
 144b9c8:	1027883a 	mov	r19,r2
 144b9cc:	144aba80 	call	144aba8 <__umodsi3>
 144b9d0:	1004943a 	slli	r2,r2,16
 144b9d4:	843fffcc 	andi	r16,r16,65535
 144b9d8:	da000317 	ldw	r8,12(sp)
 144b9dc:	140eb03a 	or	r7,r2,r16
 144b9e0:	da400417 	ldw	r9,16(sp)
 144b9e4:	3cc0062e 	bgeu	r7,r19,144ba00 <__divdf3+0x5b4>
 144b9e8:	3dcf883a 	add	r7,r7,r23
 144b9ec:	48bfffc4 	addi	r2,r9,-1
 144b9f0:	3dc09d36 	bltu	r7,r23,144bc68 <__divdf3+0x81c>
 144b9f4:	3cc09c2e 	bgeu	r7,r19,144bc68 <__divdf3+0x81c>
 144b9f8:	4a7fff84 	addi	r9,r9,-2
 144b9fc:	3dcf883a 	add	r7,r7,r23
 144ba00:	4010943a 	slli	r8,r8,16
 144ba04:	3cebc83a 	sub	r21,r7,r19
 144ba08:	e00b883a 	mov	r5,fp
 144ba0c:	4a26b03a 	or	r19,r9,r8
 144ba10:	99ffffcc 	andi	r7,r19,65535
 144ba14:	9820d43a 	srli	r16,r19,16
 144ba18:	3809883a 	mov	r4,r7
 144ba1c:	d9c00515 	stw	r7,20(sp)
 144ba20:	1440a480 	call	1440a48 <__mulsi3>
 144ba24:	8009883a 	mov	r4,r16
 144ba28:	e00b883a 	mov	r5,fp
 144ba2c:	102d883a 	mov	r22,r2
 144ba30:	1440a480 	call	1440a48 <__mulsi3>
 144ba34:	d9400017 	ldw	r5,0(sp)
 144ba38:	8009883a 	mov	r4,r16
 144ba3c:	1039883a 	mov	fp,r2
 144ba40:	1440a480 	call	1440a48 <__mulsi3>
 144ba44:	d9c00517 	ldw	r7,20(sp)
 144ba48:	d9400017 	ldw	r5,0(sp)
 144ba4c:	1021883a 	mov	r16,r2
 144ba50:	3809883a 	mov	r4,r7
 144ba54:	1440a480 	call	1440a48 <__mulsi3>
 144ba58:	b008d43a 	srli	r4,r22,16
 144ba5c:	e085883a 	add	r2,fp,r2
 144ba60:	1109883a 	add	r4,r2,r4
 144ba64:	2700022e 	bgeu	r4,fp,144ba70 <__divdf3+0x624>
 144ba68:	00800074 	movhi	r2,1
 144ba6c:	80a1883a 	add	r16,r16,r2
 144ba70:	200ad43a 	srli	r5,r4,16
 144ba74:	2008943a 	slli	r4,r4,16
 144ba78:	b5bfffcc 	andi	r22,r22,65535
 144ba7c:	8145883a 	add	r2,r16,r5
 144ba80:	2589883a 	add	r4,r4,r22
 144ba84:	a8802c36 	bltu	r21,r2,144bb38 <__divdf3+0x6ec>
 144ba88:	a880a426 	beq	r21,r2,144bd1c <__divdf3+0x8d0>
 144ba8c:	9cc00054 	ori	r19,r19,1
 144ba90:	9200ffc4 	addi	r8,r18,1023
 144ba94:	023f270e 	bge	zero,r8,144b734 <__alt_data_end+0xfffe5f34>
 144ba98:	988001cc 	andi	r2,r19,7
 144ba9c:	10000726 	beq	r2,zero,144babc <__divdf3+0x670>
 144baa0:	990003cc 	andi	r4,r19,15
 144baa4:	00800104 	movi	r2,4
 144baa8:	20800426 	beq	r4,r2,144babc <__divdf3+0x670>
 144baac:	9885883a 	add	r2,r19,r2
 144bab0:	14e7803a 	cmpltu	r19,r2,r19
 144bab4:	8ce3883a 	add	r17,r17,r19
 144bab8:	1027883a 	mov	r19,r2
 144babc:	8880402c 	andhi	r2,r17,256
 144bac0:	10000426 	beq	r2,zero,144bad4 <__divdf3+0x688>
 144bac4:	00bfc034 	movhi	r2,65280
 144bac8:	10bfffc4 	addi	r2,r2,-1
 144bacc:	92010004 	addi	r8,r18,1024
 144bad0:	88a2703a 	and	r17,r17,r2
 144bad4:	0081ff84 	movi	r2,2046
 144bad8:	123eb616 	blt	r2,r8,144b5b4 <__alt_data_end+0xfffe5db4>
 144badc:	9826d0fa 	srli	r19,r19,3
 144bae0:	8804977a 	slli	r2,r17,29
 144bae4:	8820927a 	slli	r16,r17,9
 144bae8:	4201ffcc 	andi	r8,r8,2047
 144baec:	14e6b03a 	or	r19,r2,r19
 144baf0:	800ad33a 	srli	r5,r16,12
 144baf4:	a180004c 	andi	r6,r20,1
 144baf8:	003eb206 	br	144b5c4 <__alt_data_end+0xfffe5dc4>
 144bafc:	008000c4 	movi	r2,3
 144bb00:	4080ac26 	beq	r8,r2,144bdb4 <__divdf3+0x968>
 144bb04:	00800044 	movi	r2,1
 144bb08:	4080591e 	bne	r8,r2,144bc70 <__divdf3+0x824>
 144bb0c:	e00d883a 	mov	r6,fp
 144bb10:	0011883a 	mov	r8,zero
 144bb14:	000b883a 	mov	r5,zero
 144bb18:	0027883a 	mov	r19,zero
 144bb1c:	003ea906 	br	144b5c4 <__alt_data_end+0xfffe5dc4>
 144bb20:	00800434 	movhi	r2,16
 144bb24:	89400234 	orhi	r5,r17,8
 144bb28:	10bfffc4 	addi	r2,r2,-1
 144bb2c:	b00d883a 	mov	r6,r22
 144bb30:	288a703a 	and	r5,r5,r2
 144bb34:	003efd06 	br	144b72c <__alt_data_end+0xfffe5f2c>
 144bb38:	adcf883a 	add	r7,r21,r23
 144bb3c:	997fffc4 	addi	r5,r19,-1
 144bb40:	3dc0412e 	bgeu	r7,r23,144bc48 <__divdf3+0x7fc>
 144bb44:	2827883a 	mov	r19,r5
 144bb48:	38bfd01e 	bne	r7,r2,144ba8c <__alt_data_end+0xfffe628c>
 144bb4c:	d8c00117 	ldw	r3,4(sp)
 144bb50:	193fce1e 	bne	r3,r4,144ba8c <__alt_data_end+0xfffe628c>
 144bb54:	003fce06 	br	144ba90 <__alt_data_end+0xfffe6290>
 144bb58:	d9800215 	stw	r6,8(sp)
 144bb5c:	d9c00515 	stw	r7,20(sp)
 144bb60:	14409e40 	call	14409e4 <__clzsi2>
 144bb64:	10c00804 	addi	r3,r2,32
 144bb68:	010009c4 	movi	r4,39
 144bb6c:	d9800217 	ldw	r6,8(sp)
 144bb70:	d9c00517 	ldw	r7,20(sp)
 144bb74:	20feb20e 	bge	r4,r3,144b640 <__alt_data_end+0xfffe5e40>
 144bb78:	117ffe04 	addi	r5,r2,-8
 144bb7c:	a162983a 	sll	r17,r20,r5
 144bb80:	0027883a 	mov	r19,zero
 144bb84:	003eb506 	br	144b65c <__alt_data_end+0xfffe5e5c>
 144bb88:	3009883a 	mov	r4,r6
 144bb8c:	d9800215 	stw	r6,8(sp)
 144bb90:	da000315 	stw	r8,12(sp)
 144bb94:	da400415 	stw	r9,16(sp)
 144bb98:	14409e40 	call	14409e4 <__clzsi2>
 144bb9c:	10c00804 	addi	r3,r2,32
 144bba0:	010009c4 	movi	r4,39
 144bba4:	d9800217 	ldw	r6,8(sp)
 144bba8:	da000317 	ldw	r8,12(sp)
 144bbac:	da400417 	ldw	r9,16(sp)
 144bbb0:	20fec10e 	bge	r4,r3,144b6b8 <__alt_data_end+0xfffe5eb8>
 144bbb4:	10bffe04 	addi	r2,r2,-8
 144bbb8:	a8a0983a 	sll	r16,r21,r2
 144bbbc:	002b883a 	mov	r21,zero
 144bbc0:	003ec406 	br	144b6d4 <__alt_data_end+0xfffe5ed4>
 144bbc4:	d8c00117 	ldw	r3,4(sp)
 144bbc8:	b0ed883a 	add	r22,r22,r3
 144bbcc:	b0c5803a 	cmpltu	r2,r22,r3
 144bbd0:	15c5883a 	add	r2,r2,r23
 144bbd4:	11cf883a 	add	r7,r2,r7
 144bbd8:	88bfffc4 	addi	r2,r17,-1
 144bbdc:	b9c00d2e 	bgeu	r23,r7,144bc14 <__divdf3+0x7c8>
 144bbe0:	39003f36 	bltu	r7,r4,144bce0 <__divdf3+0x894>
 144bbe4:	21c06a26 	beq	r4,r7,144bd90 <__divdf3+0x944>
 144bbe8:	3909c83a 	sub	r4,r7,r4
 144bbec:	1023883a 	mov	r17,r2
 144bbf0:	003f4f06 	br	144b930 <__alt_data_end+0xfffe6130>
 144bbf4:	9d7ee536 	bltu	r19,r21,144b78c <__alt_data_end+0xfffe5f8c>
 144bbf8:	982ed07a 	srli	r23,r19,1
 144bbfc:	880497fa 	slli	r2,r17,31
 144bc00:	8810d07a 	srli	r8,r17,1
 144bc04:	982c97fa 	slli	r22,r19,31
 144bc08:	b884b03a 	or	r2,r23,r2
 144bc0c:	d8800015 	stw	r2,0(sp)
 144bc10:	003ee206 	br	144b79c <__alt_data_end+0xfffe5f9c>
 144bc14:	3dfff41e 	bne	r7,r23,144bbe8 <__alt_data_end+0xfffe63e8>
 144bc18:	d8c00117 	ldw	r3,4(sp)
 144bc1c:	b0fff02e 	bgeu	r22,r3,144bbe0 <__alt_data_end+0xfffe63e0>
 144bc20:	b909c83a 	sub	r4,r23,r4
 144bc24:	1023883a 	mov	r17,r2
 144bc28:	003f4106 	br	144b930 <__alt_data_end+0xfffe6130>
 144bc2c:	1021883a 	mov	r16,r2
 144bc30:	003f1106 	br	144b878 <__alt_data_end+0xfffe6078>
 144bc34:	1023883a 	mov	r17,r2
 144bc38:	003ef706 	br	144b818 <__alt_data_end+0xfffe6018>
 144bc3c:	b23fe136 	bltu	r22,r8,144bbc4 <__alt_data_end+0xfffe63c4>
 144bc40:	0009883a 	mov	r4,zero
 144bc44:	003f3a06 	br	144b930 <__alt_data_end+0xfffe6130>
 144bc48:	38802c36 	bltu	r7,r2,144bcfc <__divdf3+0x8b0>
 144bc4c:	11c05326 	beq	r2,r7,144bd9c <__divdf3+0x950>
 144bc50:	2827883a 	mov	r19,r5
 144bc54:	003f8d06 	br	144ba8c <__alt_data_end+0xfffe628c>
 144bc58:	04ffffc4 	movi	r19,-1
 144bc5c:	003f8c06 	br	144ba90 <__alt_data_end+0xfffe6290>
 144bc60:	1011883a 	mov	r8,r2
 144bc64:	003f4d06 	br	144b99c <__alt_data_end+0xfffe619c>
 144bc68:	1013883a 	mov	r9,r2
 144bc6c:	003f6406 	br	144ba00 <__alt_data_end+0xfffe6200>
 144bc70:	e029883a 	mov	r20,fp
 144bc74:	003f8606 	br	144ba90 <__alt_data_end+0xfffe6290>
 144bc78:	008007c4 	movi	r2,31
 144bc7c:	14002a16 	blt	r2,r16,144bd28 <__divdf3+0x8dc>
 144bc80:	91410784 	addi	r5,r18,1054
 144bc84:	9c0cd83a 	srl	r6,r19,r16
 144bc88:	8948983a 	sll	r4,r17,r5
 144bc8c:	9944983a 	sll	r2,r19,r5
 144bc90:	8c20d83a 	srl	r16,r17,r16
 144bc94:	3108b03a 	or	r4,r6,r4
 144bc98:	1004c03a 	cmpne	r2,r2,zero
 144bc9c:	2084b03a 	or	r2,r4,r2
 144bca0:	110001cc 	andi	r4,r2,7
 144bca4:	20000726 	beq	r4,zero,144bcc4 <__divdf3+0x878>
 144bca8:	114003cc 	andi	r5,r2,15
 144bcac:	01000104 	movi	r4,4
 144bcb0:	29000426 	beq	r5,r4,144bcc4 <__divdf3+0x878>
 144bcb4:	11000104 	addi	r4,r2,4
 144bcb8:	2085803a 	cmpltu	r2,r4,r2
 144bcbc:	80a1883a 	add	r16,r16,r2
 144bcc0:	2005883a 	mov	r2,r4
 144bcc4:	8100202c 	andhi	r4,r16,128
 144bcc8:	20002d26 	beq	r4,zero,144bd80 <__divdf3+0x934>
 144bccc:	a180004c 	andi	r6,r20,1
 144bcd0:	02000044 	movi	r8,1
 144bcd4:	000b883a 	mov	r5,zero
 144bcd8:	0027883a 	mov	r19,zero
 144bcdc:	003e3906 	br	144b5c4 <__alt_data_end+0xfffe5dc4>
 144bce0:	d8c00117 	ldw	r3,4(sp)
 144bce4:	8c7fff84 	addi	r17,r17,-2
 144bce8:	b0ed883a 	add	r22,r22,r3
 144bcec:	b0c5803a 	cmpltu	r2,r22,r3
 144bcf0:	15c5883a 	add	r2,r2,r23
 144bcf4:	11cf883a 	add	r7,r2,r7
 144bcf8:	003f0c06 	br	144b92c <__alt_data_end+0xfffe612c>
 144bcfc:	d8c00117 	ldw	r3,4(sp)
 144bd00:	997fff84 	addi	r5,r19,-2
 144bd04:	18d1883a 	add	r8,r3,r3
 144bd08:	40c7803a 	cmpltu	r3,r8,r3
 144bd0c:	1dcd883a 	add	r6,r3,r23
 144bd10:	398f883a 	add	r7,r7,r6
 144bd14:	da000115 	stw	r8,4(sp)
 144bd18:	003f8a06 	br	144bb44 <__alt_data_end+0xfffe6344>
 144bd1c:	203f861e 	bne	r4,zero,144bb38 <__alt_data_end+0xfffe6338>
 144bd20:	d8000115 	stw	zero,4(sp)
 144bd24:	003f8906 	br	144bb4c <__alt_data_end+0xfffe634c>
 144bd28:	00bef884 	movi	r2,-1054
 144bd2c:	1485c83a 	sub	r2,r2,r18
 144bd30:	01000804 	movi	r4,32
 144bd34:	8884d83a 	srl	r2,r17,r2
 144bd38:	81001c26 	beq	r16,r4,144bdac <__divdf3+0x960>
 144bd3c:	91010f84 	addi	r4,r18,1086
 144bd40:	8908983a 	sll	r4,r17,r4
 144bd44:	24c8b03a 	or	r4,r4,r19
 144bd48:	2008c03a 	cmpne	r4,r4,zero
 144bd4c:	2084b03a 	or	r2,r4,r2
 144bd50:	140001cc 	andi	r16,r2,7
 144bd54:	8000061e 	bne	r16,zero,144bd70 <__divdf3+0x924>
 144bd58:	000b883a 	mov	r5,zero
 144bd5c:	1004d0fa 	srli	r2,r2,3
 144bd60:	a180004c 	andi	r6,r20,1
 144bd64:	0011883a 	mov	r8,zero
 144bd68:	1426b03a 	or	r19,r2,r16
 144bd6c:	003e1506 	br	144b5c4 <__alt_data_end+0xfffe5dc4>
 144bd70:	114003cc 	andi	r5,r2,15
 144bd74:	01000104 	movi	r4,4
 144bd78:	0021883a 	mov	r16,zero
 144bd7c:	293fcd1e 	bne	r5,r4,144bcb4 <__alt_data_end+0xfffe64b4>
 144bd80:	800a927a 	slli	r5,r16,9
 144bd84:	8020977a 	slli	r16,r16,29
 144bd88:	280ad33a 	srli	r5,r5,12
 144bd8c:	003ff306 	br	144bd5c <__alt_data_end+0xfffe655c>
 144bd90:	b23fd336 	bltu	r22,r8,144bce0 <__alt_data_end+0xfffe64e0>
 144bd94:	1023883a 	mov	r17,r2
 144bd98:	003fa906 	br	144bc40 <__alt_data_end+0xfffe6440>
 144bd9c:	d8c00117 	ldw	r3,4(sp)
 144bda0:	193fd636 	bltu	r3,r4,144bcfc <__alt_data_end+0xfffe64fc>
 144bda4:	2827883a 	mov	r19,r5
 144bda8:	003f6806 	br	144bb4c <__alt_data_end+0xfffe634c>
 144bdac:	0009883a 	mov	r4,zero
 144bdb0:	003fe406 	br	144bd44 <__alt_data_end+0xfffe6544>
 144bdb4:	00800434 	movhi	r2,16
 144bdb8:	89400234 	orhi	r5,r17,8
 144bdbc:	10bfffc4 	addi	r2,r2,-1
 144bdc0:	e00d883a 	mov	r6,fp
 144bdc4:	288a703a 	and	r5,r5,r2
 144bdc8:	003e5806 	br	144b72c <__alt_data_end+0xfffe5f2c>

0144bdcc <__eqdf2>:
 144bdcc:	2804d53a 	srli	r2,r5,20
 144bdd0:	3806d53a 	srli	r3,r7,20
 144bdd4:	02000434 	movhi	r8,16
 144bdd8:	423fffc4 	addi	r8,r8,-1
 144bddc:	1081ffcc 	andi	r2,r2,2047
 144bde0:	0241ffc4 	movi	r9,2047
 144bde4:	2a14703a 	and	r10,r5,r8
 144bde8:	18c1ffcc 	andi	r3,r3,2047
 144bdec:	3a10703a 	and	r8,r7,r8
 144bdf0:	280ad7fa 	srli	r5,r5,31
 144bdf4:	380ed7fa 	srli	r7,r7,31
 144bdf8:	12400f26 	beq	r2,r9,144be38 <__eqdf2+0x6c>
 144bdfc:	0241ffc4 	movi	r9,2047
 144be00:	1a400326 	beq	r3,r9,144be10 <__eqdf2+0x44>
 144be04:	10c00526 	beq	r2,r3,144be1c <__eqdf2+0x50>
 144be08:	00800044 	movi	r2,1
 144be0c:	f800283a 	ret
 144be10:	4192b03a 	or	r9,r8,r6
 144be14:	483ffc1e 	bne	r9,zero,144be08 <__alt_data_end+0xfffe6608>
 144be18:	10fffb1e 	bne	r2,r3,144be08 <__alt_data_end+0xfffe6608>
 144be1c:	523ffa1e 	bne	r10,r8,144be08 <__alt_data_end+0xfffe6608>
 144be20:	21bff91e 	bne	r4,r6,144be08 <__alt_data_end+0xfffe6608>
 144be24:	29c00826 	beq	r5,r7,144be48 <__eqdf2+0x7c>
 144be28:	103ff71e 	bne	r2,zero,144be08 <__alt_data_end+0xfffe6608>
 144be2c:	5104b03a 	or	r2,r10,r4
 144be30:	1004c03a 	cmpne	r2,r2,zero
 144be34:	f800283a 	ret
 144be38:	5112b03a 	or	r9,r10,r4
 144be3c:	483fef26 	beq	r9,zero,144bdfc <__alt_data_end+0xfffe65fc>
 144be40:	00800044 	movi	r2,1
 144be44:	f800283a 	ret
 144be48:	0005883a 	mov	r2,zero
 144be4c:	f800283a 	ret

0144be50 <__gedf2>:
 144be50:	2804d53a 	srli	r2,r5,20
 144be54:	3806d53a 	srli	r3,r7,20
 144be58:	02000434 	movhi	r8,16
 144be5c:	423fffc4 	addi	r8,r8,-1
 144be60:	0241ffc4 	movi	r9,2047
 144be64:	1081ffcc 	andi	r2,r2,2047
 144be68:	2a14703a 	and	r10,r5,r8
 144be6c:	1a46703a 	and	r3,r3,r9
 144be70:	3a10703a 	and	r8,r7,r8
 144be74:	280ad7fa 	srli	r5,r5,31
 144be78:	380ed7fa 	srli	r7,r7,31
 144be7c:	12400b26 	beq	r2,r9,144beac <__gedf2+0x5c>
 144be80:	1a401626 	beq	r3,r9,144bedc <__gedf2+0x8c>
 144be84:	10000c1e 	bne	r2,zero,144beb8 <__gedf2+0x68>
 144be88:	5112b03a 	or	r9,r10,r4
 144be8c:	4813003a 	cmpeq	r9,r9,zero
 144be90:	4817883a 	mov	r11,r9
 144be94:	18000c1e 	bne	r3,zero,144bec8 <__gedf2+0x78>
 144be98:	4198b03a 	or	r12,r8,r6
 144be9c:	60000a1e 	bne	r12,zero,144bec8 <__gedf2+0x78>
 144bea0:	48001326 	beq	r9,zero,144bef0 <__gedf2+0xa0>
 144bea4:	0005883a 	mov	r2,zero
 144bea8:	f800283a 	ret
 144beac:	5112b03a 	or	r9,r10,r4
 144beb0:	4800191e 	bne	r9,zero,144bf18 <__gedf2+0xc8>
 144beb4:	18800926 	beq	r3,r2,144bedc <__gedf2+0x8c>
 144beb8:	18000b1e 	bne	r3,zero,144bee8 <__gedf2+0x98>
 144bebc:	4192b03a 	or	r9,r8,r6
 144bec0:	0017883a 	mov	r11,zero
 144bec4:	48000a26 	beq	r9,zero,144bef0 <__gedf2+0xa0>
 144bec8:	39c03fcc 	andi	r7,r7,255
 144becc:	58000726 	beq	r11,zero,144beec <__gedf2+0x9c>
 144bed0:	3800081e 	bne	r7,zero,144bef4 <__gedf2+0xa4>
 144bed4:	00bfffc4 	movi	r2,-1
 144bed8:	f800283a 	ret
 144bedc:	4192b03a 	or	r9,r8,r6
 144bee0:	48000d1e 	bne	r9,zero,144bf18 <__gedf2+0xc8>
 144bee4:	103fe826 	beq	r2,zero,144be88 <__alt_data_end+0xfffe6688>
 144bee8:	39c03fcc 	andi	r7,r7,255
 144beec:	29c00326 	beq	r5,r7,144befc <__gedf2+0xac>
 144bef0:	283ff81e 	bne	r5,zero,144bed4 <__alt_data_end+0xfffe66d4>
 144bef4:	00800044 	movi	r2,1
 144bef8:	f800283a 	ret
 144befc:	18bffc16 	blt	r3,r2,144bef0 <__alt_data_end+0xfffe66f0>
 144bf00:	10c00316 	blt	r2,r3,144bf10 <__gedf2+0xc0>
 144bf04:	42bffa36 	bltu	r8,r10,144bef0 <__alt_data_end+0xfffe66f0>
 144bf08:	52000526 	beq	r10,r8,144bf20 <__gedf2+0xd0>
 144bf0c:	523fe52e 	bgeu	r10,r8,144bea4 <__alt_data_end+0xfffe66a4>
 144bf10:	283ff026 	beq	r5,zero,144bed4 <__alt_data_end+0xfffe66d4>
 144bf14:	003ff706 	br	144bef4 <__alt_data_end+0xfffe66f4>
 144bf18:	00bfff84 	movi	r2,-2
 144bf1c:	f800283a 	ret
 144bf20:	313ff336 	bltu	r6,r4,144bef0 <__alt_data_end+0xfffe66f0>
 144bf24:	21bfdf2e 	bgeu	r4,r6,144bea4 <__alt_data_end+0xfffe66a4>
 144bf28:	283fea26 	beq	r5,zero,144bed4 <__alt_data_end+0xfffe66d4>
 144bf2c:	003ff106 	br	144bef4 <__alt_data_end+0xfffe66f4>

0144bf30 <__ledf2>:
 144bf30:	2804d53a 	srli	r2,r5,20
 144bf34:	3810d53a 	srli	r8,r7,20
 144bf38:	00c00434 	movhi	r3,16
 144bf3c:	18ffffc4 	addi	r3,r3,-1
 144bf40:	0241ffc4 	movi	r9,2047
 144bf44:	1081ffcc 	andi	r2,r2,2047
 144bf48:	28d4703a 	and	r10,r5,r3
 144bf4c:	4250703a 	and	r8,r8,r9
 144bf50:	38c6703a 	and	r3,r7,r3
 144bf54:	280ad7fa 	srli	r5,r5,31
 144bf58:	380ed7fa 	srli	r7,r7,31
 144bf5c:	12400b26 	beq	r2,r9,144bf8c <__ledf2+0x5c>
 144bf60:	42401926 	beq	r8,r9,144bfc8 <__ledf2+0x98>
 144bf64:	10000c1e 	bne	r2,zero,144bf98 <__ledf2+0x68>
 144bf68:	5112b03a 	or	r9,r10,r4
 144bf6c:	4813003a 	cmpeq	r9,r9,zero
 144bf70:	4817883a 	mov	r11,r9
 144bf74:	40000f26 	beq	r8,zero,144bfb4 <__ledf2+0x84>
 144bf78:	39c03fcc 	andi	r7,r7,255
 144bf7c:	58001826 	beq	r11,zero,144bfe0 <__ledf2+0xb0>
 144bf80:	38000a1e 	bne	r7,zero,144bfac <__ledf2+0x7c>
 144bf84:	00bfffc4 	movi	r2,-1
 144bf88:	f800283a 	ret
 144bf8c:	5112b03a 	or	r9,r10,r4
 144bf90:	48000f1e 	bne	r9,zero,144bfd0 <__ledf2+0xa0>
 144bf94:	40800c26 	beq	r8,r2,144bfc8 <__ledf2+0x98>
 144bf98:	4000101e 	bne	r8,zero,144bfdc <__ledf2+0xac>
 144bf9c:	1992b03a 	or	r9,r3,r6
 144bfa0:	0017883a 	mov	r11,zero
 144bfa4:	483ff41e 	bne	r9,zero,144bf78 <__alt_data_end+0xfffe6778>
 144bfa8:	283ff61e 	bne	r5,zero,144bf84 <__alt_data_end+0xfffe6784>
 144bfac:	00800044 	movi	r2,1
 144bfb0:	f800283a 	ret
 144bfb4:	1998b03a 	or	r12,r3,r6
 144bfb8:	603fef1e 	bne	r12,zero,144bf78 <__alt_data_end+0xfffe6778>
 144bfbc:	483ffa26 	beq	r9,zero,144bfa8 <__alt_data_end+0xfffe67a8>
 144bfc0:	0005883a 	mov	r2,zero
 144bfc4:	f800283a 	ret
 144bfc8:	1992b03a 	or	r9,r3,r6
 144bfcc:	48000226 	beq	r9,zero,144bfd8 <__ledf2+0xa8>
 144bfd0:	00800084 	movi	r2,2
 144bfd4:	f800283a 	ret
 144bfd8:	103fe326 	beq	r2,zero,144bf68 <__alt_data_end+0xfffe6768>
 144bfdc:	39c03fcc 	andi	r7,r7,255
 144bfe0:	29fff11e 	bne	r5,r7,144bfa8 <__alt_data_end+0xfffe67a8>
 144bfe4:	40bff016 	blt	r8,r2,144bfa8 <__alt_data_end+0xfffe67a8>
 144bfe8:	12000316 	blt	r2,r8,144bff8 <__ledf2+0xc8>
 144bfec:	1abfee36 	bltu	r3,r10,144bfa8 <__alt_data_end+0xfffe67a8>
 144bff0:	50c00326 	beq	r10,r3,144c000 <__ledf2+0xd0>
 144bff4:	50fff22e 	bgeu	r10,r3,144bfc0 <__alt_data_end+0xfffe67c0>
 144bff8:	283fe226 	beq	r5,zero,144bf84 <__alt_data_end+0xfffe6784>
 144bffc:	003feb06 	br	144bfac <__alt_data_end+0xfffe67ac>
 144c000:	313fe936 	bltu	r6,r4,144bfa8 <__alt_data_end+0xfffe67a8>
 144c004:	21bfee2e 	bgeu	r4,r6,144bfc0 <__alt_data_end+0xfffe67c0>
 144c008:	283fde26 	beq	r5,zero,144bf84 <__alt_data_end+0xfffe6784>
 144c00c:	003fe706 	br	144bfac <__alt_data_end+0xfffe67ac>

0144c010 <__muldf3>:
 144c010:	deffee04 	addi	sp,sp,-72
 144c014:	dd000c15 	stw	r20,48(sp)
 144c018:	2828d53a 	srli	r20,r5,20
 144c01c:	dd400d15 	stw	r21,52(sp)
 144c020:	282ad7fa 	srli	r21,r5,31
 144c024:	dc000815 	stw	r16,32(sp)
 144c028:	04000434 	movhi	r16,16
 144c02c:	ddc00f15 	stw	r23,60(sp)
 144c030:	dcc00b15 	stw	r19,44(sp)
 144c034:	dc800a15 	stw	r18,40(sp)
 144c038:	843fffc4 	addi	r16,r16,-1
 144c03c:	dfc01115 	stw	ra,68(sp)
 144c040:	df001015 	stw	fp,64(sp)
 144c044:	dd800e15 	stw	r22,56(sp)
 144c048:	dc400915 	stw	r17,36(sp)
 144c04c:	a501ffcc 	andi	r20,r20,2047
 144c050:	2025883a 	mov	r18,r4
 144c054:	202f883a 	mov	r23,r4
 144c058:	2c20703a 	and	r16,r5,r16
 144c05c:	a827883a 	mov	r19,r21
 144c060:	aa403fcc 	andi	r9,r21,255
 144c064:	a0005926 	beq	r20,zero,144c1cc <__muldf3+0x1bc>
 144c068:	0081ffc4 	movi	r2,2047
 144c06c:	a0803426 	beq	r20,r2,144c140 <__muldf3+0x130>
 144c070:	84000434 	orhi	r16,r16,16
 144c074:	2004d77a 	srli	r2,r4,29
 144c078:	802090fa 	slli	r16,r16,3
 144c07c:	202e90fa 	slli	r23,r4,3
 144c080:	a53f0044 	addi	r20,r20,-1023
 144c084:	80a0b03a 	or	r16,r16,r2
 144c088:	000b883a 	mov	r5,zero
 144c08c:	0039883a 	mov	fp,zero
 144c090:	3806d53a 	srli	r3,r7,20
 144c094:	382cd7fa 	srli	r22,r7,31
 144c098:	00800434 	movhi	r2,16
 144c09c:	10bfffc4 	addi	r2,r2,-1
 144c0a0:	18c1ffcc 	andi	r3,r3,2047
 144c0a4:	3025883a 	mov	r18,r6
 144c0a8:	38a2703a 	and	r17,r7,r2
 144c0ac:	b2803fcc 	andi	r10,r22,255
 144c0b0:	18006426 	beq	r3,zero,144c244 <__muldf3+0x234>
 144c0b4:	0081ffc4 	movi	r2,2047
 144c0b8:	18805c26 	beq	r3,r2,144c22c <__muldf3+0x21c>
 144c0bc:	8c400434 	orhi	r17,r17,16
 144c0c0:	3004d77a 	srli	r2,r6,29
 144c0c4:	882290fa 	slli	r17,r17,3
 144c0c8:	302490fa 	slli	r18,r6,3
 144c0cc:	18ff0044 	addi	r3,r3,-1023
 144c0d0:	88a2b03a 	or	r17,r17,r2
 144c0d4:	000f883a 	mov	r7,zero
 144c0d8:	394ab03a 	or	r5,r7,r5
 144c0dc:	280a90ba 	slli	r5,r5,2
 144c0e0:	00805174 	movhi	r2,325
 144c0e4:	10b04004 	addi	r2,r2,-16128
 144c0e8:	288b883a 	add	r5,r5,r2
 144c0ec:	28800017 	ldw	r2,0(r5)
 144c0f0:	a0c7883a 	add	r3,r20,r3
 144c0f4:	b54cf03a 	xor	r6,r22,r21
 144c0f8:	1a000044 	addi	r8,r3,1
 144c0fc:	1000683a 	jmp	r2
 144c100:	0144c344 	movi	r5,4877
 144c104:	0144c330 	cmpltui	r5,zero,4876
 144c108:	0144c330 	cmpltui	r5,zero,4876
 144c10c:	0144c31c 	xori	r5,zero,4876
 144c110:	0144c15c 	xori	r5,zero,4869
 144c114:	0144c15c 	xori	r5,zero,4869
 144c118:	0144c304 	movi	r5,4876
 144c11c:	0144c31c 	xori	r5,zero,4876
 144c120:	0144c15c 	xori	r5,zero,4869
 144c124:	0144c304 	movi	r5,4876
 144c128:	0144c15c 	xori	r5,zero,4869
 144c12c:	0144c31c 	xori	r5,zero,4876
 144c130:	0144c160 	cmpeqi	r5,zero,4869
 144c134:	0144c160 	cmpeqi	r5,zero,4869
 144c138:	0144c160 	cmpeqi	r5,zero,4869
 144c13c:	0144c680 	call	144c68 <__alt_mem_ufm_flash_data-0x10bb398>
 144c140:	8104b03a 	or	r2,r16,r4
 144c144:	10006c1e 	bne	r2,zero,144c2f8 <__muldf3+0x2e8>
 144c148:	01400204 	movi	r5,8
 144c14c:	0021883a 	mov	r16,zero
 144c150:	002f883a 	mov	r23,zero
 144c154:	07000084 	movi	fp,2
 144c158:	003fcd06 	br	144c090 <__alt_data_end+0xfffe6890>
 144c15c:	3013883a 	mov	r9,r6
 144c160:	00800084 	movi	r2,2
 144c164:	e080501e 	bne	fp,r2,144c2a8 <__muldf3+0x298>
 144c168:	4cc0004c 	andi	r19,r9,1
 144c16c:	0101ffc4 	movi	r4,2047
 144c170:	0021883a 	mov	r16,zero
 144c174:	002f883a 	mov	r23,zero
 144c178:	2008953a 	slli	r4,r4,20
 144c17c:	98c03fcc 	andi	r3,r19,255
 144c180:	04400434 	movhi	r17,16
 144c184:	8c7fffc4 	addi	r17,r17,-1
 144c188:	180697fa 	slli	r3,r3,31
 144c18c:	8460703a 	and	r16,r16,r17
 144c190:	8120b03a 	or	r16,r16,r4
 144c194:	80c6b03a 	or	r3,r16,r3
 144c198:	b805883a 	mov	r2,r23
 144c19c:	dfc01117 	ldw	ra,68(sp)
 144c1a0:	df001017 	ldw	fp,64(sp)
 144c1a4:	ddc00f17 	ldw	r23,60(sp)
 144c1a8:	dd800e17 	ldw	r22,56(sp)
 144c1ac:	dd400d17 	ldw	r21,52(sp)
 144c1b0:	dd000c17 	ldw	r20,48(sp)
 144c1b4:	dcc00b17 	ldw	r19,44(sp)
 144c1b8:	dc800a17 	ldw	r18,40(sp)
 144c1bc:	dc400917 	ldw	r17,36(sp)
 144c1c0:	dc000817 	ldw	r16,32(sp)
 144c1c4:	dec01204 	addi	sp,sp,72
 144c1c8:	f800283a 	ret
 144c1cc:	8104b03a 	or	r2,r16,r4
 144c1d0:	10004426 	beq	r2,zero,144c2e4 <__muldf3+0x2d4>
 144c1d4:	80014b26 	beq	r16,zero,144c704 <__muldf3+0x6f4>
 144c1d8:	8009883a 	mov	r4,r16
 144c1dc:	d9800715 	stw	r6,28(sp)
 144c1e0:	d9c00215 	stw	r7,8(sp)
 144c1e4:	da400415 	stw	r9,16(sp)
 144c1e8:	14409e40 	call	14409e4 <__clzsi2>
 144c1ec:	d9800717 	ldw	r6,28(sp)
 144c1f0:	d9c00217 	ldw	r7,8(sp)
 144c1f4:	da400417 	ldw	r9,16(sp)
 144c1f8:	1007883a 	mov	r3,r2
 144c1fc:	01000a04 	movi	r4,40
 144c200:	1dfffe04 	addi	r23,r3,-8
 144c204:	20c9c83a 	sub	r4,r4,r3
 144c208:	85e0983a 	sll	r16,r16,r23
 144c20c:	9108d83a 	srl	r4,r18,r4
 144c210:	95ee983a 	sll	r23,r18,r23
 144c214:	2420b03a 	or	r16,r4,r16
 144c218:	053f0344 	movi	r20,-1011
 144c21c:	a0e9c83a 	sub	r20,r20,r3
 144c220:	000b883a 	mov	r5,zero
 144c224:	0039883a 	mov	fp,zero
 144c228:	003f9906 	br	144c090 <__alt_data_end+0xfffe6890>
 144c22c:	8984b03a 	or	r2,r17,r6
 144c230:	10002a1e 	bne	r2,zero,144c2dc <__muldf3+0x2cc>
 144c234:	0023883a 	mov	r17,zero
 144c238:	0025883a 	mov	r18,zero
 144c23c:	01c00084 	movi	r7,2
 144c240:	003fa506 	br	144c0d8 <__alt_data_end+0xfffe68d8>
 144c244:	8984b03a 	or	r2,r17,r6
 144c248:	10002026 	beq	r2,zero,144c2cc <__muldf3+0x2bc>
 144c24c:	88011c26 	beq	r17,zero,144c6c0 <__muldf3+0x6b0>
 144c250:	8809883a 	mov	r4,r17
 144c254:	d9400215 	stw	r5,8(sp)
 144c258:	d9800715 	stw	r6,28(sp)
 144c25c:	da400415 	stw	r9,16(sp)
 144c260:	da800315 	stw	r10,12(sp)
 144c264:	14409e40 	call	14409e4 <__clzsi2>
 144c268:	d9400217 	ldw	r5,8(sp)
 144c26c:	d9800717 	ldw	r6,28(sp)
 144c270:	da400417 	ldw	r9,16(sp)
 144c274:	da800317 	ldw	r10,12(sp)
 144c278:	1007883a 	mov	r3,r2
 144c27c:	01000a04 	movi	r4,40
 144c280:	1cbffe04 	addi	r18,r3,-8
 144c284:	20c9c83a 	sub	r4,r4,r3
 144c288:	8ca2983a 	sll	r17,r17,r18
 144c28c:	3108d83a 	srl	r4,r6,r4
 144c290:	34a4983a 	sll	r18,r6,r18
 144c294:	2462b03a 	or	r17,r4,r17
 144c298:	00bf0344 	movi	r2,-1011
 144c29c:	10c7c83a 	sub	r3,r2,r3
 144c2a0:	000f883a 	mov	r7,zero
 144c2a4:	003f8c06 	br	144c0d8 <__alt_data_end+0xfffe68d8>
 144c2a8:	008000c4 	movi	r2,3
 144c2ac:	e0816d26 	beq	fp,r2,144c864 <__muldf3+0x854>
 144c2b0:	00800044 	movi	r2,1
 144c2b4:	e081321e 	bne	fp,r2,144c780 <__muldf3+0x770>
 144c2b8:	48a6703a 	and	r19,r9,r2
 144c2bc:	0009883a 	mov	r4,zero
 144c2c0:	0021883a 	mov	r16,zero
 144c2c4:	002f883a 	mov	r23,zero
 144c2c8:	003fab06 	br	144c178 <__alt_data_end+0xfffe6978>
 144c2cc:	0023883a 	mov	r17,zero
 144c2d0:	0025883a 	mov	r18,zero
 144c2d4:	01c00044 	movi	r7,1
 144c2d8:	003f7f06 	br	144c0d8 <__alt_data_end+0xfffe68d8>
 144c2dc:	01c000c4 	movi	r7,3
 144c2e0:	003f7d06 	br	144c0d8 <__alt_data_end+0xfffe68d8>
 144c2e4:	01400104 	movi	r5,4
 144c2e8:	0021883a 	mov	r16,zero
 144c2ec:	002f883a 	mov	r23,zero
 144c2f0:	07000044 	movi	fp,1
 144c2f4:	003f6606 	br	144c090 <__alt_data_end+0xfffe6890>
 144c2f8:	01400304 	movi	r5,12
 144c2fc:	070000c4 	movi	fp,3
 144c300:	003f6306 	br	144c090 <__alt_data_end+0xfffe6890>
 144c304:	04000434 	movhi	r16,16
 144c308:	0027883a 	mov	r19,zero
 144c30c:	843fffc4 	addi	r16,r16,-1
 144c310:	05ffffc4 	movi	r23,-1
 144c314:	0101ffc4 	movi	r4,2047
 144c318:	003f9706 	br	144c178 <__alt_data_end+0xfffe6978>
 144c31c:	8821883a 	mov	r16,r17
 144c320:	902f883a 	mov	r23,r18
 144c324:	5013883a 	mov	r9,r10
 144c328:	3839883a 	mov	fp,r7
 144c32c:	003f8c06 	br	144c160 <__alt_data_end+0xfffe6960>
 144c330:	8821883a 	mov	r16,r17
 144c334:	902f883a 	mov	r23,r18
 144c338:	3013883a 	mov	r9,r6
 144c33c:	3839883a 	mov	fp,r7
 144c340:	003f8706 	br	144c160 <__alt_data_end+0xfffe6960>
 144c344:	b82ad43a 	srli	r21,r23,16
 144c348:	9038d43a 	srli	fp,r18,16
 144c34c:	bdffffcc 	andi	r23,r23,65535
 144c350:	94bfffcc 	andi	r18,r18,65535
 144c354:	9009883a 	mov	r4,r18
 144c358:	b80b883a 	mov	r5,r23
 144c35c:	d8c00515 	stw	r3,20(sp)
 144c360:	d9800715 	stw	r6,28(sp)
 144c364:	da000615 	stw	r8,24(sp)
 144c368:	1440a480 	call	1440a48 <__mulsi3>
 144c36c:	9009883a 	mov	r4,r18
 144c370:	a80b883a 	mov	r5,r21
 144c374:	1029883a 	mov	r20,r2
 144c378:	1440a480 	call	1440a48 <__mulsi3>
 144c37c:	e009883a 	mov	r4,fp
 144c380:	a80b883a 	mov	r5,r21
 144c384:	102d883a 	mov	r22,r2
 144c388:	1440a480 	call	1440a48 <__mulsi3>
 144c38c:	e009883a 	mov	r4,fp
 144c390:	b80b883a 	mov	r5,r23
 144c394:	1027883a 	mov	r19,r2
 144c398:	1440a480 	call	1440a48 <__mulsi3>
 144c39c:	a008d43a 	srli	r4,r20,16
 144c3a0:	b085883a 	add	r2,r22,r2
 144c3a4:	d8c00517 	ldw	r3,20(sp)
 144c3a8:	110f883a 	add	r7,r2,r4
 144c3ac:	d9800717 	ldw	r6,28(sp)
 144c3b0:	da000617 	ldw	r8,24(sp)
 144c3b4:	3d80022e 	bgeu	r7,r22,144c3c0 <__muldf3+0x3b0>
 144c3b8:	00800074 	movhi	r2,1
 144c3bc:	98a7883a 	add	r19,r19,r2
 144c3c0:	3804943a 	slli	r2,r7,16
 144c3c4:	380ed43a 	srli	r7,r7,16
 144c3c8:	882cd43a 	srli	r22,r17,16
 144c3cc:	a53fffcc 	andi	r20,r20,65535
 144c3d0:	8c7fffcc 	andi	r17,r17,65535
 144c3d4:	1529883a 	add	r20,r2,r20
 144c3d8:	8809883a 	mov	r4,r17
 144c3dc:	b80b883a 	mov	r5,r23
 144c3e0:	d8c00515 	stw	r3,20(sp)
 144c3e4:	d9800715 	stw	r6,28(sp)
 144c3e8:	da000615 	stw	r8,24(sp)
 144c3ec:	d9c00015 	stw	r7,0(sp)
 144c3f0:	dd000115 	stw	r20,4(sp)
 144c3f4:	1440a480 	call	1440a48 <__mulsi3>
 144c3f8:	a80b883a 	mov	r5,r21
 144c3fc:	8809883a 	mov	r4,r17
 144c400:	d8800415 	stw	r2,16(sp)
 144c404:	1440a480 	call	1440a48 <__mulsi3>
 144c408:	a80b883a 	mov	r5,r21
 144c40c:	b009883a 	mov	r4,r22
 144c410:	1029883a 	mov	r20,r2
 144c414:	1440a480 	call	1440a48 <__mulsi3>
 144c418:	b009883a 	mov	r4,r22
 144c41c:	b80b883a 	mov	r5,r23
 144c420:	102b883a 	mov	r21,r2
 144c424:	1440a480 	call	1440a48 <__mulsi3>
 144c428:	da400417 	ldw	r9,16(sp)
 144c42c:	a085883a 	add	r2,r20,r2
 144c430:	d8c00517 	ldw	r3,20(sp)
 144c434:	4808d43a 	srli	r4,r9,16
 144c438:	d9800717 	ldw	r6,28(sp)
 144c43c:	da000617 	ldw	r8,24(sp)
 144c440:	1109883a 	add	r4,r2,r4
 144c444:	2500022e 	bgeu	r4,r20,144c450 <__muldf3+0x440>
 144c448:	00800074 	movhi	r2,1
 144c44c:	a8ab883a 	add	r21,r21,r2
 144c450:	200e943a 	slli	r7,r4,16
 144c454:	2004d43a 	srli	r2,r4,16
 144c458:	802ed43a 	srli	r23,r16,16
 144c45c:	843fffcc 	andi	r16,r16,65535
 144c460:	4d3fffcc 	andi	r20,r9,65535
 144c464:	9009883a 	mov	r4,r18
 144c468:	800b883a 	mov	r5,r16
 144c46c:	3d29883a 	add	r20,r7,r20
 144c470:	d8c00515 	stw	r3,20(sp)
 144c474:	d9800715 	stw	r6,28(sp)
 144c478:	da000615 	stw	r8,24(sp)
 144c47c:	a8ab883a 	add	r21,r21,r2
 144c480:	1440a480 	call	1440a48 <__mulsi3>
 144c484:	9009883a 	mov	r4,r18
 144c488:	b80b883a 	mov	r5,r23
 144c48c:	d8800315 	stw	r2,12(sp)
 144c490:	1440a480 	call	1440a48 <__mulsi3>
 144c494:	e009883a 	mov	r4,fp
 144c498:	b80b883a 	mov	r5,r23
 144c49c:	1025883a 	mov	r18,r2
 144c4a0:	1440a480 	call	1440a48 <__mulsi3>
 144c4a4:	e009883a 	mov	r4,fp
 144c4a8:	800b883a 	mov	r5,r16
 144c4ac:	d8800215 	stw	r2,8(sp)
 144c4b0:	1440a480 	call	1440a48 <__mulsi3>
 144c4b4:	da800317 	ldw	r10,12(sp)
 144c4b8:	d9400017 	ldw	r5,0(sp)
 144c4bc:	9085883a 	add	r2,r18,r2
 144c4c0:	5008d43a 	srli	r4,r10,16
 144c4c4:	a153883a 	add	r9,r20,r5
 144c4c8:	d8c00517 	ldw	r3,20(sp)
 144c4cc:	1109883a 	add	r4,r2,r4
 144c4d0:	d9800717 	ldw	r6,28(sp)
 144c4d4:	da000617 	ldw	r8,24(sp)
 144c4d8:	dac00217 	ldw	r11,8(sp)
 144c4dc:	2480022e 	bgeu	r4,r18,144c4e8 <__muldf3+0x4d8>
 144c4e0:	00800074 	movhi	r2,1
 144c4e4:	5897883a 	add	r11,r11,r2
 144c4e8:	200e943a 	slli	r7,r4,16
 144c4ec:	2038d43a 	srli	fp,r4,16
 144c4f0:	52bfffcc 	andi	r10,r10,65535
 144c4f4:	3a8f883a 	add	r7,r7,r10
 144c4f8:	8809883a 	mov	r4,r17
 144c4fc:	800b883a 	mov	r5,r16
 144c500:	d8c00515 	stw	r3,20(sp)
 144c504:	d9800715 	stw	r6,28(sp)
 144c508:	d9c00215 	stw	r7,8(sp)
 144c50c:	da000615 	stw	r8,24(sp)
 144c510:	da400415 	stw	r9,16(sp)
 144c514:	5f39883a 	add	fp,r11,fp
 144c518:	1440a480 	call	1440a48 <__mulsi3>
 144c51c:	8809883a 	mov	r4,r17
 144c520:	b80b883a 	mov	r5,r23
 144c524:	1025883a 	mov	r18,r2
 144c528:	1440a480 	call	1440a48 <__mulsi3>
 144c52c:	b009883a 	mov	r4,r22
 144c530:	b80b883a 	mov	r5,r23
 144c534:	d8800315 	stw	r2,12(sp)
 144c538:	1440a480 	call	1440a48 <__mulsi3>
 144c53c:	b009883a 	mov	r4,r22
 144c540:	800b883a 	mov	r5,r16
 144c544:	1023883a 	mov	r17,r2
 144c548:	1440a480 	call	1440a48 <__mulsi3>
 144c54c:	da800317 	ldw	r10,12(sp)
 144c550:	9008d43a 	srli	r4,r18,16
 144c554:	d8c00517 	ldw	r3,20(sp)
 144c558:	5085883a 	add	r2,r10,r2
 144c55c:	1109883a 	add	r4,r2,r4
 144c560:	d9800717 	ldw	r6,28(sp)
 144c564:	d9c00217 	ldw	r7,8(sp)
 144c568:	da000617 	ldw	r8,24(sp)
 144c56c:	da400417 	ldw	r9,16(sp)
 144c570:	2280022e 	bgeu	r4,r10,144c57c <__muldf3+0x56c>
 144c574:	00800074 	movhi	r2,1
 144c578:	88a3883a 	add	r17,r17,r2
 144c57c:	2004943a 	slli	r2,r4,16
 144c580:	94bfffcc 	andi	r18,r18,65535
 144c584:	4ce7883a 	add	r19,r9,r19
 144c588:	14a5883a 	add	r18,r2,r18
 144c58c:	9d29803a 	cmpltu	r20,r19,r20
 144c590:	9565883a 	add	r18,r18,r21
 144c594:	9505883a 	add	r2,r18,r20
 144c598:	99e7883a 	add	r19,r19,r7
 144c59c:	99cf803a 	cmpltu	r7,r19,r7
 144c5a0:	e08b883a 	add	r5,fp,r2
 144c5a4:	2008d43a 	srli	r4,r4,16
 144c5a8:	29ef883a 	add	r23,r5,r7
 144c5ac:	1529803a 	cmpltu	r20,r2,r20
 144c5b0:	956b803a 	cmpltu	r21,r18,r21
 144c5b4:	b9cf803a 	cmpltu	r7,r23,r7
 144c5b8:	a564b03a 	or	r18,r20,r21
 144c5bc:	2f39803a 	cmpltu	fp,r5,fp
 144c5c0:	9125883a 	add	r18,r18,r4
 144c5c4:	3f38b03a 	or	fp,r7,fp
 144c5c8:	9725883a 	add	r18,r18,fp
 144c5cc:	9804927a 	slli	r2,r19,9
 144c5d0:	9463883a 	add	r17,r18,r17
 144c5d4:	d9000117 	ldw	r4,4(sp)
 144c5d8:	b820d5fa 	srli	r16,r23,23
 144c5dc:	8822927a 	slli	r17,r17,9
 144c5e0:	9826d5fa 	srli	r19,r19,23
 144c5e4:	1104b03a 	or	r2,r2,r4
 144c5e8:	b82e927a 	slli	r23,r23,9
 144c5ec:	1004c03a 	cmpne	r2,r2,zero
 144c5f0:	8c20b03a 	or	r16,r17,r16
 144c5f4:	14e6b03a 	or	r19,r2,r19
 144c5f8:	8080402c 	andhi	r2,r16,256
 144c5fc:	9deeb03a 	or	r23,r19,r23
 144c600:	10000726 	beq	r2,zero,144c620 <__muldf3+0x610>
 144c604:	b804d07a 	srli	r2,r23,1
 144c608:	800697fa 	slli	r3,r16,31
 144c60c:	bdc0004c 	andi	r23,r23,1
 144c610:	8020d07a 	srli	r16,r16,1
 144c614:	b8aeb03a 	or	r23,r23,r2
 144c618:	b8eeb03a 	or	r23,r23,r3
 144c61c:	4007883a 	mov	r3,r8
 144c620:	1900ffc4 	addi	r4,r3,1023
 144c624:	01004d0e 	bge	zero,r4,144c75c <__muldf3+0x74c>
 144c628:	b88001cc 	andi	r2,r23,7
 144c62c:	10000726 	beq	r2,zero,144c64c <__muldf3+0x63c>
 144c630:	b94003cc 	andi	r5,r23,15
 144c634:	00800104 	movi	r2,4
 144c638:	28800426 	beq	r5,r2,144c64c <__muldf3+0x63c>
 144c63c:	b885883a 	add	r2,r23,r2
 144c640:	15ef803a 	cmpltu	r23,r2,r23
 144c644:	85e1883a 	add	r16,r16,r23
 144c648:	102f883a 	mov	r23,r2
 144c64c:	8080402c 	andhi	r2,r16,256
 144c650:	10000426 	beq	r2,zero,144c664 <__muldf3+0x654>
 144c654:	00bfc034 	movhi	r2,65280
 144c658:	10bfffc4 	addi	r2,r2,-1
 144c65c:	19010004 	addi	r4,r3,1024
 144c660:	80a0703a 	and	r16,r16,r2
 144c664:	0081ff84 	movi	r2,2046
 144c668:	1100340e 	bge	r2,r4,144c73c <__muldf3+0x72c>
 144c66c:	34c0004c 	andi	r19,r6,1
 144c670:	0101ffc4 	movi	r4,2047
 144c674:	0021883a 	mov	r16,zero
 144c678:	002f883a 	mov	r23,zero
 144c67c:	003ebe06 	br	144c178 <__alt_data_end+0xfffe6978>
 144c680:	8080022c 	andhi	r2,r16,8
 144c684:	10000926 	beq	r2,zero,144c6ac <__muldf3+0x69c>
 144c688:	8880022c 	andhi	r2,r17,8
 144c68c:	1000071e 	bne	r2,zero,144c6ac <__muldf3+0x69c>
 144c690:	00800434 	movhi	r2,16
 144c694:	8c000234 	orhi	r16,r17,8
 144c698:	10bfffc4 	addi	r2,r2,-1
 144c69c:	b027883a 	mov	r19,r22
 144c6a0:	80a0703a 	and	r16,r16,r2
 144c6a4:	902f883a 	mov	r23,r18
 144c6a8:	003f1a06 	br	144c314 <__alt_data_end+0xfffe6b14>
 144c6ac:	00800434 	movhi	r2,16
 144c6b0:	84000234 	orhi	r16,r16,8
 144c6b4:	10bfffc4 	addi	r2,r2,-1
 144c6b8:	80a0703a 	and	r16,r16,r2
 144c6bc:	003f1506 	br	144c314 <__alt_data_end+0xfffe6b14>
 144c6c0:	3009883a 	mov	r4,r6
 144c6c4:	d9400215 	stw	r5,8(sp)
 144c6c8:	d9800715 	stw	r6,28(sp)
 144c6cc:	da400415 	stw	r9,16(sp)
 144c6d0:	da800315 	stw	r10,12(sp)
 144c6d4:	14409e40 	call	14409e4 <__clzsi2>
 144c6d8:	10c00804 	addi	r3,r2,32
 144c6dc:	010009c4 	movi	r4,39
 144c6e0:	d9400217 	ldw	r5,8(sp)
 144c6e4:	d9800717 	ldw	r6,28(sp)
 144c6e8:	da400417 	ldw	r9,16(sp)
 144c6ec:	da800317 	ldw	r10,12(sp)
 144c6f0:	20fee20e 	bge	r4,r3,144c27c <__alt_data_end+0xfffe6a7c>
 144c6f4:	147ffe04 	addi	r17,r2,-8
 144c6f8:	9462983a 	sll	r17,r18,r17
 144c6fc:	0025883a 	mov	r18,zero
 144c700:	003ee506 	br	144c298 <__alt_data_end+0xfffe6a98>
 144c704:	d9800715 	stw	r6,28(sp)
 144c708:	d9c00215 	stw	r7,8(sp)
 144c70c:	da400415 	stw	r9,16(sp)
 144c710:	14409e40 	call	14409e4 <__clzsi2>
 144c714:	10c00804 	addi	r3,r2,32
 144c718:	010009c4 	movi	r4,39
 144c71c:	d9800717 	ldw	r6,28(sp)
 144c720:	d9c00217 	ldw	r7,8(sp)
 144c724:	da400417 	ldw	r9,16(sp)
 144c728:	20feb40e 	bge	r4,r3,144c1fc <__alt_data_end+0xfffe69fc>
 144c72c:	143ffe04 	addi	r16,r2,-8
 144c730:	9420983a 	sll	r16,r18,r16
 144c734:	002f883a 	mov	r23,zero
 144c738:	003eb706 	br	144c218 <__alt_data_end+0xfffe6a18>
 144c73c:	8004977a 	slli	r2,r16,29
 144c740:	b82ed0fa 	srli	r23,r23,3
 144c744:	8020927a 	slli	r16,r16,9
 144c748:	2101ffcc 	andi	r4,r4,2047
 144c74c:	15eeb03a 	or	r23,r2,r23
 144c750:	8020d33a 	srli	r16,r16,12
 144c754:	34c0004c 	andi	r19,r6,1
 144c758:	003e8706 	br	144c178 <__alt_data_end+0xfffe6978>
 144c75c:	00bf0084 	movi	r2,-1022
 144c760:	10c5c83a 	sub	r2,r2,r3
 144c764:	01000e04 	movi	r4,56
 144c768:	2080080e 	bge	r4,r2,144c78c <__muldf3+0x77c>
 144c76c:	34c0004c 	andi	r19,r6,1
 144c770:	0009883a 	mov	r4,zero
 144c774:	0021883a 	mov	r16,zero
 144c778:	002f883a 	mov	r23,zero
 144c77c:	003e7e06 	br	144c178 <__alt_data_end+0xfffe6978>
 144c780:	4007883a 	mov	r3,r8
 144c784:	480d883a 	mov	r6,r9
 144c788:	003fa506 	br	144c620 <__alt_data_end+0xfffe6e20>
 144c78c:	010007c4 	movi	r4,31
 144c790:	20801816 	blt	r4,r2,144c7f4 <__muldf3+0x7e4>
 144c794:	18c10784 	addi	r3,r3,1054
 144c798:	80c8983a 	sll	r4,r16,r3
 144c79c:	b88ad83a 	srl	r5,r23,r2
 144c7a0:	b8c6983a 	sll	r3,r23,r3
 144c7a4:	80a0d83a 	srl	r16,r16,r2
 144c7a8:	2908b03a 	or	r4,r5,r4
 144c7ac:	1804c03a 	cmpne	r2,r3,zero
 144c7b0:	2088b03a 	or	r4,r4,r2
 144c7b4:	208001cc 	andi	r2,r4,7
 144c7b8:	10000726 	beq	r2,zero,144c7d8 <__muldf3+0x7c8>
 144c7bc:	20c003cc 	andi	r3,r4,15
 144c7c0:	00800104 	movi	r2,4
 144c7c4:	18800426 	beq	r3,r2,144c7d8 <__muldf3+0x7c8>
 144c7c8:	20c00104 	addi	r3,r4,4
 144c7cc:	1905803a 	cmpltu	r2,r3,r4
 144c7d0:	80a1883a 	add	r16,r16,r2
 144c7d4:	1809883a 	mov	r4,r3
 144c7d8:	8080202c 	andhi	r2,r16,128
 144c7dc:	10001b26 	beq	r2,zero,144c84c <__muldf3+0x83c>
 144c7e0:	34c0004c 	andi	r19,r6,1
 144c7e4:	01000044 	movi	r4,1
 144c7e8:	0021883a 	mov	r16,zero
 144c7ec:	002f883a 	mov	r23,zero
 144c7f0:	003e6106 	br	144c178 <__alt_data_end+0xfffe6978>
 144c7f4:	013ef884 	movi	r4,-1054
 144c7f8:	20c9c83a 	sub	r4,r4,r3
 144c7fc:	01400804 	movi	r5,32
 144c800:	8108d83a 	srl	r4,r16,r4
 144c804:	11401526 	beq	r2,r5,144c85c <__muldf3+0x84c>
 144c808:	18c10f84 	addi	r3,r3,1086
 144c80c:	80e0983a 	sll	r16,r16,r3
 144c810:	85eeb03a 	or	r23,r16,r23
 144c814:	b804c03a 	cmpne	r2,r23,zero
 144c818:	1108b03a 	or	r4,r2,r4
 144c81c:	20c001cc 	andi	r3,r4,7
 144c820:	1800061e 	bne	r3,zero,144c83c <__muldf3+0x82c>
 144c824:	0021883a 	mov	r16,zero
 144c828:	202ed0fa 	srli	r23,r4,3
 144c82c:	34c0004c 	andi	r19,r6,1
 144c830:	0009883a 	mov	r4,zero
 144c834:	b8eeb03a 	or	r23,r23,r3
 144c838:	003e4f06 	br	144c178 <__alt_data_end+0xfffe6978>
 144c83c:	20c003cc 	andi	r3,r4,15
 144c840:	00800104 	movi	r2,4
 144c844:	0021883a 	mov	r16,zero
 144c848:	18bfdf1e 	bne	r3,r2,144c7c8 <__alt_data_end+0xfffe6fc8>
 144c84c:	8004927a 	slli	r2,r16,9
 144c850:	8006977a 	slli	r3,r16,29
 144c854:	1020d33a 	srli	r16,r2,12
 144c858:	003ff306 	br	144c828 <__alt_data_end+0xfffe7028>
 144c85c:	0021883a 	mov	r16,zero
 144c860:	003feb06 	br	144c810 <__alt_data_end+0xfffe7010>
 144c864:	00800434 	movhi	r2,16
 144c868:	84000234 	orhi	r16,r16,8
 144c86c:	10bfffc4 	addi	r2,r2,-1
 144c870:	4cc0004c 	andi	r19,r9,1
 144c874:	80a0703a 	and	r16,r16,r2
 144c878:	003ea606 	br	144c314 <__alt_data_end+0xfffe6b14>

0144c87c <__subdf3>:
 144c87c:	00c00434 	movhi	r3,16
 144c880:	18ffffc4 	addi	r3,r3,-1
 144c884:	defffb04 	addi	sp,sp,-20
 144c888:	28d2703a 	and	r9,r5,r3
 144c88c:	3814d53a 	srli	r10,r7,20
 144c890:	38c6703a 	and	r3,r7,r3
 144c894:	3004d77a 	srli	r2,r6,29
 144c898:	dc800215 	stw	r18,8(sp)
 144c89c:	dc000015 	stw	r16,0(sp)
 144c8a0:	2824d7fa 	srli	r18,r5,31
 144c8a4:	2820d53a 	srli	r16,r5,20
 144c8a8:	481290fa 	slli	r9,r9,3
 144c8ac:	200ad77a 	srli	r5,r4,29
 144c8b0:	180690fa 	slli	r3,r3,3
 144c8b4:	dc400115 	stw	r17,4(sp)
 144c8b8:	dfc00415 	stw	ra,16(sp)
 144c8bc:	202290fa 	slli	r17,r4,3
 144c8c0:	dcc00315 	stw	r19,12(sp)
 144c8c4:	5281ffcc 	andi	r10,r10,2047
 144c8c8:	0101ffc4 	movi	r4,2047
 144c8cc:	9011883a 	mov	r8,r18
 144c8d0:	8401ffcc 	andi	r16,r16,2047
 144c8d4:	94803fcc 	andi	r18,r18,255
 144c8d8:	494ab03a 	or	r5,r9,r5
 144c8dc:	380ed7fa 	srli	r7,r7,31
 144c8e0:	1886b03a 	or	r3,r3,r2
 144c8e4:	300c90fa 	slli	r6,r6,3
 144c8e8:	51009026 	beq	r10,r4,144cb2c <__subdf3+0x2b0>
 144c8ec:	39c0005c 	xori	r7,r7,1
 144c8f0:	8285c83a 	sub	r2,r16,r10
 144c8f4:	91c06f26 	beq	r18,r7,144cab4 <__subdf3+0x238>
 144c8f8:	0080b10e 	bge	zero,r2,144cbc0 <__subdf3+0x344>
 144c8fc:	50002a1e 	bne	r10,zero,144c9a8 <__subdf3+0x12c>
 144c900:	1988b03a 	or	r4,r3,r6
 144c904:	2000941e 	bne	r4,zero,144cb58 <__subdf3+0x2dc>
 144c908:	888001cc 	andi	r2,r17,7
 144c90c:	10005b26 	beq	r2,zero,144ca7c <__subdf3+0x200>
 144c910:	88c003cc 	andi	r3,r17,15
 144c914:	00800104 	movi	r2,4
 144c918:	18805826 	beq	r3,r2,144ca7c <__subdf3+0x200>
 144c91c:	88c00104 	addi	r3,r17,4
 144c920:	1c63803a 	cmpltu	r17,r3,r17
 144c924:	2c4b883a 	add	r5,r5,r17
 144c928:	2880202c 	andhi	r2,r5,128
 144c92c:	9200004c 	andi	r8,r18,1
 144c930:	1823883a 	mov	r17,r3
 144c934:	10005426 	beq	r2,zero,144ca88 <__subdf3+0x20c>
 144c938:	84000044 	addi	r16,r16,1
 144c93c:	0081ffc4 	movi	r2,2047
 144c940:	8080bf26 	beq	r16,r2,144cc40 <__subdf3+0x3c4>
 144c944:	013fe034 	movhi	r4,65408
 144c948:	213fffc4 	addi	r4,r4,-1
 144c94c:	290a703a 	and	r5,r5,r4
 144c950:	2804977a 	slli	r2,r5,29
 144c954:	280a927a 	slli	r5,r5,9
 144c958:	8822d0fa 	srli	r17,r17,3
 144c95c:	8401ffcc 	andi	r16,r16,2047
 144c960:	2808d33a 	srli	r4,r5,12
 144c964:	1444b03a 	or	r2,r2,r17
 144c968:	8401ffcc 	andi	r16,r16,2047
 144c96c:	800a953a 	slli	r5,r16,20
 144c970:	40c03fcc 	andi	r3,r8,255
 144c974:	04000434 	movhi	r16,16
 144c978:	180697fa 	slli	r3,r3,31
 144c97c:	843fffc4 	addi	r16,r16,-1
 144c980:	2420703a 	and	r16,r4,r16
 144c984:	8160b03a 	or	r16,r16,r5
 144c988:	80c6b03a 	or	r3,r16,r3
 144c98c:	dfc00417 	ldw	ra,16(sp)
 144c990:	dcc00317 	ldw	r19,12(sp)
 144c994:	dc800217 	ldw	r18,8(sp)
 144c998:	dc400117 	ldw	r17,4(sp)
 144c99c:	dc000017 	ldw	r16,0(sp)
 144c9a0:	dec00504 	addi	sp,sp,20
 144c9a4:	f800283a 	ret
 144c9a8:	0101ffc4 	movi	r4,2047
 144c9ac:	813fd626 	beq	r16,r4,144c908 <__alt_data_end+0xfffe7108>
 144c9b0:	18c02034 	orhi	r3,r3,128
 144c9b4:	01000e04 	movi	r4,56
 144c9b8:	2080a416 	blt	r4,r2,144cc4c <__subdf3+0x3d0>
 144c9bc:	010007c4 	movi	r4,31
 144c9c0:	2080c716 	blt	r4,r2,144cce0 <__subdf3+0x464>
 144c9c4:	01000804 	movi	r4,32
 144c9c8:	2089c83a 	sub	r4,r4,r2
 144c9cc:	1910983a 	sll	r8,r3,r4
 144c9d0:	308ed83a 	srl	r7,r6,r2
 144c9d4:	3108983a 	sll	r4,r6,r4
 144c9d8:	1884d83a 	srl	r2,r3,r2
 144c9dc:	41ccb03a 	or	r6,r8,r7
 144c9e0:	2008c03a 	cmpne	r4,r4,zero
 144c9e4:	310cb03a 	or	r6,r6,r4
 144c9e8:	898dc83a 	sub	r6,r17,r6
 144c9ec:	89a3803a 	cmpltu	r17,r17,r6
 144c9f0:	288bc83a 	sub	r5,r5,r2
 144c9f4:	2c4bc83a 	sub	r5,r5,r17
 144c9f8:	3023883a 	mov	r17,r6
 144c9fc:	2880202c 	andhi	r2,r5,128
 144ca00:	10006b26 	beq	r2,zero,144cbb0 <__subdf3+0x334>
 144ca04:	04c02034 	movhi	r19,128
 144ca08:	9cffffc4 	addi	r19,r19,-1
 144ca0c:	2ce6703a 	and	r19,r5,r19
 144ca10:	98007c26 	beq	r19,zero,144cc04 <__subdf3+0x388>
 144ca14:	9809883a 	mov	r4,r19
 144ca18:	14409e40 	call	14409e4 <__clzsi2>
 144ca1c:	10fffe04 	addi	r3,r2,-8
 144ca20:	010007c4 	movi	r4,31
 144ca24:	20c07d16 	blt	r4,r3,144cc1c <__subdf3+0x3a0>
 144ca28:	01400a04 	movi	r5,40
 144ca2c:	2885c83a 	sub	r2,r5,r2
 144ca30:	888ad83a 	srl	r5,r17,r2
 144ca34:	98e6983a 	sll	r19,r19,r3
 144ca38:	88e2983a 	sll	r17,r17,r3
 144ca3c:	2ce6b03a 	or	r19,r5,r19
 144ca40:	1c007a16 	blt	r3,r16,144cc2c <__subdf3+0x3b0>
 144ca44:	1c21c83a 	sub	r16,r3,r16
 144ca48:	81400044 	addi	r5,r16,1
 144ca4c:	00c007c4 	movi	r3,31
 144ca50:	19409616 	blt	r3,r5,144ccac <__subdf3+0x430>
 144ca54:	1c21c83a 	sub	r16,r3,r16
 144ca58:	8c08983a 	sll	r4,r17,r16
 144ca5c:	8946d83a 	srl	r3,r17,r5
 144ca60:	9c20983a 	sll	r16,r19,r16
 144ca64:	2008c03a 	cmpne	r4,r4,zero
 144ca68:	994ad83a 	srl	r5,r19,r5
 144ca6c:	1c06b03a 	or	r3,r3,r16
 144ca70:	1922b03a 	or	r17,r3,r4
 144ca74:	0021883a 	mov	r16,zero
 144ca78:	003fa306 	br	144c908 <__alt_data_end+0xfffe7108>
 144ca7c:	2880202c 	andhi	r2,r5,128
 144ca80:	9200004c 	andi	r8,r18,1
 144ca84:	103fac1e 	bne	r2,zero,144c938 <__alt_data_end+0xfffe7138>
 144ca88:	2804977a 	slli	r2,r5,29
 144ca8c:	8822d0fa 	srli	r17,r17,3
 144ca90:	00c1ffc4 	movi	r3,2047
 144ca94:	280ad0fa 	srli	r5,r5,3
 144ca98:	1444b03a 	or	r2,r2,r17
 144ca9c:	80c02726 	beq	r16,r3,144cb3c <__subdf3+0x2c0>
 144caa0:	01000434 	movhi	r4,16
 144caa4:	213fffc4 	addi	r4,r4,-1
 144caa8:	80e0703a 	and	r16,r16,r3
 144caac:	2908703a 	and	r4,r5,r4
 144cab0:	003fad06 	br	144c968 <__alt_data_end+0xfffe7168>
 144cab4:	0080690e 	bge	zero,r2,144cc5c <__subdf3+0x3e0>
 144cab8:	50002f26 	beq	r10,zero,144cb78 <__subdf3+0x2fc>
 144cabc:	0101ffc4 	movi	r4,2047
 144cac0:	813f9126 	beq	r16,r4,144c908 <__alt_data_end+0xfffe7108>
 144cac4:	18c02034 	orhi	r3,r3,128
 144cac8:	01000e04 	movi	r4,56
 144cacc:	2080b00e 	bge	r4,r2,144cd90 <__subdf3+0x514>
 144cad0:	198cb03a 	or	r6,r3,r6
 144cad4:	300ec03a 	cmpne	r7,r6,zero
 144cad8:	0005883a 	mov	r2,zero
 144cadc:	3c4f883a 	add	r7,r7,r17
 144cae0:	3c63803a 	cmpltu	r17,r7,r17
 144cae4:	114b883a 	add	r5,r2,r5
 144cae8:	2c4b883a 	add	r5,r5,r17
 144caec:	3823883a 	mov	r17,r7
 144caf0:	2880202c 	andhi	r2,r5,128
 144caf4:	10002e26 	beq	r2,zero,144cbb0 <__subdf3+0x334>
 144caf8:	84000044 	addi	r16,r16,1
 144cafc:	0081ffc4 	movi	r2,2047
 144cb00:	8080de26 	beq	r16,r2,144ce7c <__subdf3+0x600>
 144cb04:	00bfe034 	movhi	r2,65408
 144cb08:	10bfffc4 	addi	r2,r2,-1
 144cb0c:	288a703a 	and	r5,r5,r2
 144cb10:	880cd07a 	srli	r6,r17,1
 144cb14:	280897fa 	slli	r4,r5,31
 144cb18:	88c0004c 	andi	r3,r17,1
 144cb1c:	30e2b03a 	or	r17,r6,r3
 144cb20:	280ad07a 	srli	r5,r5,1
 144cb24:	8922b03a 	or	r17,r17,r4
 144cb28:	003f7706 	br	144c908 <__alt_data_end+0xfffe7108>
 144cb2c:	1984b03a 	or	r2,r3,r6
 144cb30:	103f6e26 	beq	r2,zero,144c8ec <__alt_data_end+0xfffe70ec>
 144cb34:	39c03fcc 	andi	r7,r7,255
 144cb38:	003f6d06 	br	144c8f0 <__alt_data_end+0xfffe70f0>
 144cb3c:	1146b03a 	or	r3,r2,r5
 144cb40:	18003f26 	beq	r3,zero,144cc40 <__subdf3+0x3c4>
 144cb44:	00c00434 	movhi	r3,16
 144cb48:	29000234 	orhi	r4,r5,8
 144cb4c:	18ffffc4 	addi	r3,r3,-1
 144cb50:	20c8703a 	and	r4,r4,r3
 144cb54:	003f8406 	br	144c968 <__alt_data_end+0xfffe7168>
 144cb58:	10bfffc4 	addi	r2,r2,-1
 144cb5c:	1000501e 	bne	r2,zero,144cca0 <__subdf3+0x424>
 144cb60:	898fc83a 	sub	r7,r17,r6
 144cb64:	89e3803a 	cmpltu	r17,r17,r7
 144cb68:	28cbc83a 	sub	r5,r5,r3
 144cb6c:	2c4bc83a 	sub	r5,r5,r17
 144cb70:	3823883a 	mov	r17,r7
 144cb74:	003fa106 	br	144c9fc <__alt_data_end+0xfffe71fc>
 144cb78:	1988b03a 	or	r4,r3,r6
 144cb7c:	203f6226 	beq	r4,zero,144c908 <__alt_data_end+0xfffe7108>
 144cb80:	10bfffc4 	addi	r2,r2,-1
 144cb84:	10009b1e 	bne	r2,zero,144cdf4 <__subdf3+0x578>
 144cb88:	344d883a 	add	r6,r6,r17
 144cb8c:	3463803a 	cmpltu	r17,r6,r17
 144cb90:	194b883a 	add	r5,r3,r5
 144cb94:	2c4b883a 	add	r5,r5,r17
 144cb98:	3023883a 	mov	r17,r6
 144cb9c:	003fd406 	br	144caf0 <__alt_data_end+0xfffe72f0>
 144cba0:	1106b03a 	or	r3,r2,r4
 144cba4:	1800b426 	beq	r3,zero,144ce78 <__subdf3+0x5fc>
 144cba8:	100b883a 	mov	r5,r2
 144cbac:	2023883a 	mov	r17,r4
 144cbb0:	888001cc 	andi	r2,r17,7
 144cbb4:	103f561e 	bne	r2,zero,144c910 <__alt_data_end+0xfffe7110>
 144cbb8:	9200004c 	andi	r8,r18,1
 144cbbc:	003fb206 	br	144ca88 <__alt_data_end+0xfffe7288>
 144cbc0:	1000531e 	bne	r2,zero,144cd10 <__subdf3+0x494>
 144cbc4:	80800044 	addi	r2,r16,1
 144cbc8:	1081ffcc 	andi	r2,r2,2047
 144cbcc:	01000044 	movi	r4,1
 144cbd0:	2080a00e 	bge	r4,r2,144ce54 <__subdf3+0x5d8>
 144cbd4:	8985c83a 	sub	r2,r17,r6
 144cbd8:	8889803a 	cmpltu	r4,r17,r2
 144cbdc:	28e7c83a 	sub	r19,r5,r3
 144cbe0:	9927c83a 	sub	r19,r19,r4
 144cbe4:	9900202c 	andhi	r4,r19,128
 144cbe8:	20006226 	beq	r4,zero,144cd74 <__subdf3+0x4f8>
 144cbec:	3463c83a 	sub	r17,r6,r17
 144cbf0:	194bc83a 	sub	r5,r3,r5
 144cbf4:	344d803a 	cmpltu	r6,r6,r17
 144cbf8:	29a7c83a 	sub	r19,r5,r6
 144cbfc:	3825883a 	mov	r18,r7
 144cc00:	983f841e 	bne	r19,zero,144ca14 <__alt_data_end+0xfffe7214>
 144cc04:	8809883a 	mov	r4,r17
 144cc08:	14409e40 	call	14409e4 <__clzsi2>
 144cc0c:	10800804 	addi	r2,r2,32
 144cc10:	10fffe04 	addi	r3,r2,-8
 144cc14:	010007c4 	movi	r4,31
 144cc18:	20ff830e 	bge	r4,r3,144ca28 <__alt_data_end+0xfffe7228>
 144cc1c:	14fff604 	addi	r19,r2,-40
 144cc20:	8ce6983a 	sll	r19,r17,r19
 144cc24:	0023883a 	mov	r17,zero
 144cc28:	1c3f860e 	bge	r3,r16,144ca44 <__alt_data_end+0xfffe7244>
 144cc2c:	017fe034 	movhi	r5,65408
 144cc30:	297fffc4 	addi	r5,r5,-1
 144cc34:	80e1c83a 	sub	r16,r16,r3
 144cc38:	994a703a 	and	r5,r19,r5
 144cc3c:	003f3206 	br	144c908 <__alt_data_end+0xfffe7108>
 144cc40:	0009883a 	mov	r4,zero
 144cc44:	0005883a 	mov	r2,zero
 144cc48:	003f4706 	br	144c968 <__alt_data_end+0xfffe7168>
 144cc4c:	198cb03a 	or	r6,r3,r6
 144cc50:	300cc03a 	cmpne	r6,r6,zero
 144cc54:	0005883a 	mov	r2,zero
 144cc58:	003f6306 	br	144c9e8 <__alt_data_end+0xfffe71e8>
 144cc5c:	10009d1e 	bne	r2,zero,144ced4 <__subdf3+0x658>
 144cc60:	81c00044 	addi	r7,r16,1
 144cc64:	3881ffcc 	andi	r2,r7,2047
 144cc68:	02400044 	movi	r9,1
 144cc6c:	4880680e 	bge	r9,r2,144ce10 <__subdf3+0x594>
 144cc70:	0081ffc4 	movi	r2,2047
 144cc74:	3880ae26 	beq	r7,r2,144cf30 <__subdf3+0x6b4>
 144cc78:	344d883a 	add	r6,r6,r17
 144cc7c:	3463803a 	cmpltu	r17,r6,r17
 144cc80:	194b883a 	add	r5,r3,r5
 144cc84:	2c4b883a 	add	r5,r5,r17
 144cc88:	282297fa 	slli	r17,r5,31
 144cc8c:	300cd07a 	srli	r6,r6,1
 144cc90:	280ad07a 	srli	r5,r5,1
 144cc94:	3821883a 	mov	r16,r7
 144cc98:	89a2b03a 	or	r17,r17,r6
 144cc9c:	003f1a06 	br	144c908 <__alt_data_end+0xfffe7108>
 144cca0:	0101ffc4 	movi	r4,2047
 144cca4:	813f431e 	bne	r16,r4,144c9b4 <__alt_data_end+0xfffe71b4>
 144cca8:	003f1706 	br	144c908 <__alt_data_end+0xfffe7108>
 144ccac:	80bff844 	addi	r2,r16,-31
 144ccb0:	00c00804 	movi	r3,32
 144ccb4:	9884d83a 	srl	r2,r19,r2
 144ccb8:	28c05126 	beq	r5,r3,144ce00 <__subdf3+0x584>
 144ccbc:	00c00fc4 	movi	r3,63
 144ccc0:	1c21c83a 	sub	r16,r3,r16
 144ccc4:	9c26983a 	sll	r19,r19,r16
 144ccc8:	9c62b03a 	or	r17,r19,r17
 144cccc:	8822c03a 	cmpne	r17,r17,zero
 144ccd0:	88a2b03a 	or	r17,r17,r2
 144ccd4:	000b883a 	mov	r5,zero
 144ccd8:	0021883a 	mov	r16,zero
 144ccdc:	003fb406 	br	144cbb0 <__alt_data_end+0xfffe73b0>
 144cce0:	113ff804 	addi	r4,r2,-32
 144cce4:	01c00804 	movi	r7,32
 144cce8:	1908d83a 	srl	r4,r3,r4
 144ccec:	11c04626 	beq	r2,r7,144ce08 <__subdf3+0x58c>
 144ccf0:	01c01004 	movi	r7,64
 144ccf4:	3885c83a 	sub	r2,r7,r2
 144ccf8:	1884983a 	sll	r2,r3,r2
 144ccfc:	118cb03a 	or	r6,r2,r6
 144cd00:	300cc03a 	cmpne	r6,r6,zero
 144cd04:	310cb03a 	or	r6,r6,r4
 144cd08:	0005883a 	mov	r2,zero
 144cd0c:	003f3606 	br	144c9e8 <__alt_data_end+0xfffe71e8>
 144cd10:	80002b26 	beq	r16,zero,144cdc0 <__subdf3+0x544>
 144cd14:	0101ffc4 	movi	r4,2047
 144cd18:	51006926 	beq	r10,r4,144cec0 <__subdf3+0x644>
 144cd1c:	0085c83a 	sub	r2,zero,r2
 144cd20:	29402034 	orhi	r5,r5,128
 144cd24:	01000e04 	movi	r4,56
 144cd28:	20807d16 	blt	r4,r2,144cf20 <__subdf3+0x6a4>
 144cd2c:	010007c4 	movi	r4,31
 144cd30:	2080d916 	blt	r4,r2,144d098 <__subdf3+0x81c>
 144cd34:	01000804 	movi	r4,32
 144cd38:	2089c83a 	sub	r4,r4,r2
 144cd3c:	2912983a 	sll	r9,r5,r4
 144cd40:	8890d83a 	srl	r8,r17,r2
 144cd44:	8908983a 	sll	r4,r17,r4
 144cd48:	2884d83a 	srl	r2,r5,r2
 144cd4c:	4a22b03a 	or	r17,r9,r8
 144cd50:	2008c03a 	cmpne	r4,r4,zero
 144cd54:	8922b03a 	or	r17,r17,r4
 144cd58:	3463c83a 	sub	r17,r6,r17
 144cd5c:	1885c83a 	sub	r2,r3,r2
 144cd60:	344d803a 	cmpltu	r6,r6,r17
 144cd64:	118bc83a 	sub	r5,r2,r6
 144cd68:	5021883a 	mov	r16,r10
 144cd6c:	3825883a 	mov	r18,r7
 144cd70:	003f2206 	br	144c9fc <__alt_data_end+0xfffe71fc>
 144cd74:	9886b03a 	or	r3,r19,r2
 144cd78:	18001c1e 	bne	r3,zero,144cdec <__subdf3+0x570>
 144cd7c:	0011883a 	mov	r8,zero
 144cd80:	000b883a 	mov	r5,zero
 144cd84:	0023883a 	mov	r17,zero
 144cd88:	0021883a 	mov	r16,zero
 144cd8c:	003f3e06 	br	144ca88 <__alt_data_end+0xfffe7288>
 144cd90:	010007c4 	movi	r4,31
 144cd94:	20803c16 	blt	r4,r2,144ce88 <__subdf3+0x60c>
 144cd98:	01000804 	movi	r4,32
 144cd9c:	2089c83a 	sub	r4,r4,r2
 144cda0:	1912983a 	sll	r9,r3,r4
 144cda4:	308ed83a 	srl	r7,r6,r2
 144cda8:	3108983a 	sll	r4,r6,r4
 144cdac:	1884d83a 	srl	r2,r3,r2
 144cdb0:	49ceb03a 	or	r7,r9,r7
 144cdb4:	2008c03a 	cmpne	r4,r4,zero
 144cdb8:	390eb03a 	or	r7,r7,r4
 144cdbc:	003f4706 	br	144cadc <__alt_data_end+0xfffe72dc>
 144cdc0:	2c48b03a 	or	r4,r5,r17
 144cdc4:	20003e26 	beq	r4,zero,144cec0 <__subdf3+0x644>
 144cdc8:	0084303a 	nor	r2,zero,r2
 144cdcc:	10003a1e 	bne	r2,zero,144ceb8 <__subdf3+0x63c>
 144cdd0:	3463c83a 	sub	r17,r6,r17
 144cdd4:	194bc83a 	sub	r5,r3,r5
 144cdd8:	344d803a 	cmpltu	r6,r6,r17
 144cddc:	298bc83a 	sub	r5,r5,r6
 144cde0:	5021883a 	mov	r16,r10
 144cde4:	3825883a 	mov	r18,r7
 144cde8:	003f0406 	br	144c9fc <__alt_data_end+0xfffe71fc>
 144cdec:	1023883a 	mov	r17,r2
 144cdf0:	003f0706 	br	144ca10 <__alt_data_end+0xfffe7210>
 144cdf4:	0101ffc4 	movi	r4,2047
 144cdf8:	813f331e 	bne	r16,r4,144cac8 <__alt_data_end+0xfffe72c8>
 144cdfc:	003ec206 	br	144c908 <__alt_data_end+0xfffe7108>
 144ce00:	0027883a 	mov	r19,zero
 144ce04:	003fb006 	br	144ccc8 <__alt_data_end+0xfffe74c8>
 144ce08:	0005883a 	mov	r2,zero
 144ce0c:	003fbb06 	br	144ccfc <__alt_data_end+0xfffe74fc>
 144ce10:	2c44b03a 	or	r2,r5,r17
 144ce14:	80008b1e 	bne	r16,zero,144d044 <__subdf3+0x7c8>
 144ce18:	1000b526 	beq	r2,zero,144d0f0 <__subdf3+0x874>
 144ce1c:	1984b03a 	or	r2,r3,r6
 144ce20:	103eb926 	beq	r2,zero,144c908 <__alt_data_end+0xfffe7108>
 144ce24:	3449883a 	add	r4,r6,r17
 144ce28:	2463803a 	cmpltu	r17,r4,r17
 144ce2c:	194b883a 	add	r5,r3,r5
 144ce30:	2c4b883a 	add	r5,r5,r17
 144ce34:	2880202c 	andhi	r2,r5,128
 144ce38:	2023883a 	mov	r17,r4
 144ce3c:	103f5c26 	beq	r2,zero,144cbb0 <__alt_data_end+0xfffe73b0>
 144ce40:	00bfe034 	movhi	r2,65408
 144ce44:	10bfffc4 	addi	r2,r2,-1
 144ce48:	4821883a 	mov	r16,r9
 144ce4c:	288a703a 	and	r5,r5,r2
 144ce50:	003ead06 	br	144c908 <__alt_data_end+0xfffe7108>
 144ce54:	2c44b03a 	or	r2,r5,r17
 144ce58:	8000291e 	bne	r16,zero,144cf00 <__subdf3+0x684>
 144ce5c:	10004f1e 	bne	r2,zero,144cf9c <__subdf3+0x720>
 144ce60:	1984b03a 	or	r2,r3,r6
 144ce64:	10000426 	beq	r2,zero,144ce78 <__subdf3+0x5fc>
 144ce68:	180b883a 	mov	r5,r3
 144ce6c:	3023883a 	mov	r17,r6
 144ce70:	3825883a 	mov	r18,r7
 144ce74:	003ea406 	br	144c908 <__alt_data_end+0xfffe7108>
 144ce78:	0011883a 	mov	r8,zero
 144ce7c:	000b883a 	mov	r5,zero
 144ce80:	0023883a 	mov	r17,zero
 144ce84:	003f0006 	br	144ca88 <__alt_data_end+0xfffe7288>
 144ce88:	11fff804 	addi	r7,r2,-32
 144ce8c:	19c8d83a 	srl	r4,r3,r7
 144ce90:	01c00804 	movi	r7,32
 144ce94:	11c07e26 	beq	r2,r7,144d090 <__subdf3+0x814>
 144ce98:	01c01004 	movi	r7,64
 144ce9c:	3885c83a 	sub	r2,r7,r2
 144cea0:	1884983a 	sll	r2,r3,r2
 144cea4:	118cb03a 	or	r6,r2,r6
 144cea8:	300ec03a 	cmpne	r7,r6,zero
 144ceac:	390eb03a 	or	r7,r7,r4
 144ceb0:	0005883a 	mov	r2,zero
 144ceb4:	003f0906 	br	144cadc <__alt_data_end+0xfffe72dc>
 144ceb8:	0101ffc4 	movi	r4,2047
 144cebc:	513f991e 	bne	r10,r4,144cd24 <__alt_data_end+0xfffe7524>
 144cec0:	180b883a 	mov	r5,r3
 144cec4:	3023883a 	mov	r17,r6
 144cec8:	5021883a 	mov	r16,r10
 144cecc:	3825883a 	mov	r18,r7
 144ced0:	003e8d06 	br	144c908 <__alt_data_end+0xfffe7108>
 144ced4:	80001a1e 	bne	r16,zero,144cf40 <__subdf3+0x6c4>
 144ced8:	2c48b03a 	or	r4,r5,r17
 144cedc:	20005526 	beq	r4,zero,144d034 <__subdf3+0x7b8>
 144cee0:	0084303a 	nor	r2,zero,r2
 144cee4:	1000511e 	bne	r2,zero,144d02c <__subdf3+0x7b0>
 144cee8:	89a3883a 	add	r17,r17,r6
 144ceec:	194b883a 	add	r5,r3,r5
 144cef0:	898d803a 	cmpltu	r6,r17,r6
 144cef4:	298b883a 	add	r5,r5,r6
 144cef8:	5021883a 	mov	r16,r10
 144cefc:	003efc06 	br	144caf0 <__alt_data_end+0xfffe72f0>
 144cf00:	1000341e 	bne	r2,zero,144cfd4 <__subdf3+0x758>
 144cf04:	1984b03a 	or	r2,r3,r6
 144cf08:	10006f26 	beq	r2,zero,144d0c8 <__subdf3+0x84c>
 144cf0c:	180b883a 	mov	r5,r3
 144cf10:	3023883a 	mov	r17,r6
 144cf14:	3825883a 	mov	r18,r7
 144cf18:	0401ffc4 	movi	r16,2047
 144cf1c:	003e7a06 	br	144c908 <__alt_data_end+0xfffe7108>
 144cf20:	2c62b03a 	or	r17,r5,r17
 144cf24:	8822c03a 	cmpne	r17,r17,zero
 144cf28:	0005883a 	mov	r2,zero
 144cf2c:	003f8a06 	br	144cd58 <__alt_data_end+0xfffe7558>
 144cf30:	3821883a 	mov	r16,r7
 144cf34:	000b883a 	mov	r5,zero
 144cf38:	0023883a 	mov	r17,zero
 144cf3c:	003ed206 	br	144ca88 <__alt_data_end+0xfffe7288>
 144cf40:	0101ffc4 	movi	r4,2047
 144cf44:	51003b26 	beq	r10,r4,144d034 <__subdf3+0x7b8>
 144cf48:	0085c83a 	sub	r2,zero,r2
 144cf4c:	29402034 	orhi	r5,r5,128
 144cf50:	01000e04 	movi	r4,56
 144cf54:	20806216 	blt	r4,r2,144d0e0 <__subdf3+0x864>
 144cf58:	010007c4 	movi	r4,31
 144cf5c:	20806b16 	blt	r4,r2,144d10c <__subdf3+0x890>
 144cf60:	01000804 	movi	r4,32
 144cf64:	2089c83a 	sub	r4,r4,r2
 144cf68:	2912983a 	sll	r9,r5,r4
 144cf6c:	888ed83a 	srl	r7,r17,r2
 144cf70:	8908983a 	sll	r4,r17,r4
 144cf74:	2884d83a 	srl	r2,r5,r2
 144cf78:	49e2b03a 	or	r17,r9,r7
 144cf7c:	2008c03a 	cmpne	r4,r4,zero
 144cf80:	8922b03a 	or	r17,r17,r4
 144cf84:	89a3883a 	add	r17,r17,r6
 144cf88:	10c5883a 	add	r2,r2,r3
 144cf8c:	898d803a 	cmpltu	r6,r17,r6
 144cf90:	118b883a 	add	r5,r2,r6
 144cf94:	5021883a 	mov	r16,r10
 144cf98:	003ed506 	br	144caf0 <__alt_data_end+0xfffe72f0>
 144cf9c:	1984b03a 	or	r2,r3,r6
 144cfa0:	103e5926 	beq	r2,zero,144c908 <__alt_data_end+0xfffe7108>
 144cfa4:	8989c83a 	sub	r4,r17,r6
 144cfa8:	8911803a 	cmpltu	r8,r17,r4
 144cfac:	28c5c83a 	sub	r2,r5,r3
 144cfb0:	1205c83a 	sub	r2,r2,r8
 144cfb4:	1200202c 	andhi	r8,r2,128
 144cfb8:	403ef926 	beq	r8,zero,144cba0 <__alt_data_end+0xfffe73a0>
 144cfbc:	3463c83a 	sub	r17,r6,r17
 144cfc0:	194bc83a 	sub	r5,r3,r5
 144cfc4:	344d803a 	cmpltu	r6,r6,r17
 144cfc8:	298bc83a 	sub	r5,r5,r6
 144cfcc:	3825883a 	mov	r18,r7
 144cfd0:	003e4d06 	br	144c908 <__alt_data_end+0xfffe7108>
 144cfd4:	1984b03a 	or	r2,r3,r6
 144cfd8:	10002b26 	beq	r2,zero,144d088 <__subdf3+0x80c>
 144cfdc:	2808d0fa 	srli	r4,r5,3
 144cfe0:	8822d0fa 	srli	r17,r17,3
 144cfe4:	280a977a 	slli	r5,r5,29
 144cfe8:	2080022c 	andhi	r2,r4,8
 144cfec:	2c62b03a 	or	r17,r5,r17
 144cff0:	10000826 	beq	r2,zero,144d014 <__subdf3+0x798>
 144cff4:	1810d0fa 	srli	r8,r3,3
 144cff8:	4080022c 	andhi	r2,r8,8
 144cffc:	1000051e 	bne	r2,zero,144d014 <__subdf3+0x798>
 144d000:	300cd0fa 	srli	r6,r6,3
 144d004:	1804977a 	slli	r2,r3,29
 144d008:	4009883a 	mov	r4,r8
 144d00c:	3825883a 	mov	r18,r7
 144d010:	11a2b03a 	or	r17,r2,r6
 144d014:	880ad77a 	srli	r5,r17,29
 144d018:	200890fa 	slli	r4,r4,3
 144d01c:	882290fa 	slli	r17,r17,3
 144d020:	0401ffc4 	movi	r16,2047
 144d024:	290ab03a 	or	r5,r5,r4
 144d028:	003e3706 	br	144c908 <__alt_data_end+0xfffe7108>
 144d02c:	0101ffc4 	movi	r4,2047
 144d030:	513fc71e 	bne	r10,r4,144cf50 <__alt_data_end+0xfffe7750>
 144d034:	180b883a 	mov	r5,r3
 144d038:	3023883a 	mov	r17,r6
 144d03c:	5021883a 	mov	r16,r10
 144d040:	003e3106 	br	144c908 <__alt_data_end+0xfffe7108>
 144d044:	10002d26 	beq	r2,zero,144d0fc <__subdf3+0x880>
 144d048:	1984b03a 	or	r2,r3,r6
 144d04c:	10000e26 	beq	r2,zero,144d088 <__subdf3+0x80c>
 144d050:	2808d0fa 	srli	r4,r5,3
 144d054:	8822d0fa 	srli	r17,r17,3
 144d058:	280a977a 	slli	r5,r5,29
 144d05c:	2080022c 	andhi	r2,r4,8
 144d060:	2c62b03a 	or	r17,r5,r17
 144d064:	103feb26 	beq	r2,zero,144d014 <__alt_data_end+0xfffe7814>
 144d068:	180ed0fa 	srli	r7,r3,3
 144d06c:	3880022c 	andhi	r2,r7,8
 144d070:	103fe81e 	bne	r2,zero,144d014 <__alt_data_end+0xfffe7814>
 144d074:	300cd0fa 	srli	r6,r6,3
 144d078:	1804977a 	slli	r2,r3,29
 144d07c:	3809883a 	mov	r4,r7
 144d080:	11a2b03a 	or	r17,r2,r6
 144d084:	003fe306 	br	144d014 <__alt_data_end+0xfffe7814>
 144d088:	0401ffc4 	movi	r16,2047
 144d08c:	003e1e06 	br	144c908 <__alt_data_end+0xfffe7108>
 144d090:	0005883a 	mov	r2,zero
 144d094:	003f8306 	br	144cea4 <__alt_data_end+0xfffe76a4>
 144d098:	113ff804 	addi	r4,r2,-32
 144d09c:	02000804 	movi	r8,32
 144d0a0:	2908d83a 	srl	r4,r5,r4
 144d0a4:	12002526 	beq	r2,r8,144d13c <__subdf3+0x8c0>
 144d0a8:	02001004 	movi	r8,64
 144d0ac:	4085c83a 	sub	r2,r8,r2
 144d0b0:	288a983a 	sll	r5,r5,r2
 144d0b4:	2c62b03a 	or	r17,r5,r17
 144d0b8:	8822c03a 	cmpne	r17,r17,zero
 144d0bc:	8922b03a 	or	r17,r17,r4
 144d0c0:	0005883a 	mov	r2,zero
 144d0c4:	003f2406 	br	144cd58 <__alt_data_end+0xfffe7558>
 144d0c8:	01402034 	movhi	r5,128
 144d0cc:	0011883a 	mov	r8,zero
 144d0d0:	297fffc4 	addi	r5,r5,-1
 144d0d4:	047ffe04 	movi	r17,-8
 144d0d8:	0401ffc4 	movi	r16,2047
 144d0dc:	003e6a06 	br	144ca88 <__alt_data_end+0xfffe7288>
 144d0e0:	2c62b03a 	or	r17,r5,r17
 144d0e4:	8822c03a 	cmpne	r17,r17,zero
 144d0e8:	0005883a 	mov	r2,zero
 144d0ec:	003fa506 	br	144cf84 <__alt_data_end+0xfffe7784>
 144d0f0:	180b883a 	mov	r5,r3
 144d0f4:	3023883a 	mov	r17,r6
 144d0f8:	003e0306 	br	144c908 <__alt_data_end+0xfffe7108>
 144d0fc:	180b883a 	mov	r5,r3
 144d100:	3023883a 	mov	r17,r6
 144d104:	0401ffc4 	movi	r16,2047
 144d108:	003dff06 	br	144c908 <__alt_data_end+0xfffe7108>
 144d10c:	113ff804 	addi	r4,r2,-32
 144d110:	01c00804 	movi	r7,32
 144d114:	2908d83a 	srl	r4,r5,r4
 144d118:	11c00a26 	beq	r2,r7,144d144 <__subdf3+0x8c8>
 144d11c:	01c01004 	movi	r7,64
 144d120:	3885c83a 	sub	r2,r7,r2
 144d124:	288a983a 	sll	r5,r5,r2
 144d128:	2c62b03a 	or	r17,r5,r17
 144d12c:	8822c03a 	cmpne	r17,r17,zero
 144d130:	8922b03a 	or	r17,r17,r4
 144d134:	0005883a 	mov	r2,zero
 144d138:	003f9206 	br	144cf84 <__alt_data_end+0xfffe7784>
 144d13c:	000b883a 	mov	r5,zero
 144d140:	003fdc06 	br	144d0b4 <__alt_data_end+0xfffe78b4>
 144d144:	000b883a 	mov	r5,zero
 144d148:	003ff706 	br	144d128 <__alt_data_end+0xfffe7928>

0144d14c <__fixdfsi>:
 144d14c:	2806d53a 	srli	r3,r5,20
 144d150:	00800434 	movhi	r2,16
 144d154:	10bfffc4 	addi	r2,r2,-1
 144d158:	18c1ffcc 	andi	r3,r3,2047
 144d15c:	0180ff84 	movi	r6,1022
 144d160:	2884703a 	and	r2,r5,r2
 144d164:	280ad7fa 	srli	r5,r5,31
 144d168:	30c0130e 	bge	r6,r3,144d1b8 <__fixdfsi+0x6c>
 144d16c:	01810744 	movi	r6,1053
 144d170:	30c00d16 	blt	r6,r3,144d1a8 <__fixdfsi+0x5c>
 144d174:	01810cc4 	movi	r6,1075
 144d178:	30cdc83a 	sub	r6,r6,r3
 144d17c:	01c007c4 	movi	r7,31
 144d180:	10800434 	orhi	r2,r2,16
 144d184:	39800e0e 	bge	r7,r6,144d1c0 <__fixdfsi+0x74>
 144d188:	010104c4 	movi	r4,1043
 144d18c:	20c7c83a 	sub	r3,r4,r3
 144d190:	10c6d83a 	srl	r3,r2,r3
 144d194:	29403fcc 	andi	r5,r5,255
 144d198:	0145c83a 	sub	r2,zero,r5
 144d19c:	1884f03a 	xor	r2,r3,r2
 144d1a0:	1145883a 	add	r2,r2,r5
 144d1a4:	f800283a 	ret
 144d1a8:	00a00034 	movhi	r2,32768
 144d1ac:	10bfffc4 	addi	r2,r2,-1
 144d1b0:	2885883a 	add	r2,r5,r2
 144d1b4:	f800283a 	ret
 144d1b8:	0005883a 	mov	r2,zero
 144d1bc:	f800283a 	ret
 144d1c0:	18fefb44 	addi	r3,r3,-1043
 144d1c4:	2188d83a 	srl	r4,r4,r6
 144d1c8:	10c6983a 	sll	r3,r2,r3
 144d1cc:	20c6b03a 	or	r3,r4,r3
 144d1d0:	003ff006 	br	144d194 <__alt_data_end+0xfffe7994>

0144d1d4 <__floatsidf>:
 144d1d4:	defffd04 	addi	sp,sp,-12
 144d1d8:	dc400115 	stw	r17,4(sp)
 144d1dc:	dfc00215 	stw	ra,8(sp)
 144d1e0:	dc000015 	stw	r16,0(sp)
 144d1e4:	2023883a 	mov	r17,r4
 144d1e8:	20001426 	beq	r4,zero,144d23c <__floatsidf+0x68>
 144d1ec:	2020d7fa 	srli	r16,r4,31
 144d1f0:	80000126 	beq	r16,zero,144d1f8 <__floatsidf+0x24>
 144d1f4:	0123c83a 	sub	r17,zero,r4
 144d1f8:	8809883a 	mov	r4,r17
 144d1fc:	14409e40 	call	14409e4 <__clzsi2>
 144d200:	01410784 	movi	r5,1054
 144d204:	00c00284 	movi	r3,10
 144d208:	288bc83a 	sub	r5,r5,r2
 144d20c:	18801c16 	blt	r3,r2,144d280 <__floatsidf+0xac>
 144d210:	00c002c4 	movi	r3,11
 144d214:	1887c83a 	sub	r3,r3,r2
 144d218:	88c8d83a 	srl	r4,r17,r3
 144d21c:	00c00434 	movhi	r3,16
 144d220:	18ffffc4 	addi	r3,r3,-1
 144d224:	10800544 	addi	r2,r2,21
 144d228:	20c8703a 	and	r4,r4,r3
 144d22c:	8884983a 	sll	r2,r17,r2
 144d230:	28c1ffcc 	andi	r3,r5,2047
 144d234:	800d883a 	mov	r6,r16
 144d238:	00000406 	br	144d24c <__floatsidf+0x78>
 144d23c:	000d883a 	mov	r6,zero
 144d240:	0007883a 	mov	r3,zero
 144d244:	0009883a 	mov	r4,zero
 144d248:	0005883a 	mov	r2,zero
 144d24c:	180a953a 	slli	r5,r3,20
 144d250:	31803fcc 	andi	r6,r6,255
 144d254:	00c00434 	movhi	r3,16
 144d258:	300c97fa 	slli	r6,r6,31
 144d25c:	18ffffc4 	addi	r3,r3,-1
 144d260:	20c6703a 	and	r3,r4,r3
 144d264:	1946b03a 	or	r3,r3,r5
 144d268:	1986b03a 	or	r3,r3,r6
 144d26c:	dfc00217 	ldw	ra,8(sp)
 144d270:	dc400117 	ldw	r17,4(sp)
 144d274:	dc000017 	ldw	r16,0(sp)
 144d278:	dec00304 	addi	sp,sp,12
 144d27c:	f800283a 	ret
 144d280:	10fffd44 	addi	r3,r2,-11
 144d284:	88c8983a 	sll	r4,r17,r3
 144d288:	00800434 	movhi	r2,16
 144d28c:	10bfffc4 	addi	r2,r2,-1
 144d290:	2088703a 	and	r4,r4,r2
 144d294:	28c1ffcc 	andi	r3,r5,2047
 144d298:	800d883a 	mov	r6,r16
 144d29c:	0005883a 	mov	r2,zero
 144d2a0:	003fea06 	br	144d24c <__alt_data_end+0xfffe7a4c>

0144d2a4 <__floatunsidf>:
 144d2a4:	defffe04 	addi	sp,sp,-8
 144d2a8:	dc000015 	stw	r16,0(sp)
 144d2ac:	dfc00115 	stw	ra,4(sp)
 144d2b0:	2021883a 	mov	r16,r4
 144d2b4:	20001026 	beq	r4,zero,144d2f8 <__floatunsidf+0x54>
 144d2b8:	14409e40 	call	14409e4 <__clzsi2>
 144d2bc:	01410784 	movi	r5,1054
 144d2c0:	100d883a 	mov	r6,r2
 144d2c4:	288bc83a 	sub	r5,r5,r2
 144d2c8:	00800284 	movi	r2,10
 144d2cc:	11801616 	blt	r2,r6,144d328 <__floatunsidf+0x84>
 144d2d0:	008002c4 	movi	r2,11
 144d2d4:	1185c83a 	sub	r2,r2,r6
 144d2d8:	8084d83a 	srl	r2,r16,r2
 144d2dc:	00c00434 	movhi	r3,16
 144d2e0:	31c00544 	addi	r7,r6,21
 144d2e4:	18ffffc4 	addi	r3,r3,-1
 144d2e8:	81e0983a 	sll	r16,r16,r7
 144d2ec:	10cc703a 	and	r6,r2,r3
 144d2f0:	2941ffcc 	andi	r5,r5,2047
 144d2f4:	00000206 	br	144d300 <__floatunsidf+0x5c>
 144d2f8:	000b883a 	mov	r5,zero
 144d2fc:	000d883a 	mov	r6,zero
 144d300:	280a953a 	slli	r5,r5,20
 144d304:	00c00434 	movhi	r3,16
 144d308:	18ffffc4 	addi	r3,r3,-1
 144d30c:	30c6703a 	and	r3,r6,r3
 144d310:	8005883a 	mov	r2,r16
 144d314:	1946b03a 	or	r3,r3,r5
 144d318:	dfc00117 	ldw	ra,4(sp)
 144d31c:	dc000017 	ldw	r16,0(sp)
 144d320:	dec00204 	addi	sp,sp,8
 144d324:	f800283a 	ret
 144d328:	31bffd44 	addi	r6,r6,-11
 144d32c:	818c983a 	sll	r6,r16,r6
 144d330:	00800434 	movhi	r2,16
 144d334:	10bfffc4 	addi	r2,r2,-1
 144d338:	2941ffcc 	andi	r5,r5,2047
 144d33c:	0021883a 	mov	r16,zero
 144d340:	308c703a 	and	r6,r6,r2
 144d344:	003fee06 	br	144d300 <__alt_data_end+0xfffe7b00>

0144d348 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 144d348:	defffe04 	addi	sp,sp,-8
 144d34c:	dfc00115 	stw	ra,4(sp)
 144d350:	df000015 	stw	fp,0(sp)
 144d354:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 144d358:	00805174 	movhi	r2,325
 144d35c:	1085a404 	addi	r2,r2,5776
 144d360:	10800017 	ldw	r2,0(r2)
 144d364:	10000526 	beq	r2,zero,144d37c <alt_get_errno+0x34>
 144d368:	00805174 	movhi	r2,325
 144d36c:	1085a404 	addi	r2,r2,5776
 144d370:	10800017 	ldw	r2,0(r2)
 144d374:	103ee83a 	callr	r2
 144d378:	00000206 	br	144d384 <alt_get_errno+0x3c>
 144d37c:	00805174 	movhi	r2,325
 144d380:	1088b804 	addi	r2,r2,8928
}
 144d384:	e037883a 	mov	sp,fp
 144d388:	dfc00117 	ldw	ra,4(sp)
 144d38c:	df000017 	ldw	fp,0(sp)
 144d390:	dec00204 	addi	sp,sp,8
 144d394:	f800283a 	ret

0144d398 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 144d398:	defffb04 	addi	sp,sp,-20
 144d39c:	dfc00415 	stw	ra,16(sp)
 144d3a0:	df000315 	stw	fp,12(sp)
 144d3a4:	df000304 	addi	fp,sp,12
 144d3a8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 144d3ac:	e0bfff17 	ldw	r2,-4(fp)
 144d3b0:	10000816 	blt	r2,zero,144d3d4 <close+0x3c>
 144d3b4:	e13fff17 	ldw	r4,-4(fp)
 144d3b8:	01400304 	movi	r5,12
 144d3bc:	1440a480 	call	1440a48 <__mulsi3>
 144d3c0:	1007883a 	mov	r3,r2
 144d3c4:	00805174 	movhi	r2,325
 144d3c8:	1084df04 	addi	r2,r2,4988
 144d3cc:	1885883a 	add	r2,r3,r2
 144d3d0:	00000106 	br	144d3d8 <close+0x40>
 144d3d4:	0005883a 	mov	r2,zero
 144d3d8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 144d3dc:	e0bffd17 	ldw	r2,-12(fp)
 144d3e0:	10001926 	beq	r2,zero,144d448 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 144d3e4:	e0bffd17 	ldw	r2,-12(fp)
 144d3e8:	10800017 	ldw	r2,0(r2)
 144d3ec:	10800417 	ldw	r2,16(r2)
 144d3f0:	10000626 	beq	r2,zero,144d40c <close+0x74>
 144d3f4:	e0bffd17 	ldw	r2,-12(fp)
 144d3f8:	10800017 	ldw	r2,0(r2)
 144d3fc:	10800417 	ldw	r2,16(r2)
 144d400:	e13ffd17 	ldw	r4,-12(fp)
 144d404:	103ee83a 	callr	r2
 144d408:	00000106 	br	144d410 <close+0x78>
 144d40c:	0005883a 	mov	r2,zero
 144d410:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 144d414:	e13fff17 	ldw	r4,-4(fp)
 144d418:	144daac0 	call	144daac <alt_release_fd>
    if (rval < 0)
 144d41c:	e0bffe17 	ldw	r2,-8(fp)
 144d420:	1000070e 	bge	r2,zero,144d440 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 144d424:	144d3480 	call	144d348 <alt_get_errno>
 144d428:	1007883a 	mov	r3,r2
 144d42c:	e0bffe17 	ldw	r2,-8(fp)
 144d430:	0085c83a 	sub	r2,zero,r2
 144d434:	18800015 	stw	r2,0(r3)
      return -1;
 144d438:	00bfffc4 	movi	r2,-1
 144d43c:	00000706 	br	144d45c <close+0xc4>
    }
    return 0;
 144d440:	0005883a 	mov	r2,zero
 144d444:	00000506 	br	144d45c <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 144d448:	144d3480 	call	144d348 <alt_get_errno>
 144d44c:	1007883a 	mov	r3,r2
 144d450:	00801444 	movi	r2,81
 144d454:	18800015 	stw	r2,0(r3)
    return -1;
 144d458:	00bfffc4 	movi	r2,-1
  }
}
 144d45c:	e037883a 	mov	sp,fp
 144d460:	dfc00117 	ldw	ra,4(sp)
 144d464:	df000017 	ldw	fp,0(sp)
 144d468:	dec00204 	addi	sp,sp,8
 144d46c:	f800283a 	ret

0144d470 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 144d470:	defffc04 	addi	sp,sp,-16
 144d474:	df000315 	stw	fp,12(sp)
 144d478:	df000304 	addi	fp,sp,12
 144d47c:	e13ffd15 	stw	r4,-12(fp)
 144d480:	e17ffe15 	stw	r5,-8(fp)
 144d484:	e1bfff15 	stw	r6,-4(fp)
  return len;
 144d488:	e0bfff17 	ldw	r2,-4(fp)
}
 144d48c:	e037883a 	mov	sp,fp
 144d490:	df000017 	ldw	fp,0(sp)
 144d494:	dec00104 	addi	sp,sp,4
 144d498:	f800283a 	ret

0144d49c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 144d49c:	defffe04 	addi	sp,sp,-8
 144d4a0:	dfc00115 	stw	ra,4(sp)
 144d4a4:	df000015 	stw	fp,0(sp)
 144d4a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 144d4ac:	00805174 	movhi	r2,325
 144d4b0:	1085a404 	addi	r2,r2,5776
 144d4b4:	10800017 	ldw	r2,0(r2)
 144d4b8:	10000526 	beq	r2,zero,144d4d0 <alt_get_errno+0x34>
 144d4bc:	00805174 	movhi	r2,325
 144d4c0:	1085a404 	addi	r2,r2,5776
 144d4c4:	10800017 	ldw	r2,0(r2)
 144d4c8:	103ee83a 	callr	r2
 144d4cc:	00000206 	br	144d4d8 <alt_get_errno+0x3c>
 144d4d0:	00805174 	movhi	r2,325
 144d4d4:	1088b804 	addi	r2,r2,8928
}
 144d4d8:	e037883a 	mov	sp,fp
 144d4dc:	dfc00117 	ldw	ra,4(sp)
 144d4e0:	df000017 	ldw	fp,0(sp)
 144d4e4:	dec00204 	addi	sp,sp,8
 144d4e8:	f800283a 	ret

0144d4ec <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 144d4ec:	defffb04 	addi	sp,sp,-20
 144d4f0:	dfc00415 	stw	ra,16(sp)
 144d4f4:	df000315 	stw	fp,12(sp)
 144d4f8:	df000304 	addi	fp,sp,12
 144d4fc:	e13ffe15 	stw	r4,-8(fp)
 144d500:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 144d504:	e0bffe17 	ldw	r2,-8(fp)
 144d508:	10000816 	blt	r2,zero,144d52c <fstat+0x40>
 144d50c:	e13ffe17 	ldw	r4,-8(fp)
 144d510:	01400304 	movi	r5,12
 144d514:	1440a480 	call	1440a48 <__mulsi3>
 144d518:	1007883a 	mov	r3,r2
 144d51c:	00805174 	movhi	r2,325
 144d520:	1084df04 	addi	r2,r2,4988
 144d524:	1885883a 	add	r2,r3,r2
 144d528:	00000106 	br	144d530 <fstat+0x44>
 144d52c:	0005883a 	mov	r2,zero
 144d530:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 144d534:	e0bffd17 	ldw	r2,-12(fp)
 144d538:	10001026 	beq	r2,zero,144d57c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 144d53c:	e0bffd17 	ldw	r2,-12(fp)
 144d540:	10800017 	ldw	r2,0(r2)
 144d544:	10800817 	ldw	r2,32(r2)
 144d548:	10000726 	beq	r2,zero,144d568 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 144d54c:	e0bffd17 	ldw	r2,-12(fp)
 144d550:	10800017 	ldw	r2,0(r2)
 144d554:	10800817 	ldw	r2,32(r2)
 144d558:	e13ffd17 	ldw	r4,-12(fp)
 144d55c:	e17fff17 	ldw	r5,-4(fp)
 144d560:	103ee83a 	callr	r2
 144d564:	00000a06 	br	144d590 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 144d568:	e0bfff17 	ldw	r2,-4(fp)
 144d56c:	00c80004 	movi	r3,8192
 144d570:	10c00115 	stw	r3,4(r2)
      return 0;
 144d574:	0005883a 	mov	r2,zero
 144d578:	00000506 	br	144d590 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 144d57c:	144d49c0 	call	144d49c <alt_get_errno>
 144d580:	1007883a 	mov	r3,r2
 144d584:	00801444 	movi	r2,81
 144d588:	18800015 	stw	r2,0(r3)
    return -1;
 144d58c:	00bfffc4 	movi	r2,-1
  }
}
 144d590:	e037883a 	mov	sp,fp
 144d594:	dfc00117 	ldw	ra,4(sp)
 144d598:	df000017 	ldw	fp,0(sp)
 144d59c:	dec00204 	addi	sp,sp,8
 144d5a0:	f800283a 	ret

0144d5a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 144d5a4:	defffe04 	addi	sp,sp,-8
 144d5a8:	dfc00115 	stw	ra,4(sp)
 144d5ac:	df000015 	stw	fp,0(sp)
 144d5b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 144d5b4:	00805174 	movhi	r2,325
 144d5b8:	1085a404 	addi	r2,r2,5776
 144d5bc:	10800017 	ldw	r2,0(r2)
 144d5c0:	10000526 	beq	r2,zero,144d5d8 <alt_get_errno+0x34>
 144d5c4:	00805174 	movhi	r2,325
 144d5c8:	1085a404 	addi	r2,r2,5776
 144d5cc:	10800017 	ldw	r2,0(r2)
 144d5d0:	103ee83a 	callr	r2
 144d5d4:	00000206 	br	144d5e0 <alt_get_errno+0x3c>
 144d5d8:	00805174 	movhi	r2,325
 144d5dc:	1088b804 	addi	r2,r2,8928
}
 144d5e0:	e037883a 	mov	sp,fp
 144d5e4:	dfc00117 	ldw	ra,4(sp)
 144d5e8:	df000017 	ldw	fp,0(sp)
 144d5ec:	dec00204 	addi	sp,sp,8
 144d5f0:	f800283a 	ret

0144d5f4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 144d5f4:	deffed04 	addi	sp,sp,-76
 144d5f8:	dfc01215 	stw	ra,72(sp)
 144d5fc:	df001115 	stw	fp,68(sp)
 144d600:	df001104 	addi	fp,sp,68
 144d604:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 144d608:	e0bfff17 	ldw	r2,-4(fp)
 144d60c:	10000816 	blt	r2,zero,144d630 <isatty+0x3c>
 144d610:	e13fff17 	ldw	r4,-4(fp)
 144d614:	01400304 	movi	r5,12
 144d618:	1440a480 	call	1440a48 <__mulsi3>
 144d61c:	1007883a 	mov	r3,r2
 144d620:	00805174 	movhi	r2,325
 144d624:	1084df04 	addi	r2,r2,4988
 144d628:	1885883a 	add	r2,r3,r2
 144d62c:	00000106 	br	144d634 <isatty+0x40>
 144d630:	0005883a 	mov	r2,zero
 144d634:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 144d638:	e0bfef17 	ldw	r2,-68(fp)
 144d63c:	10000e26 	beq	r2,zero,144d678 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 144d640:	e0bfef17 	ldw	r2,-68(fp)
 144d644:	10800017 	ldw	r2,0(r2)
 144d648:	10800817 	ldw	r2,32(r2)
 144d64c:	1000021e 	bne	r2,zero,144d658 <isatty+0x64>
    {
      return 1;
 144d650:	00800044 	movi	r2,1
 144d654:	00000d06 	br	144d68c <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 144d658:	e0bff004 	addi	r2,fp,-64
 144d65c:	e13fff17 	ldw	r4,-4(fp)
 144d660:	100b883a 	mov	r5,r2
 144d664:	144d4ec0 	call	144d4ec <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 144d668:	e0bff117 	ldw	r2,-60(fp)
 144d66c:	10880020 	cmpeqi	r2,r2,8192
 144d670:	10803fcc 	andi	r2,r2,255
 144d674:	00000506 	br	144d68c <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 144d678:	144d5a40 	call	144d5a4 <alt_get_errno>
 144d67c:	1007883a 	mov	r3,r2
 144d680:	00801444 	movi	r2,81
 144d684:	18800015 	stw	r2,0(r3)
    return 0;
 144d688:	0005883a 	mov	r2,zero
  }
}
 144d68c:	e037883a 	mov	sp,fp
 144d690:	dfc00117 	ldw	ra,4(sp)
 144d694:	df000017 	ldw	fp,0(sp)
 144d698:	dec00204 	addi	sp,sp,8
 144d69c:	f800283a 	ret

0144d6a0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 144d6a0:	defffc04 	addi	sp,sp,-16
 144d6a4:	df000315 	stw	fp,12(sp)
 144d6a8:	df000304 	addi	fp,sp,12
 144d6ac:	e13ffd15 	stw	r4,-12(fp)
 144d6b0:	e17ffe15 	stw	r5,-8(fp)
 144d6b4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 144d6b8:	e0fffe17 	ldw	r3,-8(fp)
 144d6bc:	e0bffd17 	ldw	r2,-12(fp)
 144d6c0:	18800c26 	beq	r3,r2,144d6f4 <alt_load_section+0x54>
  {
    while( to != end )
 144d6c4:	00000806 	br	144d6e8 <alt_load_section+0x48>
    {
      *to++ = *from++;
 144d6c8:	e0bffe17 	ldw	r2,-8(fp)
 144d6cc:	10c00104 	addi	r3,r2,4
 144d6d0:	e0fffe15 	stw	r3,-8(fp)
 144d6d4:	e0fffd17 	ldw	r3,-12(fp)
 144d6d8:	19000104 	addi	r4,r3,4
 144d6dc:	e13ffd15 	stw	r4,-12(fp)
 144d6e0:	18c00017 	ldw	r3,0(r3)
 144d6e4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 144d6e8:	e0fffe17 	ldw	r3,-8(fp)
 144d6ec:	e0bfff17 	ldw	r2,-4(fp)
 144d6f0:	18bff51e 	bne	r3,r2,144d6c8 <__alt_data_end+0xfffe7ec8>
    {
      *to++ = *from++;
    }
  }
}
 144d6f4:	e037883a 	mov	sp,fp
 144d6f8:	df000017 	ldw	fp,0(sp)
 144d6fc:	dec00104 	addi	sp,sp,4
 144d700:	f800283a 	ret

0144d704 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 144d704:	defffe04 	addi	sp,sp,-8
 144d708:	dfc00115 	stw	ra,4(sp)
 144d70c:	df000015 	stw	fp,0(sp)
 144d710:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 144d714:	01005174 	movhi	r4,325
 144d718:	2105af04 	addi	r4,r4,5820
 144d71c:	01405174 	movhi	r5,325
 144d720:	2942ac04 	addi	r5,r5,2736
 144d724:	01805174 	movhi	r6,325
 144d728:	3185af04 	addi	r6,r6,5820
 144d72c:	144d6a00 	call	144d6a0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 144d730:	01005134 	movhi	r4,324
 144d734:	21000804 	addi	r4,r4,32
 144d738:	01405134 	movhi	r5,324
 144d73c:	29400804 	addi	r5,r5,32
 144d740:	01805134 	movhi	r6,324
 144d744:	31808b04 	addi	r6,r6,556
 144d748:	144d6a00 	call	144d6a0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 144d74c:	01005174 	movhi	r4,325
 144d750:	2101c804 	addi	r4,r4,1824
 144d754:	01405174 	movhi	r5,325
 144d758:	2941c804 	addi	r5,r5,1824
 144d75c:	01805174 	movhi	r6,325
 144d760:	3182ac04 	addi	r6,r6,2736
 144d764:	144d6a00 	call	144d6a0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 144d768:	144f7240 	call	144f724 <alt_dcache_flush_all>
  alt_icache_flush_all();
 144d76c:	144f97c0 	call	144f97c <alt_icache_flush_all>
}
 144d770:	e037883a 	mov	sp,fp
 144d774:	dfc00117 	ldw	ra,4(sp)
 144d778:	df000017 	ldw	fp,0(sp)
 144d77c:	dec00204 	addi	sp,sp,8
 144d780:	f800283a 	ret

0144d784 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 144d784:	defffe04 	addi	sp,sp,-8
 144d788:	dfc00115 	stw	ra,4(sp)
 144d78c:	df000015 	stw	fp,0(sp)
 144d790:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 144d794:	00805174 	movhi	r2,325
 144d798:	1085a404 	addi	r2,r2,5776
 144d79c:	10800017 	ldw	r2,0(r2)
 144d7a0:	10000526 	beq	r2,zero,144d7b8 <alt_get_errno+0x34>
 144d7a4:	00805174 	movhi	r2,325
 144d7a8:	1085a404 	addi	r2,r2,5776
 144d7ac:	10800017 	ldw	r2,0(r2)
 144d7b0:	103ee83a 	callr	r2
 144d7b4:	00000206 	br	144d7c0 <alt_get_errno+0x3c>
 144d7b8:	00805174 	movhi	r2,325
 144d7bc:	1088b804 	addi	r2,r2,8928
}
 144d7c0:	e037883a 	mov	sp,fp
 144d7c4:	dfc00117 	ldw	ra,4(sp)
 144d7c8:	df000017 	ldw	fp,0(sp)
 144d7cc:	dec00204 	addi	sp,sp,8
 144d7d0:	f800283a 	ret

0144d7d4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 144d7d4:	defff904 	addi	sp,sp,-28
 144d7d8:	dfc00615 	stw	ra,24(sp)
 144d7dc:	df000515 	stw	fp,20(sp)
 144d7e0:	df000504 	addi	fp,sp,20
 144d7e4:	e13ffd15 	stw	r4,-12(fp)
 144d7e8:	e17ffe15 	stw	r5,-8(fp)
 144d7ec:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 144d7f0:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 144d7f4:	e0bffd17 	ldw	r2,-12(fp)
 144d7f8:	10000816 	blt	r2,zero,144d81c <lseek+0x48>
 144d7fc:	e13ffd17 	ldw	r4,-12(fp)
 144d800:	01400304 	movi	r5,12
 144d804:	1440a480 	call	1440a48 <__mulsi3>
 144d808:	1007883a 	mov	r3,r2
 144d80c:	00805174 	movhi	r2,325
 144d810:	1084df04 	addi	r2,r2,4988
 144d814:	1885883a 	add	r2,r3,r2
 144d818:	00000106 	br	144d820 <lseek+0x4c>
 144d81c:	0005883a 	mov	r2,zero
 144d820:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 144d824:	e0bffc17 	ldw	r2,-16(fp)
 144d828:	10001026 	beq	r2,zero,144d86c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 144d82c:	e0bffc17 	ldw	r2,-16(fp)
 144d830:	10800017 	ldw	r2,0(r2)
 144d834:	10800717 	ldw	r2,28(r2)
 144d838:	10000926 	beq	r2,zero,144d860 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 144d83c:	e0bffc17 	ldw	r2,-16(fp)
 144d840:	10800017 	ldw	r2,0(r2)
 144d844:	10800717 	ldw	r2,28(r2)
 144d848:	e13ffc17 	ldw	r4,-16(fp)
 144d84c:	e17ffe17 	ldw	r5,-8(fp)
 144d850:	e1bfff17 	ldw	r6,-4(fp)
 144d854:	103ee83a 	callr	r2
 144d858:	e0bffb15 	stw	r2,-20(fp)
 144d85c:	00000506 	br	144d874 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 144d860:	00bfde84 	movi	r2,-134
 144d864:	e0bffb15 	stw	r2,-20(fp)
 144d868:	00000206 	br	144d874 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 144d86c:	00bfebc4 	movi	r2,-81
 144d870:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 144d874:	e0bffb17 	ldw	r2,-20(fp)
 144d878:	1000070e 	bge	r2,zero,144d898 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 144d87c:	144d7840 	call	144d784 <alt_get_errno>
 144d880:	1007883a 	mov	r3,r2
 144d884:	e0bffb17 	ldw	r2,-20(fp)
 144d888:	0085c83a 	sub	r2,zero,r2
 144d88c:	18800015 	stw	r2,0(r3)
    rc = -1;
 144d890:	00bfffc4 	movi	r2,-1
 144d894:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 144d898:	e0bffb17 	ldw	r2,-20(fp)
}
 144d89c:	e037883a 	mov	sp,fp
 144d8a0:	dfc00117 	ldw	ra,4(sp)
 144d8a4:	df000017 	ldw	fp,0(sp)
 144d8a8:	dec00204 	addi	sp,sp,8
 144d8ac:	f800283a 	ret

0144d8b0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 144d8b0:	defffd04 	addi	sp,sp,-12
 144d8b4:	dfc00215 	stw	ra,8(sp)
 144d8b8:	df000115 	stw	fp,4(sp)
 144d8bc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 144d8c0:	0009883a 	mov	r4,zero
 144d8c4:	144dd940 	call	144dd94 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 144d8c8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 144d8cc:	144ddc80 	call	144ddc8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 144d8d0:	01005174 	movhi	r4,325
 144d8d4:	21029704 	addi	r4,r4,2652
 144d8d8:	01405174 	movhi	r5,325
 144d8dc:	29429704 	addi	r5,r5,2652
 144d8e0:	01805174 	movhi	r6,325
 144d8e4:	31829704 	addi	r6,r6,2652
 144d8e8:	144fd480 	call	144fd48 <alt_io_redirect>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 144d8ec:	d1232017 	ldw	r4,-29568(gp)
 144d8f0:	d0e32117 	ldw	r3,-29564(gp)
 144d8f4:	d0a32217 	ldw	r2,-29560(gp)
 144d8f8:	180b883a 	mov	r5,r3
 144d8fc:	100d883a 	mov	r6,r2
 144d900:	14402680 	call	1440268 <main>
 144d904:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 144d908:	01000044 	movi	r4,1
 144d90c:	144d3980 	call	144d398 <close>
  exit (result);
 144d910:	e13fff17 	ldw	r4,-4(fp)
 144d914:	14504a40 	call	14504a4 <exit>

0144d918 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 144d918:	defffe04 	addi	sp,sp,-8
 144d91c:	df000115 	stw	fp,4(sp)
 144d920:	df000104 	addi	fp,sp,4
 144d924:	e13fff15 	stw	r4,-4(fp)
}
 144d928:	e037883a 	mov	sp,fp
 144d92c:	df000017 	ldw	fp,0(sp)
 144d930:	dec00104 	addi	sp,sp,4
 144d934:	f800283a 	ret

0144d938 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 144d938:	defffe04 	addi	sp,sp,-8
 144d93c:	df000115 	stw	fp,4(sp)
 144d940:	df000104 	addi	fp,sp,4
 144d944:	e13fff15 	stw	r4,-4(fp)
}
 144d948:	e037883a 	mov	sp,fp
 144d94c:	df000017 	ldw	fp,0(sp)
 144d950:	dec00104 	addi	sp,sp,4
 144d954:	f800283a 	ret

0144d958 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 144d958:	defffe04 	addi	sp,sp,-8
 144d95c:	dfc00115 	stw	ra,4(sp)
 144d960:	df000015 	stw	fp,0(sp)
 144d964:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 144d968:	00805174 	movhi	r2,325
 144d96c:	1085a404 	addi	r2,r2,5776
 144d970:	10800017 	ldw	r2,0(r2)
 144d974:	10000526 	beq	r2,zero,144d98c <alt_get_errno+0x34>
 144d978:	00805174 	movhi	r2,325
 144d97c:	1085a404 	addi	r2,r2,5776
 144d980:	10800017 	ldw	r2,0(r2)
 144d984:	103ee83a 	callr	r2
 144d988:	00000206 	br	144d994 <alt_get_errno+0x3c>
 144d98c:	00805174 	movhi	r2,325
 144d990:	1088b804 	addi	r2,r2,8928
}
 144d994:	e037883a 	mov	sp,fp
 144d998:	dfc00117 	ldw	ra,4(sp)
 144d99c:	df000017 	ldw	fp,0(sp)
 144d9a0:	dec00204 	addi	sp,sp,8
 144d9a4:	f800283a 	ret

0144d9a8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 144d9a8:	defff904 	addi	sp,sp,-28
 144d9ac:	dfc00615 	stw	ra,24(sp)
 144d9b0:	df000515 	stw	fp,20(sp)
 144d9b4:	df000504 	addi	fp,sp,20
 144d9b8:	e13ffd15 	stw	r4,-12(fp)
 144d9bc:	e17ffe15 	stw	r5,-8(fp)
 144d9c0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 144d9c4:	e0bffd17 	ldw	r2,-12(fp)
 144d9c8:	10000816 	blt	r2,zero,144d9ec <read+0x44>
 144d9cc:	e13ffd17 	ldw	r4,-12(fp)
 144d9d0:	01400304 	movi	r5,12
 144d9d4:	1440a480 	call	1440a48 <__mulsi3>
 144d9d8:	1007883a 	mov	r3,r2
 144d9dc:	00805174 	movhi	r2,325
 144d9e0:	1084df04 	addi	r2,r2,4988
 144d9e4:	1885883a 	add	r2,r3,r2
 144d9e8:	00000106 	br	144d9f0 <read+0x48>
 144d9ec:	0005883a 	mov	r2,zero
 144d9f0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 144d9f4:	e0bffb17 	ldw	r2,-20(fp)
 144d9f8:	10002226 	beq	r2,zero,144da84 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 144d9fc:	e0bffb17 	ldw	r2,-20(fp)
 144da00:	10800217 	ldw	r2,8(r2)
 144da04:	108000cc 	andi	r2,r2,3
 144da08:	10800060 	cmpeqi	r2,r2,1
 144da0c:	1000181e 	bne	r2,zero,144da70 <read+0xc8>
        (fd->dev->read))
 144da10:	e0bffb17 	ldw	r2,-20(fp)
 144da14:	10800017 	ldw	r2,0(r2)
 144da18:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 144da1c:	10001426 	beq	r2,zero,144da70 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 144da20:	e0bffb17 	ldw	r2,-20(fp)
 144da24:	10800017 	ldw	r2,0(r2)
 144da28:	10800517 	ldw	r2,20(r2)
 144da2c:	e0ffff17 	ldw	r3,-4(fp)
 144da30:	e13ffb17 	ldw	r4,-20(fp)
 144da34:	e17ffe17 	ldw	r5,-8(fp)
 144da38:	180d883a 	mov	r6,r3
 144da3c:	103ee83a 	callr	r2
 144da40:	e0bffc15 	stw	r2,-16(fp)
 144da44:	e0bffc17 	ldw	r2,-16(fp)
 144da48:	1000070e 	bge	r2,zero,144da68 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 144da4c:	144d9580 	call	144d958 <alt_get_errno>
 144da50:	1007883a 	mov	r3,r2
 144da54:	e0bffc17 	ldw	r2,-16(fp)
 144da58:	0085c83a 	sub	r2,zero,r2
 144da5c:	18800015 	stw	r2,0(r3)
          return -1;
 144da60:	00bfffc4 	movi	r2,-1
 144da64:	00000c06 	br	144da98 <read+0xf0>
        }
        return rval;
 144da68:	e0bffc17 	ldw	r2,-16(fp)
 144da6c:	00000a06 	br	144da98 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 144da70:	144d9580 	call	144d958 <alt_get_errno>
 144da74:	1007883a 	mov	r3,r2
 144da78:	00800344 	movi	r2,13
 144da7c:	18800015 	stw	r2,0(r3)
 144da80:	00000406 	br	144da94 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 144da84:	144d9580 	call	144d958 <alt_get_errno>
 144da88:	1007883a 	mov	r3,r2
 144da8c:	00801444 	movi	r2,81
 144da90:	18800015 	stw	r2,0(r3)
  }
  return -1;
 144da94:	00bfffc4 	movi	r2,-1
}
 144da98:	e037883a 	mov	sp,fp
 144da9c:	dfc00117 	ldw	ra,4(sp)
 144daa0:	df000017 	ldw	fp,0(sp)
 144daa4:	dec00204 	addi	sp,sp,8
 144daa8:	f800283a 	ret

0144daac <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 144daac:	defffc04 	addi	sp,sp,-16
 144dab0:	dfc00315 	stw	ra,12(sp)
 144dab4:	df000215 	stw	fp,8(sp)
 144dab8:	dc000115 	stw	r16,4(sp)
 144dabc:	df000204 	addi	fp,sp,8
 144dac0:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 144dac4:	e0bffe17 	ldw	r2,-8(fp)
 144dac8:	108000d0 	cmplti	r2,r2,3
 144dacc:	1000111e 	bne	r2,zero,144db14 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 144dad0:	04005174 	movhi	r16,325
 144dad4:	8404df04 	addi	r16,r16,4988
 144dad8:	e0bffe17 	ldw	r2,-8(fp)
 144dadc:	1009883a 	mov	r4,r2
 144dae0:	01400304 	movi	r5,12
 144dae4:	1440a480 	call	1440a48 <__mulsi3>
 144dae8:	8085883a 	add	r2,r16,r2
 144daec:	10800204 	addi	r2,r2,8
 144daf0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 144daf4:	04005174 	movhi	r16,325
 144daf8:	8404df04 	addi	r16,r16,4988
 144dafc:	e0bffe17 	ldw	r2,-8(fp)
 144db00:	1009883a 	mov	r4,r2
 144db04:	01400304 	movi	r5,12
 144db08:	1440a480 	call	1440a48 <__mulsi3>
 144db0c:	8085883a 	add	r2,r16,r2
 144db10:	10000015 	stw	zero,0(r2)
  }
}
 144db14:	e6ffff04 	addi	sp,fp,-4
 144db18:	dfc00217 	ldw	ra,8(sp)
 144db1c:	df000117 	ldw	fp,4(sp)
 144db20:	dc000017 	ldw	r16,0(sp)
 144db24:	dec00304 	addi	sp,sp,12
 144db28:	f800283a 	ret

0144db2c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 144db2c:	defff904 	addi	sp,sp,-28
 144db30:	df000615 	stw	fp,24(sp)
 144db34:	df000604 	addi	fp,sp,24
 144db38:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 144db3c:	0005303a 	rdctl	r2,status
 144db40:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 144db44:	e0fffc17 	ldw	r3,-16(fp)
 144db48:	00bfff84 	movi	r2,-2
 144db4c:	1884703a 	and	r2,r3,r2
 144db50:	1001703a 	wrctl	status,r2
  
  return context;
 144db54:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 144db58:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 144db5c:	d0a00c17 	ldw	r2,-32720(gp)
 144db60:	10c000c4 	addi	r3,r2,3
 144db64:	00bfff04 	movi	r2,-4
 144db68:	1884703a 	and	r2,r3,r2
 144db6c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 144db70:	d0e00c17 	ldw	r3,-32720(gp)
 144db74:	e0bfff17 	ldw	r2,-4(fp)
 144db78:	1887883a 	add	r3,r3,r2
 144db7c:	008051b4 	movhi	r2,326
 144db80:	10960004 	addi	r2,r2,22528
 144db84:	10c0062e 	bgeu	r2,r3,144dba0 <sbrk+0x74>
 144db88:	e0bffa17 	ldw	r2,-24(fp)
 144db8c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 144db90:	e0bffd17 	ldw	r2,-12(fp)
 144db94:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 144db98:	00bfffc4 	movi	r2,-1
 144db9c:	00000b06 	br	144dbcc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 144dba0:	d0a00c17 	ldw	r2,-32720(gp)
 144dba4:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 144dba8:	d0e00c17 	ldw	r3,-32720(gp)
 144dbac:	e0bfff17 	ldw	r2,-4(fp)
 144dbb0:	1885883a 	add	r2,r3,r2
 144dbb4:	d0a00c15 	stw	r2,-32720(gp)
 144dbb8:	e0bffa17 	ldw	r2,-24(fp)
 144dbbc:	e0bffe15 	stw	r2,-8(fp)
 144dbc0:	e0bffe17 	ldw	r2,-8(fp)
 144dbc4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 144dbc8:	e0bffb17 	ldw	r2,-20(fp)
} 
 144dbcc:	e037883a 	mov	sp,fp
 144dbd0:	df000017 	ldw	fp,0(sp)
 144dbd4:	dec00104 	addi	sp,sp,4
 144dbd8:	f800283a 	ret

0144dbdc <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 144dbdc:	defffd04 	addi	sp,sp,-12
 144dbe0:	dfc00215 	stw	ra,8(sp)
 144dbe4:	df000115 	stw	fp,4(sp)
 144dbe8:	df000104 	addi	fp,sp,4
 144dbec:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 144dbf0:	e13fff17 	ldw	r4,-4(fp)
 144dbf4:	144f5a80 	call	144f5a8 <alt_busy_sleep>
}
 144dbf8:	e037883a 	mov	sp,fp
 144dbfc:	dfc00117 	ldw	ra,4(sp)
 144dc00:	df000017 	ldw	fp,0(sp)
 144dc04:	dec00204 	addi	sp,sp,8
 144dc08:	f800283a 	ret

0144dc0c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 144dc0c:	defffe04 	addi	sp,sp,-8
 144dc10:	dfc00115 	stw	ra,4(sp)
 144dc14:	df000015 	stw	fp,0(sp)
 144dc18:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 144dc1c:	00805174 	movhi	r2,325
 144dc20:	1085a404 	addi	r2,r2,5776
 144dc24:	10800017 	ldw	r2,0(r2)
 144dc28:	10000526 	beq	r2,zero,144dc40 <alt_get_errno+0x34>
 144dc2c:	00805174 	movhi	r2,325
 144dc30:	1085a404 	addi	r2,r2,5776
 144dc34:	10800017 	ldw	r2,0(r2)
 144dc38:	103ee83a 	callr	r2
 144dc3c:	00000206 	br	144dc48 <alt_get_errno+0x3c>
 144dc40:	00805174 	movhi	r2,325
 144dc44:	1088b804 	addi	r2,r2,8928
}
 144dc48:	e037883a 	mov	sp,fp
 144dc4c:	dfc00117 	ldw	ra,4(sp)
 144dc50:	df000017 	ldw	fp,0(sp)
 144dc54:	dec00204 	addi	sp,sp,8
 144dc58:	f800283a 	ret

0144dc5c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 144dc5c:	defff904 	addi	sp,sp,-28
 144dc60:	dfc00615 	stw	ra,24(sp)
 144dc64:	df000515 	stw	fp,20(sp)
 144dc68:	df000504 	addi	fp,sp,20
 144dc6c:	e13ffd15 	stw	r4,-12(fp)
 144dc70:	e17ffe15 	stw	r5,-8(fp)
 144dc74:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 144dc78:	e0bffd17 	ldw	r2,-12(fp)
 144dc7c:	10000816 	blt	r2,zero,144dca0 <write+0x44>
 144dc80:	e13ffd17 	ldw	r4,-12(fp)
 144dc84:	01400304 	movi	r5,12
 144dc88:	1440a480 	call	1440a48 <__mulsi3>
 144dc8c:	1007883a 	mov	r3,r2
 144dc90:	00805174 	movhi	r2,325
 144dc94:	1084df04 	addi	r2,r2,4988
 144dc98:	1885883a 	add	r2,r3,r2
 144dc9c:	00000106 	br	144dca4 <write+0x48>
 144dca0:	0005883a 	mov	r2,zero
 144dca4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 144dca8:	e0bffb17 	ldw	r2,-20(fp)
 144dcac:	10002126 	beq	r2,zero,144dd34 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 144dcb0:	e0bffb17 	ldw	r2,-20(fp)
 144dcb4:	10800217 	ldw	r2,8(r2)
 144dcb8:	108000cc 	andi	r2,r2,3
 144dcbc:	10001826 	beq	r2,zero,144dd20 <write+0xc4>
 144dcc0:	e0bffb17 	ldw	r2,-20(fp)
 144dcc4:	10800017 	ldw	r2,0(r2)
 144dcc8:	10800617 	ldw	r2,24(r2)
 144dccc:	10001426 	beq	r2,zero,144dd20 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 144dcd0:	e0bffb17 	ldw	r2,-20(fp)
 144dcd4:	10800017 	ldw	r2,0(r2)
 144dcd8:	10800617 	ldw	r2,24(r2)
 144dcdc:	e0ffff17 	ldw	r3,-4(fp)
 144dce0:	e13ffb17 	ldw	r4,-20(fp)
 144dce4:	e17ffe17 	ldw	r5,-8(fp)
 144dce8:	180d883a 	mov	r6,r3
 144dcec:	103ee83a 	callr	r2
 144dcf0:	e0bffc15 	stw	r2,-16(fp)
 144dcf4:	e0bffc17 	ldw	r2,-16(fp)
 144dcf8:	1000070e 	bge	r2,zero,144dd18 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 144dcfc:	144dc0c0 	call	144dc0c <alt_get_errno>
 144dd00:	1007883a 	mov	r3,r2
 144dd04:	e0bffc17 	ldw	r2,-16(fp)
 144dd08:	0085c83a 	sub	r2,zero,r2
 144dd0c:	18800015 	stw	r2,0(r3)
        return -1;
 144dd10:	00bfffc4 	movi	r2,-1
 144dd14:	00000c06 	br	144dd48 <write+0xec>
      }
      return rval;
 144dd18:	e0bffc17 	ldw	r2,-16(fp)
 144dd1c:	00000a06 	br	144dd48 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 144dd20:	144dc0c0 	call	144dc0c <alt_get_errno>
 144dd24:	1007883a 	mov	r3,r2
 144dd28:	00800344 	movi	r2,13
 144dd2c:	18800015 	stw	r2,0(r3)
 144dd30:	00000406 	br	144dd44 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 144dd34:	144dc0c0 	call	144dc0c <alt_get_errno>
 144dd38:	1007883a 	mov	r3,r2
 144dd3c:	00801444 	movi	r2,81
 144dd40:	18800015 	stw	r2,0(r3)
  }
  return -1;
 144dd44:	00bfffc4 	movi	r2,-1
}
 144dd48:	e037883a 	mov	sp,fp
 144dd4c:	dfc00117 	ldw	ra,4(sp)
 144dd50:	df000017 	ldw	fp,0(sp)
 144dd54:	dec00204 	addi	sp,sp,8
 144dd58:	f800283a 	ret

0144dd5c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 144dd5c:	defffd04 	addi	sp,sp,-12
 144dd60:	dfc00215 	stw	ra,8(sp)
 144dd64:	df000115 	stw	fp,4(sp)
 144dd68:	df000104 	addi	fp,sp,4
 144dd6c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 144dd70:	e13fff17 	ldw	r4,-4(fp)
 144dd74:	01405174 	movhi	r5,325
 144dd78:	2945a104 	addi	r5,r5,5764
 144dd7c:	144f7900 	call	144f790 <alt_dev_llist_insert>
}
 144dd80:	e037883a 	mov	sp,fp
 144dd84:	dfc00117 	ldw	ra,4(sp)
 144dd88:	df000017 	ldw	fp,0(sp)
 144dd8c:	dec00204 	addi	sp,sp,8
 144dd90:	f800283a 	ret

0144dd94 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 144dd94:	defffd04 	addi	sp,sp,-12
 144dd98:	dfc00215 	stw	ra,8(sp)
 144dd9c:	df000115 	stw	fp,4(sp)
 144dda0:	df000104 	addi	fp,sp,4
 144dda4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
 144dda8:	14502000 	call	1450200 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 144ddac:	00800044 	movi	r2,1
 144ddb0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 144ddb4:	e037883a 	mov	sp,fp
 144ddb8:	dfc00117 	ldw	ra,4(sp)
 144ddbc:	df000017 	ldw	fp,0(sp)
 144ddc0:	dec00204 	addi	sp,sp,8
 144ddc4:	f800283a 	ret

0144ddc8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 144ddc8:	defffe04 	addi	sp,sp,-8
 144ddcc:	dfc00115 	stw	ra,4(sp)
 144ddd0:	df000015 	stw	fp,0(sp)
 144ddd4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_QSYS, timer_qsys);
 144ddd8:	01001004 	movi	r4,64
 144dddc:	000b883a 	mov	r5,zero
 144dde0:	01800084 	movi	r6,2
 144dde4:	01c0fa04 	movi	r7,1000
 144dde8:	144e0e40 	call	144e0e4 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 144ddec:	01005174 	movhi	r4,325
 144ddf0:	21053f04 	addi	r4,r4,5372
 144ddf4:	144dd5c0 	call	144dd5c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
 144ddf8:	0001883a 	nop
    ALTERA_MODULAR_ADC_INIT ( MODULAR_ADC, modular_adc);
 144ddfc:	01005174 	movhi	r4,325
 144de00:	21054a04 	addi	r4,r4,5416
 144de04:	000b883a 	mov	r5,zero
 144de08:	000d883a 	mov	r6,zero
 144de0c:	144e2bc0 	call	144e2bc <altera_modular_adc_init>
    ALTERA_ONCHIP_FLASH_INIT ( UFM_FLASH, ufm_flash);
 144de10:	01005174 	movhi	r4,325
 144de14:	21055904 	addi	r4,r4,5476
 144de18:	144ef500 	call	144ef50 <altera_onchip_flash_init>
    I2C_OPENCORES_INIT ( CAPSENSE_I2C, capsense_i2c);
 144de1c:	0001883a 	nop
    I2C_OPENCORES_INIT ( RH_TEMP_I2C, rh_temp_i2c);
 144de20:	0001883a 	nop
}
 144de24:	e037883a 	mov	sp,fp
 144de28:	dfc00117 	ldw	ra,4(sp)
 144de2c:	df000017 	ldw	fp,0(sp)
 144de30:	dec00204 	addi	sp,sp,8
 144de34:	f800283a 	ret

0144de38 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 144de38:	defffa04 	addi	sp,sp,-24
 144de3c:	dfc00515 	stw	ra,20(sp)
 144de40:	df000415 	stw	fp,16(sp)
 144de44:	df000404 	addi	fp,sp,16
 144de48:	e13ffd15 	stw	r4,-12(fp)
 144de4c:	e17ffe15 	stw	r5,-8(fp)
 144de50:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 144de54:	e0bffd17 	ldw	r2,-12(fp)
 144de58:	10800017 	ldw	r2,0(r2)
 144de5c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 144de60:	e0bffc17 	ldw	r2,-16(fp)
 144de64:	10c00a04 	addi	r3,r2,40
 144de68:	e0bffd17 	ldw	r2,-12(fp)
 144de6c:	10800217 	ldw	r2,8(r2)
 144de70:	1809883a 	mov	r4,r3
 144de74:	e17ffe17 	ldw	r5,-8(fp)
 144de78:	e1bfff17 	ldw	r6,-4(fp)
 144de7c:	100f883a 	mov	r7,r2
 144de80:	144def80 	call	144def8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 144de84:	e037883a 	mov	sp,fp
 144de88:	dfc00117 	ldw	ra,4(sp)
 144de8c:	df000017 	ldw	fp,0(sp)
 144de90:	dec00204 	addi	sp,sp,8
 144de94:	f800283a 	ret

0144de98 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 144de98:	defffa04 	addi	sp,sp,-24
 144de9c:	dfc00515 	stw	ra,20(sp)
 144dea0:	df000415 	stw	fp,16(sp)
 144dea4:	df000404 	addi	fp,sp,16
 144dea8:	e13ffd15 	stw	r4,-12(fp)
 144deac:	e17ffe15 	stw	r5,-8(fp)
 144deb0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 144deb4:	e0bffd17 	ldw	r2,-12(fp)
 144deb8:	10800017 	ldw	r2,0(r2)
 144debc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 144dec0:	e0bffc17 	ldw	r2,-16(fp)
 144dec4:	10c00a04 	addi	r3,r2,40
 144dec8:	e0bffd17 	ldw	r2,-12(fp)
 144decc:	10800217 	ldw	r2,8(r2)
 144ded0:	1809883a 	mov	r4,r3
 144ded4:	e17ffe17 	ldw	r5,-8(fp)
 144ded8:	e1bfff17 	ldw	r6,-4(fp)
 144dedc:	100f883a 	mov	r7,r2
 144dee0:	144dfdc0 	call	144dfdc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 144dee4:	e037883a 	mov	sp,fp
 144dee8:	dfc00117 	ldw	ra,4(sp)
 144deec:	df000017 	ldw	fp,0(sp)
 144def0:	dec00204 	addi	sp,sp,8
 144def4:	f800283a 	ret

0144def8 <altera_avalon_jtag_uart_read>:
 */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char* buffer, int space, int flags)
{
 144def8:	defff704 	addi	sp,sp,-36
 144defc:	df000815 	stw	fp,32(sp)
 144df00:	df000804 	addi	fp,sp,32
 144df04:	e13ffc15 	stw	r4,-16(fp)
 144df08:	e17ffd15 	stw	r5,-12(fp)
 144df0c:	e1bffe15 	stw	r6,-8(fp)
 144df10:	e1ffff15 	stw	r7,-4(fp)
  unsigned int base = sp->base;
 144df14:	e0bffc17 	ldw	r2,-16(fp)
 144df18:	10800017 	ldw	r2,0(r2)
 144df1c:	e0bff915 	stw	r2,-28(fp)

  char * ptr = buffer;
 144df20:	e0bffd17 	ldw	r2,-12(fp)
 144df24:	e0bff815 	stw	r2,-32(fp)
  char * end = buffer + space;
 144df28:	e0bffe17 	ldw	r2,-8(fp)
 144df2c:	e0fffd17 	ldw	r3,-12(fp)
 144df30:	1885883a 	add	r2,r3,r2
 144df34:	e0bffa15 	stw	r2,-24(fp)

  while (ptr < end)
 144df38:	00001406 	br	144df8c <altera_avalon_jtag_uart_read+0x94>
  {
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 144df3c:	e0bff917 	ldw	r2,-28(fp)
 144df40:	10800037 	ldwio	r2,0(r2)
 144df44:	e0bffb15 	stw	r2,-20(fp)

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
 144df48:	e0bffb17 	ldw	r2,-20(fp)
 144df4c:	10a0000c 	andi	r2,r2,32768
 144df50:	10000626 	beq	r2,zero,144df6c <altera_avalon_jtag_uart_read+0x74>
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 144df54:	e0bff817 	ldw	r2,-32(fp)
 144df58:	10c00044 	addi	r3,r2,1
 144df5c:	e0fff815 	stw	r3,-32(fp)
 144df60:	e0fffb17 	ldw	r3,-20(fp)
 144df64:	10c00005 	stb	r3,0(r2)
 144df68:	00000806 	br	144df8c <altera_avalon_jtag_uart_read+0x94>
    else if (ptr != buffer)
 144df6c:	e0fff817 	ldw	r3,-32(fp)
 144df70:	e0bffd17 	ldw	r2,-12(fp)
 144df74:	18800126 	beq	r3,r2,144df7c <altera_avalon_jtag_uart_read+0x84>
      break;
 144df78:	00000706 	br	144df98 <altera_avalon_jtag_uart_read+0xa0>
    else if(flags & O_NONBLOCK)
 144df7c:	e0bfff17 	ldw	r2,-4(fp)
 144df80:	1090000c 	andi	r2,r2,16384
 144df84:	10000126 	beq	r2,zero,144df8c <altera_avalon_jtag_uart_read+0x94>
      break;   
 144df88:	00000306 	br	144df98 <altera_avalon_jtag_uart_read+0xa0>
  unsigned int base = sp->base;

  char * ptr = buffer;
  char * end = buffer + space;

  while (ptr < end)
 144df8c:	e0fff817 	ldw	r3,-32(fp)
 144df90:	e0bffa17 	ldw	r2,-24(fp)
 144df94:	18bfe936 	bltu	r3,r2,144df3c <__alt_data_end+0xfffe873c>
    else if(flags & O_NONBLOCK)
      break;   
    
  }

  if (ptr != buffer)
 144df98:	e0fff817 	ldw	r3,-32(fp)
 144df9c:	e0bffd17 	ldw	r2,-12(fp)
 144dfa0:	18800426 	beq	r3,r2,144dfb4 <altera_avalon_jtag_uart_read+0xbc>
    return ptr - buffer;
 144dfa4:	e0fff817 	ldw	r3,-32(fp)
 144dfa8:	e0bffd17 	ldw	r2,-12(fp)
 144dfac:	1885c83a 	sub	r2,r3,r2
 144dfb0:	00000606 	br	144dfcc <altera_avalon_jtag_uart_read+0xd4>
  else if (flags & O_NONBLOCK)
 144dfb4:	e0bfff17 	ldw	r2,-4(fp)
 144dfb8:	1090000c 	andi	r2,r2,16384
 144dfbc:	10000226 	beq	r2,zero,144dfc8 <altera_avalon_jtag_uart_read+0xd0>
    return -EWOULDBLOCK;
 144dfc0:	00bffd44 	movi	r2,-11
 144dfc4:	00000106 	br	144dfcc <altera_avalon_jtag_uart_read+0xd4>
  else
    return -EIO;
 144dfc8:	00bffec4 	movi	r2,-5
}
 144dfcc:	e037883a 	mov	sp,fp
 144dfd0:	df000017 	ldw	fp,0(sp)
 144dfd4:	dec00104 	addi	sp,sp,4
 144dfd8:	f800283a 	ret

0144dfdc <altera_avalon_jtag_uart_write>:
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 144dfdc:	defff904 	addi	sp,sp,-28
 144dfe0:	df000615 	stw	fp,24(sp)
 144dfe4:	df000604 	addi	fp,sp,24
 144dfe8:	e13ffc15 	stw	r4,-16(fp)
 144dfec:	e17ffd15 	stw	r5,-12(fp)
 144dff0:	e1bffe15 	stw	r6,-8(fp)
 144dff4:	e1ffff15 	stw	r7,-4(fp)
  unsigned int base = sp->base;
 144dff8:	e0bffc17 	ldw	r2,-16(fp)
 144dffc:	10800017 	ldw	r2,0(r2)
 144e000:	e0bffa15 	stw	r2,-24(fp)

  const char * end = ptr + count;
 144e004:	e0bffe17 	ldw	r2,-8(fp)
 144e008:	e0fffd17 	ldw	r3,-12(fp)
 144e00c:	1885883a 	add	r2,r3,r2
 144e010:	e0bffb15 	stw	r2,-20(fp)

  while (ptr < end)
 144e014:	00000e06 	br	144e050 <altera_avalon_jtag_uart_write+0x74>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
 144e018:	e0bffa17 	ldw	r2,-24(fp)
 144e01c:	10800104 	addi	r2,r2,4
 144e020:	10800037 	ldwio	r2,0(r2)
 144e024:	10bfffec 	andhi	r2,r2,65535
 144e028:	10000926 	beq	r2,zero,144e050 <altera_avalon_jtag_uart_write+0x74>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
 144e02c:	e0fffa17 	ldw	r3,-24(fp)
 144e030:	e0bffd17 	ldw	r2,-12(fp)
 144e034:	11000044 	addi	r4,r2,1
 144e038:	e13ffd15 	stw	r4,-12(fp)
 144e03c:	10800003 	ldbu	r2,0(r2)
 144e040:	10803fcc 	andi	r2,r2,255
 144e044:	1080201c 	xori	r2,r2,128
 144e048:	10bfe004 	addi	r2,r2,-128
 144e04c:	18800035 	stwio	r2,0(r3)
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
 144e050:	e0fffd17 	ldw	r3,-12(fp)
 144e054:	e0bffb17 	ldw	r2,-20(fp)
 144e058:	18bfef36 	bltu	r3,r2,144e018 <__alt_data_end+0xfffe8818>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);

  return count;
 144e05c:	e0bffe17 	ldw	r2,-8(fp)
}
 144e060:	e037883a 	mov	sp,fp
 144e064:	df000017 	ldw	fp,0(sp)
 144e068:	dec00104 	addi	sp,sp,4
 144e06c:	f800283a 	ret

0144e070 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 144e070:	defffa04 	addi	sp,sp,-24
 144e074:	dfc00515 	stw	ra,20(sp)
 144e078:	df000415 	stw	fp,16(sp)
 144e07c:	df000404 	addi	fp,sp,16
 144e080:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 144e084:	0007883a 	mov	r3,zero
 144e088:	e0bfff17 	ldw	r2,-4(fp)
 144e08c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 144e090:	e0bfff17 	ldw	r2,-4(fp)
 144e094:	10800104 	addi	r2,r2,4
 144e098:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 144e09c:	0005303a 	rdctl	r2,status
 144e0a0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 144e0a4:	e0fffd17 	ldw	r3,-12(fp)
 144e0a8:	00bfff84 	movi	r2,-2
 144e0ac:	1884703a 	and	r2,r3,r2
 144e0b0:	1001703a 	wrctl	status,r2
  
  return context;
 144e0b4:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 144e0b8:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 144e0bc:	14500fc0 	call	14500fc <alt_tick>
 144e0c0:	e0bffc17 	ldw	r2,-16(fp)
 144e0c4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 144e0c8:	e0bffe17 	ldw	r2,-8(fp)
 144e0cc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 144e0d0:	e037883a 	mov	sp,fp
 144e0d4:	dfc00117 	ldw	ra,4(sp)
 144e0d8:	df000017 	ldw	fp,0(sp)
 144e0dc:	dec00204 	addi	sp,sp,8
 144e0e0:	f800283a 	ret

0144e0e4 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 144e0e4:	defff804 	addi	sp,sp,-32
 144e0e8:	dfc00715 	stw	ra,28(sp)
 144e0ec:	df000615 	stw	fp,24(sp)
 144e0f0:	df000604 	addi	fp,sp,24
 144e0f4:	e13ffc15 	stw	r4,-16(fp)
 144e0f8:	e17ffd15 	stw	r5,-12(fp)
 144e0fc:	e1bffe15 	stw	r6,-8(fp)
 144e100:	e1ffff15 	stw	r7,-4(fp)
 144e104:	e0bfff17 	ldw	r2,-4(fp)
 144e108:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 144e10c:	00805174 	movhi	r2,325
 144e110:	1088bd04 	addi	r2,r2,8948
 144e114:	10800017 	ldw	r2,0(r2)
 144e118:	1000041e 	bne	r2,zero,144e12c <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
 144e11c:	00805174 	movhi	r2,325
 144e120:	1088bd04 	addi	r2,r2,8948
 144e124:	e0fffb17 	ldw	r3,-20(fp)
 144e128:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 144e12c:	e0bffc17 	ldw	r2,-16(fp)
 144e130:	10800104 	addi	r2,r2,4
 144e134:	00c001c4 	movi	r3,7
 144e138:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 144e13c:	d8000015 	stw	zero,0(sp)
 144e140:	e13ffd17 	ldw	r4,-12(fp)
 144e144:	e17ffe17 	ldw	r5,-8(fp)
 144e148:	01805174 	movhi	r6,325
 144e14c:	31b81c04 	addi	r6,r6,-8080
 144e150:	e1fffc17 	ldw	r7,-16(fp)
 144e154:	144f9980 	call	144f998 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 144e158:	e037883a 	mov	sp,fp
 144e15c:	dfc00117 	ldw	ra,4(sp)
 144e160:	df000017 	ldw	fp,0(sp)
 144e164:	dec00204 	addi	sp,sp,8
 144e168:	f800283a 	ret

0144e16c <alt_adc_irq>:
 * alt_adc_irq()
 *
 * Interrupt handler for the altera modular adc.
 */
static void alt_adc_irq(void *context)
{
 144e16c:	defff904 	addi	sp,sp,-28
 144e170:	dfc00615 	stw	ra,24(sp)
 144e174:	df000515 	stw	fp,20(sp)
 144e178:	df000504 	addi	fp,sp,20
 144e17c:	e13fff15 	stw	r4,-4(fp)
    alt_modular_adc_dev *dev = (alt_modular_adc_dev *) context;
 144e180:	e0bfff17 	ldw	r2,-4(fp)
 144e184:	e0bffb15 	stw	r2,-20(fp)
    alt_irq_context cpu_sr = 0;
 144e188:	e03ffc15 	stw	zero,-16(fp)

	if(NULL != dev)
 144e18c:	e0bffb17 	ldw	r2,-20(fp)
 144e190:	10001926 	beq	r2,zero,144e1f8 <alt_adc_irq+0x8c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 144e194:	0005303a 	rdctl	r2,status
 144e198:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 144e19c:	e0fffd17 	ldw	r3,-12(fp)
 144e1a0:	00bfff84 	movi	r2,-2
 144e1a4:	1884703a 	and	r2,r3,r2
 144e1a8:	1001703a 	wrctl	status,r2
  
  return context;
 144e1ac:	e0bffd17 	ldw	r2,-12(fp)
	{
	    cpu_sr = alt_irq_disable_all();
 144e1b0:	e0bffc15 	stw	r2,-16(fp)
		* Other interrupts are explicitly disabled if callbacks
		* are registered because there is no guarantee that they are 
		* pre-emption-safe. This allows the driver to support 
		* interrupt pre-emption.
		*/
		if(dev->callback) 
 144e1b4:	e0bffb17 	ldw	r2,-20(fp)
 144e1b8:	10800a17 	ldw	r2,40(r2)
 144e1bc:	10000626 	beq	r2,zero,144e1d8 <alt_adc_irq+0x6c>
		{
			dev->callback (dev->callback_context);
 144e1c0:	e0bffb17 	ldw	r2,-20(fp)
 144e1c4:	10800a17 	ldw	r2,40(r2)
 144e1c8:	e0fffb17 	ldw	r3,-20(fp)
 144e1cc:	18c00b17 	ldw	r3,44(r3)
 144e1d0:	1809883a 	mov	r4,r3
 144e1d4:	103ee83a 	callr	r2
		}
    
		/* clear the IRQ status */
		adc_clear_interrupt_status(dev->sample_store_base);
 144e1d8:	e0bffb17 	ldw	r2,-20(fp)
 144e1dc:	10800c17 	ldw	r2,48(r2)
 144e1e0:	1009883a 	mov	r4,r2
 144e1e4:	144e5f40 	call	144e5f4 <adc_clear_interrupt_status>
 144e1e8:	e0bffc17 	ldw	r2,-16(fp)
 144e1ec:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 144e1f0:	e0bffe17 	ldw	r2,-8(fp)
 144e1f4:	1001703a 	wrctl	status,r2
	    
		alt_irq_enable_all(cpu_sr);
	}
	
    return;
 144e1f8:	0001883a 	nop
}
 144e1fc:	e037883a 	mov	sp,fp
 144e200:	dfc00117 	ldw	ra,4(sp)
 144e204:	df000017 	ldw	fp,0(sp)
 144e208:	dec00204 	addi	sp,sp,8
 144e20c:	f800283a 	ret

0144e210 <alt_adc_word_read>:
 * Returns:
 * 0 -> success
 * -EINVAL -> Invalid arguments
**/
int alt_adc_word_read (alt_u32 sample_store_base, alt_u32* dest_ptr, alt_u32 len)
{
 144e210:	defff804 	addi	sp,sp,-32
 144e214:	df000715 	stw	fp,28(sp)
 144e218:	df000704 	addi	fp,sp,28
 144e21c:	e13ffd15 	stw	r4,-12(fp)
 144e220:	e17ffe15 	stw	r5,-8(fp)
 144e224:	e1bfff15 	stw	r6,-4(fp)
    alt_u32 word = 0;
 144e228:	e03ff915 	stw	zero,-28(fp)
    alt_u32 word_length = len;
 144e22c:	e0bfff17 	ldw	r2,-4(fp)
 144e230:	e0bffb15 	stw	r2,-20(fp)
    alt_u32* dest_buf = dest_ptr;
 144e234:	e0bffe17 	ldw	r2,-8(fp)
 144e238:	e0bffa15 	stw	r2,-24(fp)
    alt_u32 base = sample_store_base;
 144e23c:	e0bffd17 	ldw	r2,-12(fp)
 144e240:	e0bffc15 	stw	r2,-16(fp)
     
    /* return -EINVAL if invalid arguments passed into function */
    if(NULL == dest_buf)
 144e244:	e0bffa17 	ldw	r2,-24(fp)
 144e248:	1000021e 	bne	r2,zero,144e254 <alt_adc_word_read+0x44>
    {
    	return -EINVAL;
 144e24c:	00bffa84 	movi	r2,-22
 144e250:	00001606 	br	144e2ac <alt_adc_word_read+0x9c>
    }

    for(word = 0; word < word_length; word++)
 144e254:	e03ff915 	stw	zero,-28(fp)
 144e258:	00001006 	br	144e29c <alt_adc_word_read+0x8c>
    {
       *dest_buf = IORD_32DIRECT((base + (word * 4)),0);
 144e25c:	e0bff917 	ldw	r2,-28(fp)
 144e260:	1085883a 	add	r2,r2,r2
 144e264:	1085883a 	add	r2,r2,r2
 144e268:	1007883a 	mov	r3,r2
 144e26c:	e0bffc17 	ldw	r2,-16(fp)
 144e270:	1885883a 	add	r2,r3,r2
 144e274:	10800037 	ldwio	r2,0(r2)
 144e278:	1007883a 	mov	r3,r2
 144e27c:	e0bffa17 	ldw	r2,-24(fp)
 144e280:	10c00015 	stw	r3,0(r2)

       dest_buf++;
 144e284:	e0bffa17 	ldw	r2,-24(fp)
 144e288:	10800104 	addi	r2,r2,4
 144e28c:	e0bffa15 	stw	r2,-24(fp)
    if(NULL == dest_buf)
    {
    	return -EINVAL;
    }

    for(word = 0; word < word_length; word++)
 144e290:	e0bff917 	ldw	r2,-28(fp)
 144e294:	10800044 	addi	r2,r2,1
 144e298:	e0bff915 	stw	r2,-28(fp)
 144e29c:	e0fff917 	ldw	r3,-28(fp)
 144e2a0:	e0bffb17 	ldw	r2,-20(fp)
 144e2a4:	18bfed36 	bltu	r3,r2,144e25c <__alt_data_end+0xfffe8a5c>
       *dest_buf = IORD_32DIRECT((base + (word * 4)),0);

       dest_buf++;
    }

    return 0;
 144e2a8:	0005883a 	mov	r2,zero

}
 144e2ac:	e037883a 	mov	sp,fp
 144e2b0:	df000017 	ldw	fp,0(sp)
 144e2b4:	dec00104 	addi	sp,sp,4
 144e2b8:	f800283a 	ret

0144e2bc <altera_modular_adc_init>:


void altera_modular_adc_init(alt_modular_adc_dev* dev, alt_32 ic_id, alt_32 irq)
{
 144e2bc:	defffa04 	addi	sp,sp,-24
 144e2c0:	dfc00515 	stw	ra,20(sp)
 144e2c4:	df000415 	stw	fp,16(sp)
 144e2c8:	df000404 	addi	fp,sp,16
 144e2cc:	e13ffd15 	stw	r4,-12(fp)
 144e2d0:	e17ffe15 	stw	r5,-8(fp)
 144e2d4:	e1bfff15 	stw	r6,-4(fp)
    extern alt_llist altera_modular_adc_list;
    alt_dev_llist_insert((alt_dev_llist*) dev, &altera_modular_adc_list);
 144e2d8:	e13ffd17 	ldw	r4,-12(fp)
 144e2dc:	d1600d04 	addi	r5,gp,-32716
 144e2e0:	144f7900 	call	144f790 <alt_dev_llist_insert>
	
	if ((0 <= ic_id) && (0 <= irq))
 144e2e4:	e0bffe17 	ldw	r2,-8(fp)
 144e2e8:	10000b16 	blt	r2,zero,144e318 <altera_modular_adc_init+0x5c>
 144e2ec:	e0bfff17 	ldw	r2,-4(fp)
 144e2f0:	10000916 	blt	r2,zero,144e318 <altera_modular_adc_init+0x5c>
	{
          /* Install IRQ handler */
	  #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
              alt_ic_isr_register(ic_id, irq, alt_adc_irq, 
 144e2f4:	e0fffe17 	ldw	r3,-8(fp)
 144e2f8:	e0bfff17 	ldw	r2,-4(fp)
 144e2fc:	d8000015 	stw	zero,0(sp)
 144e300:	1809883a 	mov	r4,r3
 144e304:	100b883a 	mov	r5,r2
 144e308:	01805174 	movhi	r6,325
 144e30c:	31b85b04 	addi	r6,r6,-7828
 144e310:	e1fffd17 	ldw	r7,-12(fp)
 144e314:	144f9980 	call	144f998 <alt_ic_isr_register>
                      dev, NULL);
          #else
             alt_irq_register(irq, dev, alt_adc_irq);
          #endif 
	}
}
 144e318:	e037883a 	mov	sp,fp
 144e31c:	dfc00117 	ldw	ra,4(sp)
 144e320:	df000017 	ldw	fp,0(sp)
 144e324:	dec00204 	addi	sp,sp,8
 144e328:	f800283a 	ret

0144e32c <alt_adc_register_callback>:
void alt_adc_register_callback(
	alt_modular_adc_dev *dev,
	alt_adc_callback callback,
	void *context,
	alt_u32 sample_store_base)
{
 144e32c:	defffa04 	addi	sp,sp,-24
 144e330:	dfc00515 	stw	ra,20(sp)
 144e334:	df000415 	stw	fp,16(sp)
 144e338:	df000404 	addi	fp,sp,16
 144e33c:	e13ffc15 	stw	r4,-16(fp)
 144e340:	e17ffd15 	stw	r5,-12(fp)
 144e344:	e1bffe15 	stw	r6,-8(fp)
 144e348:	e1ffff15 	stw	r7,-4(fp)
    dev->callback         = callback;
 144e34c:	e0bffc17 	ldw	r2,-16(fp)
 144e350:	e0fffd17 	ldw	r3,-12(fp)
 144e354:	10c00a15 	stw	r3,40(r2)
    dev->callback_context = context;
 144e358:	e0bffc17 	ldw	r2,-16(fp)
 144e35c:	e0fffe17 	ldw	r3,-8(fp)
 144e360:	10c00b15 	stw	r3,44(r2)
    dev->sample_store_base = sample_store_base;
 144e364:	e0bffc17 	ldw	r2,-16(fp)
 144e368:	e0ffff17 	ldw	r3,-4(fp)
 144e36c:	10c00c15 	stw	r3,48(r2)
	
	if(NULL != callback)
 144e370:	e0bffd17 	ldw	r2,-12(fp)
 144e374:	10000726 	beq	r2,zero,144e394 <alt_adc_register_callback+0x68>
	{
                adc_clear_interrupt_status(sample_store_base);
 144e378:	e0bfff17 	ldw	r2,-4(fp)
 144e37c:	1009883a 	mov	r4,r2
 144e380:	144e5f40 	call	144e5f4 <adc_clear_interrupt_status>
		adc_interrupt_enable(sample_store_base);
 144e384:	e0bfff17 	ldw	r2,-4(fp)
 144e388:	1009883a 	mov	r4,r2
 144e38c:	144e5700 	call	144e570 <adc_interrupt_enable>
 144e390:	00000606 	br	144e3ac <alt_adc_register_callback+0x80>
	}
	else
	{
		adc_interrupt_disable(sample_store_base);
 144e394:	e0bfff17 	ldw	r2,-4(fp)
 144e398:	1009883a 	mov	r4,r2
 144e39c:	144e5b00 	call	144e5b0 <adc_interrupt_disable>
                adc_clear_interrupt_status(sample_store_base);
 144e3a0:	e0bfff17 	ldw	r2,-4(fp)
 144e3a4:	1009883a 	mov	r4,r2
 144e3a8:	144e5f40 	call	144e5f4 <adc_clear_interrupt_status>
	}
	
    
	
    return ;
 144e3ac:	0001883a 	nop
}
 144e3b0:	e037883a 	mov	sp,fp
 144e3b4:	dfc00117 	ldw	ra,4(sp)
 144e3b8:	df000017 	ldw	fp,0(sp)
 144e3bc:	dec00204 	addi	sp,sp,8
 144e3c0:	f800283a 	ret

0144e3c4 <altera_modular_adc_open>:

alt_modular_adc_dev* altera_modular_adc_open (const char *name)
{
 144e3c4:	defffc04 	addi	sp,sp,-16
 144e3c8:	dfc00315 	stw	ra,12(sp)
 144e3cc:	df000215 	stw	fp,8(sp)
 144e3d0:	df000204 	addi	fp,sp,8
 144e3d4:	e13fff15 	stw	r4,-4(fp)
    alt_modular_adc_dev *dev = NULL;
 144e3d8:	e03ffe15 	stw	zero,-8(fp)

    /* Find requested device */
    dev = (alt_modular_adc_dev*) alt_find_dev (name, &altera_modular_adc_list);
 144e3dc:	e13fff17 	ldw	r4,-4(fp)
 144e3e0:	d1600d04 	addi	r5,gp,-32716
 144e3e4:	144f8340 	call	144f834 <alt_find_dev>
 144e3e8:	e0bffe15 	stw	r2,-8(fp)

    return dev;
 144e3ec:	e0bffe17 	ldw	r2,-8(fp)
}
 144e3f0:	e037883a 	mov	sp,fp
 144e3f4:	dfc00117 	ldw	ra,4(sp)
 144e3f8:	df000017 	ldw	fp,0(sp)
 144e3fc:	dec00204 	addi	sp,sp,8
 144e400:	f800283a 	ret

0144e404 <adc_stop>:

void adc_stop(int sequencer_base)
{
 144e404:	defffe04 	addi	sp,sp,-8
 144e408:	df000115 	stw	fp,4(sp)
 144e40c:	df000104 	addi	fp,sp,4
 144e410:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SEQUENCER_STOP(sequencer_base);
 144e414:	e0bfff17 	ldw	r2,-4(fp)
 144e418:	e0ffff17 	ldw	r3,-4(fp)
 144e41c:	19000037 	ldwio	r4,0(r3)
 144e420:	00ffff84 	movi	r3,-2
 144e424:	20c6703a 	and	r3,r4,r3
 144e428:	10c00035 	stwio	r3,0(r2)
 144e42c:	0001883a 	nop
 144e430:	e0bfff17 	ldw	r2,-4(fp)
 144e434:	10800037 	ldwio	r2,0(r2)
 144e438:	1080004c 	andi	r2,r2,1
 144e43c:	103ffc1e 	bne	r2,zero,144e430 <__alt_data_end+0xfffe8c30>
}
 144e440:	e037883a 	mov	sp,fp
 144e444:	df000017 	ldw	fp,0(sp)
 144e448:	dec00104 	addi	sp,sp,4
 144e44c:	f800283a 	ret

0144e450 <adc_start>:

void adc_start(int sequencer_base)
{
 144e450:	defffe04 	addi	sp,sp,-8
 144e454:	df000115 	stw	fp,4(sp)
 144e458:	df000104 	addi	fp,sp,4
 144e45c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SEQUENCER_START(sequencer_base);
 144e460:	e0bfff17 	ldw	r2,-4(fp)
 144e464:	e0ffff17 	ldw	r3,-4(fp)
 144e468:	18c00037 	ldwio	r3,0(r3)
 144e46c:	18c00054 	ori	r3,r3,1
 144e470:	10c00035 	stwio	r3,0(r2)
}
 144e474:	e037883a 	mov	sp,fp
 144e478:	df000017 	ldw	fp,0(sp)
 144e47c:	dec00104 	addi	sp,sp,4
 144e480:	f800283a 	ret

0144e484 <adc_set_mode_run_once>:

void adc_set_mode_run_once(int sequencer_base)
{
 144e484:	defffe04 	addi	sp,sp,-8
 144e488:	df000115 	stw	fp,4(sp)
 144e48c:	df000104 	addi	fp,sp,4
 144e490:	e13fff15 	stw	r4,-4(fp)
    /* Note: Stop the ADC before calling this function,
       changing ADC mode while RUN bit is set has no effect. */
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_ONCE(sequencer_base);
 144e494:	e0bfff17 	ldw	r2,-4(fp)
 144e498:	e0ffff17 	ldw	r3,-4(fp)
 144e49c:	19000037 	ldwio	r4,0(r3)
 144e4a0:	00fffc44 	movi	r3,-15
 144e4a4:	20c6703a 	and	r3,r4,r3
 144e4a8:	18c00094 	ori	r3,r3,2
 144e4ac:	10c00035 	stwio	r3,0(r2)
}
 144e4b0:	e037883a 	mov	sp,fp
 144e4b4:	df000017 	ldw	fp,0(sp)
 144e4b8:	dec00104 	addi	sp,sp,4
 144e4bc:	f800283a 	ret

0144e4c0 <adc_set_mode_run_continuously>:

void adc_set_mode_run_continuously(int sequencer_base)
{
 144e4c0:	defffe04 	addi	sp,sp,-8
 144e4c4:	df000115 	stw	fp,4(sp)
 144e4c8:	df000104 	addi	fp,sp,4
 144e4cc:	e13fff15 	stw	r4,-4(fp)
    /* Note: Stop the ADC before calling this function,
       changing ADC mode while RUN bit is set has no effect. */
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_CONTINUOUSLY(sequencer_base);
 144e4d0:	e0bfff17 	ldw	r2,-4(fp)
 144e4d4:	e0ffff17 	ldw	r3,-4(fp)
 144e4d8:	19000037 	ldwio	r4,0(r3)
 144e4dc:	00fffc44 	movi	r3,-15
 144e4e0:	20c6703a 	and	r3,r4,r3
 144e4e4:	10c00035 	stwio	r3,0(r2)
}
 144e4e8:	e037883a 	mov	sp,fp
 144e4ec:	df000017 	ldw	fp,0(sp)
 144e4f0:	dec00104 	addi	sp,sp,4
 144e4f4:	f800283a 	ret

0144e4f8 <adc_recalibrate>:

void adc_recalibrate(int sequencer_base)
{
 144e4f8:	defffc04 	addi	sp,sp,-16
 144e4fc:	dfc00315 	stw	ra,12(sp)
 144e500:	df000215 	stw	fp,8(sp)
 144e504:	df000204 	addi	fp,sp,8
 144e508:	e13fff15 	stw	r4,-4(fp)
         2. Start the ADC Sequencer Core.
         5. Poll for RUN bit to be clear
         6. Restore CMD register
     */
    alt_u32 backup_cmd_reg;
    backup_cmd_reg = IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base);
 144e50c:	e0bfff17 	ldw	r2,-4(fp)
 144e510:	10800037 	ldwio	r2,0(r2)
 144e514:	e0bffe15 	stw	r2,-8(fp)
    adc_stop(sequencer_base);
 144e518:	e13fff17 	ldw	r4,-4(fp)
 144e51c:	144e4040 	call	144e404 <adc_stop>
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_RECALIBRATION(sequencer_base);
 144e520:	e0bfff17 	ldw	r2,-4(fp)
 144e524:	e0ffff17 	ldw	r3,-4(fp)
 144e528:	18c00037 	ldwio	r3,0(r3)
 144e52c:	18c00394 	ori	r3,r3,14
 144e530:	10c00035 	stwio	r3,0(r2)
    adc_start(sequencer_base);
 144e534:	e13fff17 	ldw	r4,-4(fp)
 144e538:	144e4500 	call	144e450 <adc_start>
    while(IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base)
 144e53c:	0001883a 	nop
 144e540:	e0bfff17 	ldw	r2,-4(fp)
 144e544:	10800037 	ldwio	r2,0(r2)
             & ALTERA_MODULAR_ADC_SEQUENCER_CMD_RUN_MSK);
 144e548:	1080004c 	andi	r2,r2,1
    alt_u32 backup_cmd_reg;
    backup_cmd_reg = IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base);
    adc_stop(sequencer_base);
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_RECALIBRATION(sequencer_base);
    adc_start(sequencer_base);
    while(IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base)
 144e54c:	103ffc1e 	bne	r2,zero,144e540 <__alt_data_end+0xfffe8d40>
             & ALTERA_MODULAR_ADC_SEQUENCER_CMD_RUN_MSK);
    IOWR_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base, backup_cmd_reg);
 144e550:	e0bfff17 	ldw	r2,-4(fp)
 144e554:	e0fffe17 	ldw	r3,-8(fp)
 144e558:	10c00035 	stwio	r3,0(r2)
}
 144e55c:	e037883a 	mov	sp,fp
 144e560:	dfc00117 	ldw	ra,4(sp)
 144e564:	df000017 	ldw	fp,0(sp)
 144e568:	dec00204 	addi	sp,sp,8
 144e56c:	f800283a 	ret

0144e570 <adc_interrupt_enable>:

void adc_interrupt_enable(int sample_store_base)
{
 144e570:	defffe04 	addi	sp,sp,-8
 144e574:	df000115 	stw	fp,4(sp)
 144e578:	df000104 	addi	fp,sp,4
 144e57c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_ENABLE(sample_store_base);
 144e580:	e0bfff17 	ldw	r2,-4(fp)
 144e584:	10804004 	addi	r2,r2,256
 144e588:	1007883a 	mov	r3,r2
 144e58c:	e0bfff17 	ldw	r2,-4(fp)
 144e590:	10804004 	addi	r2,r2,256
 144e594:	10800037 	ldwio	r2,0(r2)
 144e598:	10800054 	ori	r2,r2,1
 144e59c:	18800035 	stwio	r2,0(r3)
}
 144e5a0:	e037883a 	mov	sp,fp
 144e5a4:	df000017 	ldw	fp,0(sp)
 144e5a8:	dec00104 	addi	sp,sp,4
 144e5ac:	f800283a 	ret

0144e5b0 <adc_interrupt_disable>:

void adc_interrupt_disable(int sample_store_base)
{
 144e5b0:	defffe04 	addi	sp,sp,-8
 144e5b4:	df000115 	stw	fp,4(sp)
 144e5b8:	df000104 	addi	fp,sp,4
 144e5bc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_DISABLE(sample_store_base);
 144e5c0:	e0bfff17 	ldw	r2,-4(fp)
 144e5c4:	10804004 	addi	r2,r2,256
 144e5c8:	1009883a 	mov	r4,r2
 144e5cc:	e0bfff17 	ldw	r2,-4(fp)
 144e5d0:	10804004 	addi	r2,r2,256
 144e5d4:	10c00037 	ldwio	r3,0(r2)
 144e5d8:	00bfff84 	movi	r2,-2
 144e5dc:	1884703a 	and	r2,r3,r2
 144e5e0:	20800035 	stwio	r2,0(r4)
}
 144e5e4:	e037883a 	mov	sp,fp
 144e5e8:	df000017 	ldw	fp,0(sp)
 144e5ec:	dec00104 	addi	sp,sp,4
 144e5f0:	f800283a 	ret

0144e5f4 <adc_clear_interrupt_status>:

void adc_clear_interrupt_status(int sample_store_base)
{
 144e5f4:	defffe04 	addi	sp,sp,-8
 144e5f8:	df000115 	stw	fp,4(sp)
 144e5fc:	df000104 	addi	fp,sp,4
 144e600:	e13fff15 	stw	r4,-4(fp)
    CLEAR_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_STATUS(sample_store_base);
 144e604:	e0bfff17 	ldw	r2,-4(fp)
 144e608:	10804104 	addi	r2,r2,260
 144e60c:	1007883a 	mov	r3,r2
 144e610:	e0bfff17 	ldw	r2,-4(fp)
 144e614:	10804104 	addi	r2,r2,260
 144e618:	10800037 	ldwio	r2,0(r2)
 144e61c:	10800054 	ori	r2,r2,1
 144e620:	18800035 	stwio	r2,0(r3)
}
 144e624:	e037883a 	mov	sp,fp
 144e628:	df000017 	ldw	fp,0(sp)
 144e62c:	dec00104 	addi	sp,sp,4
 144e630:	f800283a 	ret

0144e634 <adc_interrupt_asserted>:

int adc_interrupt_asserted(int sample_store_base)
{
 144e634:	defffe04 	addi	sp,sp,-8
 144e638:	df000115 	stw	fp,4(sp)
 144e63c:	df000104 	addi	fp,sp,4
 144e640:	e13fff15 	stw	r4,-4(fp)
    return((READ_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_STATUS(sample_store_base)==1) ? -1 : 0);
 144e644:	e0bfff17 	ldw	r2,-4(fp)
 144e648:	10804104 	addi	r2,r2,260
 144e64c:	10800037 	ldwio	r2,0(r2)
 144e650:	1080004c 	andi	r2,r2,1
 144e654:	10000226 	beq	r2,zero,144e660 <adc_interrupt_asserted+0x2c>
 144e658:	00bfffc4 	movi	r2,-1
 144e65c:	00000106 	br	144e664 <adc_interrupt_asserted+0x30>
 144e660:	0005883a 	mov	r2,zero
}
 144e664:	e037883a 	mov	sp,fp
 144e668:	df000017 	ldw	fp,0(sp)
 144e66c:	dec00104 	addi	sp,sp,4
 144e670:	f800283a 	ret

0144e674 <adc_wait_for_interrupt>:

void adc_wait_for_interrupt(int sample_store_base)
{
 144e674:	defffe04 	addi	sp,sp,-8
 144e678:	df000115 	stw	fp,4(sp)
 144e67c:	df000104 	addi	fp,sp,4
 144e680:	e13fff15 	stw	r4,-4(fp)
    WAIT_FOR_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ(sample_store_base);
 144e684:	0001883a 	nop
 144e688:	e0bfff17 	ldw	r2,-4(fp)
 144e68c:	10804104 	addi	r2,r2,260
 144e690:	10800037 	ldwio	r2,0(r2)
 144e694:	1080004c 	andi	r2,r2,1
 144e698:	103ffb26 	beq	r2,zero,144e688 <__alt_data_end+0xfffe8e88>
}
 144e69c:	e037883a 	mov	sp,fp
 144e6a0:	df000017 	ldw	fp,0(sp)
 144e6a4:	dec00104 	addi	sp,sp,4
 144e6a8:	f800283a 	ret

0144e6ac <alt_flash_device_register>:

typedef struct alt_flash_dev alt_flash_dev; 
typedef alt_flash_dev alt_flash_fd;

static ALT_INLINE int alt_flash_device_register( alt_flash_fd* fd)
{
 144e6ac:	defffd04 	addi	sp,sp,-12
 144e6b0:	dfc00215 	stw	ra,8(sp)
 144e6b4:	df000115 	stw	fp,4(sp)
 144e6b8:	df000104 	addi	fp,sp,4
 144e6bc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_flash_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) fd, &alt_flash_dev_list);
 144e6c0:	e13fff17 	ldw	r4,-4(fp)
 144e6c4:	01405174 	movhi	r5,325
 144e6c8:	2945aa04 	addi	r5,r5,5800
 144e6cc:	144f7900 	call	144f790 <alt_dev_llist_insert>
}
 144e6d0:	e037883a 	mov	sp,fp
 144e6d4:	dfc00117 	ldw	ra,4(sp)
 144e6d8:	df000017 	ldw	fp,0(sp)
 144e6dc:	dec00204 	addi	sp,sp,8
 144e6e0:	f800283a 	ret

0144e6e4 <alt_onchip_flash_read>:
    alt_flash_dev *flash_info,
    int           offset,
    void          *dest_addr,
    int           length
)
{
 144e6e4:	defff704 	addi	sp,sp,-36
 144e6e8:	dfc00815 	stw	ra,32(sp)
 144e6ec:	df000715 	stw	fp,28(sp)
 144e6f0:	df000704 	addi	fp,sp,28
 144e6f4:	e13ffc15 	stw	r4,-16(fp)
 144e6f8:	e17ffd15 	stw	r5,-12(fp)
 144e6fc:	e1bffe15 	stw	r6,-8(fp)
 144e700:	e1ffff15 	stw	r7,-4(fp)
    int ret_code = 0;
 144e704:	e03ff915 	stw	zero,-28(fp)
    alt_onchip_flash_dev* flash = (alt_onchip_flash_dev*)flash_info;
 144e708:	e0bffc17 	ldw	r2,-16(fp)
 144e70c:	e0bffa15 	stw	r2,-24(fp)

    /* Make sure the input parameters is not outside of this device's range. */
    if ((offset >= flash->dev.length) || ((offset+length) > flash->dev.length)) {
 144e710:	e0bffa17 	ldw	r2,-24(fp)
 144e714:	10800b17 	ldw	r2,44(r2)
 144e718:	e0fffd17 	ldw	r3,-12(fp)
 144e71c:	1880060e 	bge	r3,r2,144e738 <alt_onchip_flash_read+0x54>
 144e720:	e0fffd17 	ldw	r3,-12(fp)
 144e724:	e0bfff17 	ldw	r2,-4(fp)
 144e728:	1885883a 	add	r2,r3,r2
 144e72c:	e0fffa17 	ldw	r3,-24(fp)
 144e730:	18c00b17 	ldw	r3,44(r3)
 144e734:	1880020e 	bge	r3,r2,144e740 <alt_onchip_flash_read+0x5c>
        return -EFAULT;
 144e738:	00bffc84 	movi	r2,-14
 144e73c:	00001706 	br	144e79c <alt_onchip_flash_read+0xb8>
    }
    
    memcpy(dest_addr, (alt_u8*)flash->dev.base_addr+offset, length);
 144e740:	e0bffa17 	ldw	r2,-24(fp)
 144e744:	10c00a17 	ldw	r3,40(r2)
 144e748:	e0bffd17 	ldw	r2,-12(fp)
 144e74c:	1887883a 	add	r3,r3,r2
 144e750:	e0bfff17 	ldw	r2,-4(fp)
 144e754:	e13ffe17 	ldw	r4,-8(fp)
 144e758:	180b883a 	mov	r5,r3
 144e75c:	100d883a 	mov	r6,r2
 144e760:	14463380 	call	1446338 <memcpy>

    if (NULL != flash->csr_base) {
 144e764:	e0bffa17 	ldw	r2,-24(fp)
 144e768:	10802f17 	ldw	r2,188(r2)
 144e76c:	10000a26 	beq	r2,zero,144e798 <alt_onchip_flash_read+0xb4>
        int read_status = IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) & ALTERA_ONCHIP_FLASH_STATUS_READ_MSK;
 144e770:	e0bffa17 	ldw	r2,-24(fp)
 144e774:	10802f17 	ldw	r2,188(r2)
 144e778:	10800037 	ldwio	r2,0(r2)
 144e77c:	1080010c 	andi	r2,r2,4
 144e780:	e0bffb15 	stw	r2,-20(fp)
        if (read_status != ALTERA_ONCHIP_FLASH_STATUS_READ_PASSED) {
 144e784:	e0bffb17 	ldw	r2,-20(fp)
 144e788:	10800120 	cmpeqi	r2,r2,4
 144e78c:	1000021e 	bne	r2,zero,144e798 <alt_onchip_flash_read+0xb4>
            /* Read failed.  Return error.*/
            ret_code = -EIO;
 144e790:	00bffec4 	movi	r2,-5
 144e794:	e0bff915 	stw	r2,-28(fp)
        }
    }
    return ret_code;
 144e798:	e0bff917 	ldw	r2,-28(fp)
}
 144e79c:	e037883a 	mov	sp,fp
 144e7a0:	dfc00117 	ldw	ra,4(sp)
 144e7a4:	df000017 	ldw	fp,0(sp)
 144e7a8:	dec00204 	addi	sp,sp,8
 144e7ac:	f800283a 	ret

0144e7b0 <alt_onchip_flash_get_info>:
(
    alt_flash_fd *fd,
    flash_region **info,
    int          *number_of_regions
)
{
 144e7b0:	defffa04 	addi	sp,sp,-24
 144e7b4:	df000515 	stw	fp,20(sp)
 144e7b8:	df000504 	addi	fp,sp,20
 144e7bc:	e13ffd15 	stw	r4,-12(fp)
 144e7c0:	e17ffe15 	stw	r5,-8(fp)
 144e7c4:	e1bfff15 	stw	r6,-4(fp)
    int ret_code = 0;
 144e7c8:	e03ffb15 	stw	zero,-20(fp)

    alt_flash_dev* flash = (alt_flash_dev*)fd;
 144e7cc:	e0bffd17 	ldw	r2,-12(fp)
 144e7d0:	e0bffc15 	stw	r2,-16(fp)

    if (NULL != number_of_regions)
 144e7d4:	e0bfff17 	ldw	r2,-4(fp)
 144e7d8:	10000426 	beq	r2,zero,144e7ec <alt_onchip_flash_get_info+0x3c>
    {
        /* Pass the number of region to user */
        *number_of_regions = flash->number_of_regions;
 144e7dc:	e0bffc17 	ldw	r2,-16(fp)
 144e7e0:	10c00c17 	ldw	r3,48(r2)
 144e7e4:	e0bfff17 	ldw	r2,-4(fp)
 144e7e8:	10c00015 	stw	r3,0(r2)
    }

    if (!flash->number_of_regions)
 144e7ec:	e0bffc17 	ldw	r2,-16(fp)
 144e7f0:	10800c17 	ldw	r2,48(r2)
 144e7f4:	1000031e 	bne	r2,zero,144e804 <alt_onchip_flash_get_info+0x54>
    {
        ret_code = -ENOMEM;
 144e7f8:	00bffd04 	movi	r2,-12
 144e7fc:	e0bffb15 	stw	r2,-20(fp)
 144e800:	00000d06 	br	144e838 <alt_onchip_flash_get_info+0x88>
    }
    else if (flash->number_of_regions > ALT_MAX_NUMBER_OF_FLASH_REGIONS)
 144e804:	e0bffc17 	ldw	r2,-16(fp)
 144e808:	10800c17 	ldw	r2,48(r2)
 144e80c:	10800250 	cmplti	r2,r2,9
 144e810:	1000031e 	bne	r2,zero,144e820 <alt_onchip_flash_get_info+0x70>
    {
        ret_code = -EFAULT;
 144e814:	00bffc84 	movi	r2,-14
 144e818:	e0bffb15 	stw	r2,-20(fp)
 144e81c:	00000606 	br	144e838 <alt_onchip_flash_get_info+0x88>
    }
    else
    {
        if (NULL != info)
 144e820:	e0bffe17 	ldw	r2,-8(fp)
 144e824:	10000426 	beq	r2,zero,144e838 <alt_onchip_flash_get_info+0x88>
        {
            /* Pass the table of erase blocks to user */
            *info = &flash->region_info[0];
 144e828:	e0bffc17 	ldw	r2,-16(fp)
 144e82c:	10c00d04 	addi	r3,r2,52
 144e830:	e0bffe17 	ldw	r2,-8(fp)
 144e834:	10c00015 	stw	r3,0(r2)
        }
    }

    return ret_code;
 144e838:	e0bffb17 	ldw	r2,-20(fp)
}
 144e83c:	e037883a 	mov	sp,fp
 144e840:	df000017 	ldw	fp,0(sp)
 144e844:	dec00104 	addi	sp,sp,4
 144e848:	f800283a 	ret

0144e84c <alt_onchip_flash_erase_block>:
int alt_onchip_flash_erase_block
(
    alt_flash_dev *flash_info,
    int           block_offset
)
{
 144e84c:	defff904 	addi	sp,sp,-28
 144e850:	dfc00615 	stw	ra,24(sp)
 144e854:	df000515 	stw	fp,20(sp)
 144e858:	df000504 	addi	fp,sp,20
 144e85c:	e13ffe15 	stw	r4,-8(fp)
 144e860:	e17fff15 	stw	r5,-4(fp)
    int ret_code = 0;
 144e864:	e03ffb15 	stw	zero,-20(fp)
    alt_onchip_flash_dev *flash = (alt_onchip_flash_dev*)flash_info;
 144e868:	e0bffe17 	ldw	r2,-8(fp)
 144e86c:	e0bffc15 	stw	r2,-16(fp)
    int page_address;

    /* Make sure the input parameters is not outside of this device's range. */
    if (block_offset >= flash->dev.length) {
 144e870:	e0bffc17 	ldw	r2,-16(fp)
 144e874:	10800b17 	ldw	r2,44(r2)
 144e878:	e0ffff17 	ldw	r3,-4(fp)
 144e87c:	18800216 	blt	r3,r2,144e888 <alt_onchip_flash_erase_block+0x3c>
        return -EFAULT;
 144e880:	00bffc84 	movi	r2,-14
 144e884:	00004606 	br	144e9a0 <alt_onchip_flash_erase_block+0x154>
    }

    /* Make sure IP support write and erase operation */
    if ((flash->csr_base == NULL) || (flash->is_read_only)) {
 144e888:	e0bffc17 	ldw	r2,-16(fp)
 144e88c:	10802f17 	ldw	r2,188(r2)
 144e890:	10000326 	beq	r2,zero,144e8a0 <alt_onchip_flash_erase_block+0x54>
 144e894:	e0bffc17 	ldw	r2,-16(fp)
 144e898:	10802e17 	ldw	r2,184(r2)
 144e89c:	10000226 	beq	r2,zero,144e8a8 <alt_onchip_flash_erase_block+0x5c>
        return -ENODEV;
 144e8a0:	00bffb44 	movi	r2,-19
 144e8a4:	00003e06 	br	144e9a0 <alt_onchip_flash_erase_block+0x154>
    }

    /* The block_offset must be page size aligned */
    if ((block_offset & (flash->page_size - 1)) != 0)
 144e8a8:	e0bffc17 	ldw	r2,-16(fp)
 144e8ac:	10803f17 	ldw	r2,252(r2)
 144e8b0:	10ffffc4 	addi	r3,r2,-1
 144e8b4:	e0bfff17 	ldw	r2,-4(fp)
 144e8b8:	1884703a 	and	r2,r3,r2
 144e8bc:	10000226 	beq	r2,zero,144e8c8 <alt_onchip_flash_erase_block+0x7c>
    {
        /* The address is not aligned */
        return -EINVAL;
 144e8c0:	00bffa84 	movi	r2,-22
 144e8c4:	00003606 	br	144e9a0 <alt_onchip_flash_erase_block+0x154>
    }

    /* Wait until flash controller idle */
    ret_code = alt_onchip_flash_poll_for_status_to_go_idle(flash);
 144e8c8:	e13ffc17 	ldw	r4,-16(fp)
 144e8cc:	144f4280 	call	144f428 <alt_onchip_flash_poll_for_status_to_go_idle>
 144e8d0:	e0bffb15 	stw	r2,-20(fp)
    if (ret_code != 0)
 144e8d4:	e0bffb17 	ldw	r2,-20(fp)
 144e8d8:	10000226 	beq	r2,zero,144e8e4 <alt_onchip_flash_erase_block+0x98>
    {
        return ret_code;
 144e8dc:	e0bffb17 	ldw	r2,-20(fp)
 144e8e0:	00002f06 	br	144e9a0 <alt_onchip_flash_erase_block+0x154>
    }

    /* Enable write and erase operation */
    ALTERA_ONCHIP_FLASH_ENABLE_WRITE_AND_ERASE_OPERATION(flash->csr_base);
 144e8e4:	e0bffc17 	ldw	r2,-16(fp)
 144e8e8:	10802f17 	ldw	r2,188(r2)
 144e8ec:	10c00104 	addi	r3,r2,4
 144e8f0:	e0bffc17 	ldw	r2,-16(fp)
 144e8f4:	10802f17 	ldw	r2,188(r2)
 144e8f8:	10800104 	addi	r2,r2,4
 144e8fc:	10800037 	ldwio	r2,0(r2)
 144e900:	113c002c 	andhi	r4,r2,61440
 144e904:	00802034 	movhi	r2,128
 144e908:	10bfffc4 	addi	r2,r2,-1
 144e90c:	2084b03a 	or	r2,r4,r2
 144e910:	18800035 	stwio	r2,0(r3)

    /* Calculate Page erase address, it is 32bit word addressing*/
    page_address = block_offset / 4;
 144e914:	e0bfff17 	ldw	r2,-4(fp)
 144e918:	1000010e 	bge	r2,zero,144e920 <alt_onchip_flash_erase_block+0xd4>
 144e91c:	108000c4 	addi	r2,r2,3
 144e920:	1005d0ba 	srai	r2,r2,2
 144e924:	e0bffd15 	stw	r2,-12(fp)

    /* Perform Page erase operation */
    ALTERA_ONCHIP_FLASH_PAGE_ERASE(flash->csr_base, page_address);
 144e928:	e0bffc17 	ldw	r2,-16(fp)
 144e92c:	10802f17 	ldw	r2,188(r2)
 144e930:	10800104 	addi	r2,r2,4
 144e934:	e0fffc17 	ldw	r3,-16(fp)
 144e938:	18c02f17 	ldw	r3,188(r3)
 144e93c:	18c00104 	addi	r3,r3,4
 144e940:	18c00037 	ldwio	r3,0(r3)
 144e944:	193c002c 	andhi	r4,r3,61440
 144e948:	e0fffd17 	ldw	r3,-12(fp)
 144e94c:	18c01c34 	orhi	r3,r3,112
 144e950:	20c6b03a 	or	r3,r4,r3
 144e954:	10c00035 	stwio	r3,0(r2)

    /* Wait until flash controller idle */
    ret_code = alt_onchip_flash_poll_for_status_to_go_idle(flash);
 144e958:	e13ffc17 	ldw	r4,-16(fp)
 144e95c:	144f4280 	call	144f428 <alt_onchip_flash_poll_for_status_to_go_idle>
 144e960:	e0bffb15 	stw	r2,-20(fp)

    /* Wait until flash controller indicate erase passed */
    ret_code = alt_onchip_flash_poll_for_status_erase_passed(flash);
 144e964:	e13ffc17 	ldw	r4,-16(fp)
 144e968:	144f4a80 	call	144f4a8 <alt_onchip_flash_poll_for_status_erase_passed>
 144e96c:	e0bffb15 	stw	r2,-20(fp)

    /* Disable write and erase operation */
    ALTERA_ONCHIP_FLASH_DISABLE_WRITE_AND_ERASE_OPERATION(flash->csr_base);
 144e970:	e0bffc17 	ldw	r2,-16(fp)
 144e974:	10802f17 	ldw	r2,188(r2)
 144e978:	10c00104 	addi	r3,r2,4
 144e97c:	e0bffc17 	ldw	r2,-16(fp)
 144e980:	10802f17 	ldw	r2,188(r2)
 144e984:	10800104 	addi	r2,r2,4
 144e988:	11000037 	ldwio	r4,0(r2)
 144e98c:	00840034 	movhi	r2,4096
 144e990:	10bfffc4 	addi	r2,r2,-1
 144e994:	2084b03a 	or	r2,r4,r2
 144e998:	18800035 	stwio	r2,0(r3)

    return ret_code;
 144e99c:	e0bffb17 	ldw	r2,-20(fp)
}
 144e9a0:	e037883a 	mov	sp,fp
 144e9a4:	dfc00117 	ldw	ra,4(sp)
 144e9a8:	df000017 	ldw	fp,0(sp)
 144e9ac:	dec00204 	addi	sp,sp,8
 144e9b0:	f800283a 	ret

0144e9b4 <alt_onchip_flash_write_block>:
    int           block_offset,
    int           data_offset,
    const void    *data,
    int           length
)
{
 144e9b4:	defff204 	addi	sp,sp,-56
 144e9b8:	dfc00d15 	stw	ra,52(sp)
 144e9bc:	df000c15 	stw	fp,48(sp)
 144e9c0:	df000c04 	addi	fp,sp,48
 144e9c4:	e13ffc15 	stw	r4,-16(fp)
 144e9c8:	e17ffd15 	stw	r5,-12(fp)
 144e9cc:	e1bffe15 	stw	r6,-8(fp)
 144e9d0:	e1ffff15 	stw	r7,-4(fp)
    int ret_code = 0;
 144e9d4:	e03ff415 	stw	zero,-48(fp)
    alt_onchip_flash_dev *flash = (alt_onchip_flash_dev*)flash_info;
 144e9d8:	e0bffc17 	ldw	r2,-16(fp)
 144e9dc:	e0bff815 	stw	r2,-32(fp)
    int buffer_offset = 0;
 144e9e0:	e03ff515 	stw	zero,-44(fp)
    int length_of_current_write;
    int current_data_offset = data_offset;
 144e9e4:	e0bffe17 	ldw	r2,-8(fp)
 144e9e8:	e0bff615 	stw	r2,-40(fp)
    int next_data_offset;
    alt_u32 chunk_of_data;

    /* Make sure the input parameters is not outside of this device's range. */
    if (
        (block_offset >= flash->dev.length) ||
 144e9ec:	e0bff817 	ldw	r2,-32(fp)
 144e9f0:	10800b17 	ldw	r2,44(r2)
    int current_data_offset = data_offset;
    int next_data_offset;
    alt_u32 chunk_of_data;

    /* Make sure the input parameters is not outside of this device's range. */
    if (
 144e9f4:	e0fffd17 	ldw	r3,-12(fp)
 144e9f8:	18800a0e 	bge	r3,r2,144ea24 <alt_onchip_flash_write_block+0x70>
        (block_offset >= flash->dev.length) ||
        (data_offset >= flash->dev.length) ||
 144e9fc:	e0bff817 	ldw	r2,-32(fp)
 144ea00:	10800b17 	ldw	r2,44(r2)
    int next_data_offset;
    alt_u32 chunk_of_data;

    /* Make sure the input parameters is not outside of this device's range. */
    if (
        (block_offset >= flash->dev.length) ||
 144ea04:	e0fffe17 	ldw	r3,-8(fp)
 144ea08:	1880060e 	bge	r3,r2,144ea24 <alt_onchip_flash_write_block+0x70>
        (data_offset >= flash->dev.length) ||
        (length > (flash->dev.length - data_offset))
 144ea0c:	e0bff817 	ldw	r2,-32(fp)
 144ea10:	10c00b17 	ldw	r3,44(r2)
 144ea14:	e0bffe17 	ldw	r2,-8(fp)
 144ea18:	1887c83a 	sub	r3,r3,r2
    alt_u32 chunk_of_data;

    /* Make sure the input parameters is not outside of this device's range. */
    if (
        (block_offset >= flash->dev.length) ||
        (data_offset >= flash->dev.length) ||
 144ea1c:	e0800217 	ldw	r2,8(fp)
 144ea20:	1880020e 	bge	r3,r2,144ea2c <alt_onchip_flash_write_block+0x78>
        (length > (flash->dev.length - data_offset))
    ) {
        return -EFAULT;
 144ea24:	00bffc84 	movi	r2,-14
 144ea28:	00008e06 	br	144ec64 <alt_onchip_flash_write_block+0x2b0>
    }

    /* Make sure IP support support write and erase operation */
    if ((flash->csr_base == NULL) || (flash->is_read_only != 0)) {
 144ea2c:	e0bff817 	ldw	r2,-32(fp)
 144ea30:	10802f17 	ldw	r2,188(r2)
 144ea34:	10000326 	beq	r2,zero,144ea44 <alt_onchip_flash_write_block+0x90>
 144ea38:	e0bff817 	ldw	r2,-32(fp)
 144ea3c:	10802e17 	ldw	r2,184(r2)
 144ea40:	10000226 	beq	r2,zero,144ea4c <alt_onchip_flash_write_block+0x98>
        return -ENODEV;
 144ea44:	00bffb44 	movi	r2,-19
 144ea48:	00008606 	br	144ec64 <alt_onchip_flash_write_block+0x2b0>
    }

    /* Wait until flash controller idle */
    ret_code = alt_onchip_flash_poll_for_status_to_go_idle(flash);
 144ea4c:	e13ff817 	ldw	r4,-32(fp)
 144ea50:	144f4280 	call	144f428 <alt_onchip_flash_poll_for_status_to_go_idle>
 144ea54:	e0bff415 	stw	r2,-48(fp)
    if (ret_code != 0)
 144ea58:	e0bff417 	ldw	r2,-48(fp)
 144ea5c:	10000226 	beq	r2,zero,144ea68 <alt_onchip_flash_write_block+0xb4>
    {
        return ret_code;
 144ea60:	e0bff417 	ldw	r2,-48(fp)
 144ea64:	00007f06 	br	144ec64 <alt_onchip_flash_write_block+0x2b0>
    }

    /* Enable write and erase operation */
    ALTERA_ONCHIP_FLASH_ENABLE_WRITE_AND_ERASE_OPERATION(flash->csr_base);
 144ea68:	e0bff817 	ldw	r2,-32(fp)
 144ea6c:	10802f17 	ldw	r2,188(r2)
 144ea70:	10c00104 	addi	r3,r2,4
 144ea74:	e0bff817 	ldw	r2,-32(fp)
 144ea78:	10802f17 	ldw	r2,188(r2)
 144ea7c:	10800104 	addi	r2,r2,4
 144ea80:	10800037 	ldwio	r2,0(r2)
 144ea84:	113c002c 	andhi	r4,r2,61440
 144ea88:	00802034 	movhi	r2,128
 144ea8c:	10bfffc4 	addi	r2,r2,-1
 144ea90:	2084b03a 	or	r2,r4,r2
 144ea94:	18800035 	stwio	r2,0(r3)

    /* Check data length */
    while (length)
 144ea98:	00006406 	br	144ec2c <alt_onchip_flash_write_block+0x278>
    {
        /* Minimum write size to onchip flash is 32 bits of data */
        chunk_of_data = 0xFFFFFFFF;
 144ea9c:	00bfffc4 	movi	r2,-1
 144eaa0:	e0bffb15 	stw	r2,-20(fp)

        /* The start of data_offset must be 4 bytes (32 bits) aligned */
        if ((current_data_offset & (ALTERA_ONCHIP_FLASH_DATA_ALIGN_SIZE - 1)) == 0)
 144eaa4:	e0bff617 	ldw	r2,-40(fp)
 144eaa8:	108000cc 	andi	r2,r2,3
 144eaac:	10001d1e 	bne	r2,zero,144eb24 <alt_onchip_flash_write_block+0x170>
        {
            /* The address is 4-byte aligned here */
            next_data_offset = (current_data_offset + ALTERA_ONCHIP_FLASH_DATA_ALIGN_SIZE) & ~(ALTERA_ONCHIP_FLASH_DATA_ALIGN_SIZE - 1);
 144eab0:	e0bff617 	ldw	r2,-40(fp)
 144eab4:	10c00104 	addi	r3,r2,4
 144eab8:	00bfff04 	movi	r2,-4
 144eabc:	1884703a 	and	r2,r3,r2
 144eac0:	e0bff715 	stw	r2,-36(fp)
            length_of_current_write = MIN(length, next_data_offset - current_data_offset);
 144eac4:	e0fff717 	ldw	r3,-36(fp)
 144eac8:	e0bff617 	ldw	r2,-40(fp)
 144eacc:	1885c83a 	sub	r2,r3,r2
 144ead0:	e0c00217 	ldw	r3,8(fp)
 144ead4:	1880010e 	bge	r3,r2,144eadc <alt_onchip_flash_write_block+0x128>
 144ead8:	1805883a 	mov	r2,r3
 144eadc:	e0bff915 	stw	r2,-28(fp)
            /* Prepare the 4 bytes chunk of data to be written */
            memcpy(&chunk_of_data, &((alt_u8*)data)[buffer_offset], length_of_current_write);
 144eae0:	e0bff517 	ldw	r2,-44(fp)
 144eae4:	e0ffff17 	ldw	r3,-4(fp)
 144eae8:	1887883a 	add	r3,r3,r2
 144eaec:	e0bff917 	ldw	r2,-28(fp)
 144eaf0:	e13ffb04 	addi	r4,fp,-20
 144eaf4:	180b883a 	mov	r5,r3
 144eaf8:	100d883a 	mov	r6,r2
 144eafc:	14463380 	call	1446338 <memcpy>
            buffer_offset += length_of_current_write;
 144eb00:	e0fff517 	ldw	r3,-44(fp)
 144eb04:	e0bff917 	ldw	r2,-28(fp)
 144eb08:	1885883a 	add	r2,r3,r2
 144eb0c:	e0bff515 	stw	r2,-44(fp)
            length -= length_of_current_write;
 144eb10:	e0c00217 	ldw	r3,8(fp)
 144eb14:	e0bff917 	ldw	r2,-28(fp)
 144eb18:	1885c83a 	sub	r2,r3,r2
 144eb1c:	e0800215 	stw	r2,8(fp)
 144eb20:	00002e06 	br	144ebdc <alt_onchip_flash_write_block+0x228>
        } else {
            /* Calculate how many padding bytes need to be added before the start of a data offset */
            int padding = current_data_offset & (ALTERA_ONCHIP_FLASH_DATA_ALIGN_SIZE - 1);
 144eb24:	e0bff617 	ldw	r2,-40(fp)
 144eb28:	108000cc 	andi	r2,r2,3
 144eb2c:	e0bffa15 	stw	r2,-24(fp)

            /* Calculate new 4-byte aligned data offset */
            current_data_offset = current_data_offset - padding;
 144eb30:	e0fff617 	ldw	r3,-40(fp)
 144eb34:	e0bffa17 	ldw	r2,-24(fp)
 144eb38:	1885c83a 	sub	r2,r3,r2
 144eb3c:	e0bff615 	stw	r2,-40(fp)
            next_data_offset = (current_data_offset + ALTERA_ONCHIP_FLASH_DATA_ALIGN_SIZE) & ~(ALTERA_ONCHIP_FLASH_DATA_ALIGN_SIZE - 1);
 144eb40:	e0bff617 	ldw	r2,-40(fp)
 144eb44:	10c00104 	addi	r3,r2,4
 144eb48:	00bfff04 	movi	r2,-4
 144eb4c:	1884703a 	and	r2,r3,r2
 144eb50:	e0bff715 	stw	r2,-36(fp)
            length_of_current_write = MIN(length + padding, next_data_offset - current_data_offset);
 144eb54:	e0fff717 	ldw	r3,-36(fp)
 144eb58:	e0bff617 	ldw	r2,-40(fp)
 144eb5c:	1889c83a 	sub	r4,r3,r2
 144eb60:	e0c00217 	ldw	r3,8(fp)
 144eb64:	e0bffa17 	ldw	r2,-24(fp)
 144eb68:	1887883a 	add	r3,r3,r2
 144eb6c:	2005883a 	mov	r2,r4
 144eb70:	1880010e 	bge	r3,r2,144eb78 <alt_onchip_flash_write_block+0x1c4>
 144eb74:	1805883a 	mov	r2,r3
 144eb78:	e0bff915 	stw	r2,-28(fp)
            /* Prepare the 4 bytes chunk of data to be written */
            memcpy((void *)(((int)&chunk_of_data) + (int)padding), &((alt_u8*)data)[buffer_offset], length_of_current_write - padding);
 144eb7c:	e0fffb04 	addi	r3,fp,-20
 144eb80:	e0bffa17 	ldw	r2,-24(fp)
 144eb84:	1885883a 	add	r2,r3,r2
 144eb88:	1009883a 	mov	r4,r2
 144eb8c:	e0bff517 	ldw	r2,-44(fp)
 144eb90:	e0ffff17 	ldw	r3,-4(fp)
 144eb94:	188b883a 	add	r5,r3,r2
 144eb98:	e0fff917 	ldw	r3,-28(fp)
 144eb9c:	e0bffa17 	ldw	r2,-24(fp)
 144eba0:	1885c83a 	sub	r2,r3,r2
 144eba4:	100d883a 	mov	r6,r2
 144eba8:	14463380 	call	1446338 <memcpy>
            buffer_offset += length_of_current_write - padding;
 144ebac:	e0fff917 	ldw	r3,-28(fp)
 144ebb0:	e0bffa17 	ldw	r2,-24(fp)
 144ebb4:	1885c83a 	sub	r2,r3,r2
 144ebb8:	e0fff517 	ldw	r3,-44(fp)
 144ebbc:	1885883a 	add	r2,r3,r2
 144ebc0:	e0bff515 	stw	r2,-44(fp)
            length -= length_of_current_write - padding;
 144ebc4:	e0fffa17 	ldw	r3,-24(fp)
 144ebc8:	e0bff917 	ldw	r2,-28(fp)
 144ebcc:	1885c83a 	sub	r2,r3,r2
 144ebd0:	e0c00217 	ldw	r3,8(fp)
 144ebd4:	1885883a 	add	r2,r3,r2
 144ebd8:	e0800215 	stw	r2,8(fp)
        }

        /* Writing to flash via IO 32 bits at a time */
        IOWR_32DIRECT(flash->dev.base_addr, current_data_offset, chunk_of_data);
 144ebdc:	e0bff817 	ldw	r2,-32(fp)
 144ebe0:	10c00a17 	ldw	r3,40(r2)
 144ebe4:	e0bff617 	ldw	r2,-40(fp)
 144ebe8:	1885883a 	add	r2,r3,r2
 144ebec:	e0fffb17 	ldw	r3,-20(fp)
 144ebf0:	10c00035 	stwio	r3,0(r2)

        /* Wait until flash controller idle */
        ret_code = alt_onchip_flash_poll_for_status_to_go_idle(flash);
 144ebf4:	e13ff817 	ldw	r4,-32(fp)
 144ebf8:	144f4280 	call	144f428 <alt_onchip_flash_poll_for_status_to_go_idle>
 144ebfc:	e0bff415 	stw	r2,-48(fp)
        if (ret_code != 0)
 144ec00:	e0bff417 	ldw	r2,-48(fp)
 144ec04:	10000126 	beq	r2,zero,144ec0c <alt_onchip_flash_write_block+0x258>
        {
            break;
 144ec08:	00000a06 	br	144ec34 <alt_onchip_flash_write_block+0x280>
        }

        /* Wait until flash controller indicate write passed */
        ret_code = alt_onchip_flash_poll_for_status_write_passed(flash);
 144ec0c:	e13ff817 	ldw	r4,-32(fp)
 144ec10:	144f5280 	call	144f528 <alt_onchip_flash_poll_for_status_write_passed>
 144ec14:	e0bff415 	stw	r2,-48(fp)
        if (ret_code != 0)
 144ec18:	e0bff417 	ldw	r2,-48(fp)
 144ec1c:	10000126 	beq	r2,zero,144ec24 <alt_onchip_flash_write_block+0x270>
        {
            break;
 144ec20:	00000406 	br	144ec34 <alt_onchip_flash_write_block+0x280>
        }

        /* Prepare to write next 4 bytes */
        current_data_offset = next_data_offset;
 144ec24:	e0bff717 	ldw	r2,-36(fp)
 144ec28:	e0bff615 	stw	r2,-40(fp)

    /* Enable write and erase operation */
    ALTERA_ONCHIP_FLASH_ENABLE_WRITE_AND_ERASE_OPERATION(flash->csr_base);

    /* Check data length */
    while (length)
 144ec2c:	e0800217 	ldw	r2,8(fp)
 144ec30:	103f9a1e 	bne	r2,zero,144ea9c <__alt_data_end+0xfffe929c>
        /* Prepare to write next 4 bytes */
        current_data_offset = next_data_offset;
    }

    /* Disable write and erase operation */
    ALTERA_ONCHIP_FLASH_DISABLE_WRITE_AND_ERASE_OPERATION(flash->csr_base);
 144ec34:	e0bff817 	ldw	r2,-32(fp)
 144ec38:	10802f17 	ldw	r2,188(r2)
 144ec3c:	10c00104 	addi	r3,r2,4
 144ec40:	e0bff817 	ldw	r2,-32(fp)
 144ec44:	10802f17 	ldw	r2,188(r2)
 144ec48:	10800104 	addi	r2,r2,4
 144ec4c:	11000037 	ldwio	r4,0(r2)
 144ec50:	00840034 	movhi	r2,4096
 144ec54:	10bfffc4 	addi	r2,r2,-1
 144ec58:	2084b03a 	or	r2,r4,r2
 144ec5c:	18800035 	stwio	r2,0(r3)

    return ret_code;
 144ec60:	e0bff417 	ldw	r2,-48(fp)
}
 144ec64:	e037883a 	mov	sp,fp
 144ec68:	dfc00117 	ldw	ra,4(sp)
 144ec6c:	df000017 	ldw	fp,0(sp)
 144ec70:	dec00204 	addi	sp,sp,8
 144ec74:	f800283a 	ret

0144ec78 <alt_onchip_flash_write>:
    alt_flash_dev *flash_info,
    int           offset,
    const void    *src_addr,
    int           length
)
{
 144ec78:	defff104 	addi	sp,sp,-60
 144ec7c:	dfc00e15 	stw	ra,56(sp)
 144ec80:	df000d15 	stw	fp,52(sp)
 144ec84:	df000d04 	addi	fp,sp,52
 144ec88:	e13ffc15 	stw	r4,-16(fp)
 144ec8c:	e17ffd15 	stw	r5,-12(fp)
 144ec90:	e1bffe15 	stw	r6,-8(fp)
 144ec94:	e1ffff15 	stw	r7,-4(fp)
    int         ret_code = 0;
 144ec98:	e03ff415 	stw	zero,-48(fp)
    int         i,j;
    int         data_to_write;
    int         current_offset;
    int         full_length = length;
 144ec9c:	e0bfff17 	ldw	r2,-4(fp)
 144eca0:	e0bff815 	stw	r2,-32(fp)
    int         start_offset = offset;
 144eca4:	e0bffd17 	ldw	r2,-12(fp)
 144eca8:	e0bff915 	stw	r2,-28(fp)
    alt_onchip_flash_dev* flash = (alt_onchip_flash_dev*)flash_info;
 144ecac:	e0bffc17 	ldw	r2,-16(fp)
 144ecb0:	e0bffa15 	stw	r2,-24(fp)

    /* Make sure the input parameters is not outside of this device's range. */
    if ((offset >= flash->dev.length) || (length > (flash->dev.length - offset)))
 144ecb4:	e0bffa17 	ldw	r2,-24(fp)
 144ecb8:	10800b17 	ldw	r2,44(r2)
 144ecbc:	e0fffd17 	ldw	r3,-12(fp)
 144ecc0:	1880060e 	bge	r3,r2,144ecdc <alt_onchip_flash_write+0x64>
 144ecc4:	e0bffa17 	ldw	r2,-24(fp)
 144ecc8:	10c00b17 	ldw	r3,44(r2)
 144eccc:	e0bffd17 	ldw	r2,-12(fp)
 144ecd0:	1887c83a 	sub	r3,r3,r2
 144ecd4:	e0bfff17 	ldw	r2,-4(fp)
 144ecd8:	1880020e 	bge	r3,r2,144ece4 <alt_onchip_flash_write+0x6c>
    {
        return -EFAULT;
 144ecdc:	00bffc84 	movi	r2,-14
 144ece0:	00009606 	br	144ef3c <alt_onchip_flash_write+0x2c4>
    }

    /*
    * First and foremost which sectors are affected?
    */
    for(i=0;i<flash->dev.number_of_regions;i++)
 144ece4:	e03ff515 	stw	zero,-44(fp)
 144ece8:	00008706 	br	144ef08 <alt_onchip_flash_write+0x290>
    {
        /* Is it in this erase block region?*/
        if((offset >= flash->dev.region_info[i].offset) &&
 144ecec:	e0fffa17 	ldw	r3,-24(fp)
 144ecf0:	e0bff517 	ldw	r2,-44(fp)
 144ecf4:	1004913a 	slli	r2,r2,4
 144ecf8:	1885883a 	add	r2,r3,r2
 144ecfc:	10800d04 	addi	r2,r2,52
 144ed00:	10800017 	ldw	r2,0(r2)
 144ed04:	e0fffd17 	ldw	r3,-12(fp)
 144ed08:	18807c16 	blt	r3,r2,144eefc <alt_onchip_flash_write+0x284>
            (offset < (flash->dev.region_info[i].offset +
 144ed0c:	e0fffa17 	ldw	r3,-24(fp)
 144ed10:	e0bff517 	ldw	r2,-44(fp)
 144ed14:	1004913a 	slli	r2,r2,4
 144ed18:	1885883a 	add	r2,r3,r2
 144ed1c:	10800d04 	addi	r2,r2,52
 144ed20:	10c00017 	ldw	r3,0(r2)
            flash->dev.region_info[i].region_size)))
 144ed24:	e13ffa17 	ldw	r4,-24(fp)
 144ed28:	e0bff517 	ldw	r2,-44(fp)
 144ed2c:	1004913a 	slli	r2,r2,4
 144ed30:	2085883a 	add	r2,r4,r2
 144ed34:	10800e04 	addi	r2,r2,56
 144ed38:	10800017 	ldw	r2,0(r2)
    */
    for(i=0;i<flash->dev.number_of_regions;i++)
    {
        /* Is it in this erase block region?*/
        if((offset >= flash->dev.region_info[i].offset) &&
            (offset < (flash->dev.region_info[i].offset +
 144ed3c:	1885883a 	add	r2,r3,r2
    * First and foremost which sectors are affected?
    */
    for(i=0;i<flash->dev.number_of_regions;i++)
    {
        /* Is it in this erase block region?*/
        if((offset >= flash->dev.region_info[i].offset) &&
 144ed40:	e0fffd17 	ldw	r3,-12(fp)
 144ed44:	18806d0e 	bge	r3,r2,144eefc <alt_onchip_flash_write+0x284>
            (offset < (flash->dev.region_info[i].offset +
            flash->dev.region_info[i].region_size)))
        {
            current_offset = flash->dev.region_info[i].offset;
 144ed48:	e0fffa17 	ldw	r3,-24(fp)
 144ed4c:	e0bff517 	ldw	r2,-44(fp)
 144ed50:	1004913a 	slli	r2,r2,4
 144ed54:	1885883a 	add	r2,r3,r2
 144ed58:	10800d04 	addi	r2,r2,52
 144ed5c:	10800017 	ldw	r2,0(r2)
 144ed60:	e0bff715 	stw	r2,-36(fp)

            for(j=0;j<flash->dev.region_info[i].number_of_blocks;j++)
 144ed64:	e03ff615 	stw	zero,-40(fp)
 144ed68:	00005c06 	br	144eedc <alt_onchip_flash_write+0x264>
            {
                if ((offset >= current_offset ) &&
 144ed6c:	e0fffd17 	ldw	r3,-12(fp)
 144ed70:	e0bff717 	ldw	r2,-36(fp)
 144ed74:	18804d16 	blt	r3,r2,144eeac <alt_onchip_flash_write+0x234>
                    (offset < (current_offset +
                    flash->dev.region_info[i].block_size)))
 144ed78:	e0fffa17 	ldw	r3,-24(fp)
 144ed7c:	e0bff517 	ldw	r2,-44(fp)
 144ed80:	10800104 	addi	r2,r2,4
 144ed84:	1004913a 	slli	r2,r2,4
 144ed88:	1885883a 	add	r2,r3,r2
 144ed8c:	10c00017 	ldw	r3,0(r2)
            current_offset = flash->dev.region_info[i].offset;

            for(j=0;j<flash->dev.region_info[i].number_of_blocks;j++)
            {
                if ((offset >= current_offset ) &&
                    (offset < (current_offset +
 144ed90:	e0bff717 	ldw	r2,-36(fp)
 144ed94:	1885883a 	add	r2,r3,r2
        {
            current_offset = flash->dev.region_info[i].offset;

            for(j=0;j<flash->dev.region_info[i].number_of_blocks;j++)
            {
                if ((offset >= current_offset ) &&
 144ed98:	e0fffd17 	ldw	r3,-12(fp)
 144ed9c:	1880430e 	bge	r3,r2,144eeac <alt_onchip_flash_write+0x234>
                {
                    /*
                    * Check if the contents of the block are different
                    * from the data we wish to put there
                    */
                    data_to_write = (current_offset + flash->dev.region_info[i].block_size - offset);
 144eda0:	e0fffa17 	ldw	r3,-24(fp)
 144eda4:	e0bff517 	ldw	r2,-44(fp)
 144eda8:	10800104 	addi	r2,r2,4
 144edac:	1004913a 	slli	r2,r2,4
 144edb0:	1885883a 	add	r2,r3,r2
 144edb4:	10c00017 	ldw	r3,0(r2)
 144edb8:	e0bff717 	ldw	r2,-36(fp)
 144edbc:	1887883a 	add	r3,r3,r2
 144edc0:	e0bffd17 	ldw	r2,-12(fp)
 144edc4:	1885c83a 	sub	r2,r3,r2
 144edc8:	e0bffb15 	stw	r2,-20(fp)
                    data_to_write = MIN(data_to_write, length);
 144edcc:	e0fffb17 	ldw	r3,-20(fp)
 144edd0:	e0bfff17 	ldw	r2,-4(fp)
 144edd4:	1880010e 	bge	r3,r2,144eddc <alt_onchip_flash_write+0x164>
 144edd8:	1805883a 	mov	r2,r3
 144eddc:	e0bffb15 	stw	r2,-20(fp)
                    if(memcmp(src_addr, (alt_u8*)flash->dev.base_addr+offset, data_to_write))
 144ede0:	e0bffa17 	ldw	r2,-24(fp)
 144ede4:	10c00a17 	ldw	r3,40(r2)
 144ede8:	e0bffd17 	ldw	r2,-12(fp)
 144edec:	1887883a 	add	r3,r3,r2
 144edf0:	e0bffb17 	ldw	r2,-20(fp)
 144edf4:	e13ffe17 	ldw	r4,-8(fp)
 144edf8:	180b883a 	mov	r5,r3
 144edfc:	100d883a 	mov	r6,r2
 144ee00:	14504dc0 	call	14504dc <memcmp>
 144ee04:	10001326 	beq	r2,zero,144ee54 <alt_onchip_flash_write+0x1dc>
                    {
                        ret_code = (*flash->dev.erase_block)(&flash->dev, current_offset);
 144ee08:	e0bffa17 	ldw	r2,-24(fp)
 144ee0c:	10800817 	ldw	r2,32(r2)
 144ee10:	e0fffa17 	ldw	r3,-24(fp)
 144ee14:	1809883a 	mov	r4,r3
 144ee18:	e17ff717 	ldw	r5,-36(fp)
 144ee1c:	103ee83a 	callr	r2
 144ee20:	e0bff415 	stw	r2,-48(fp)

                        if (!ret_code)
 144ee24:	e0bff417 	ldw	r2,-48(fp)
 144ee28:	10000a1e 	bne	r2,zero,144ee54 <alt_onchip_flash_write+0x1dc>
                        {
                            ret_code = (*flash->dev.write_block)(
 144ee2c:	e0bffa17 	ldw	r2,-24(fp)
 144ee30:	10800917 	ldw	r2,36(r2)
 144ee34:	e13ffa17 	ldw	r4,-24(fp)
 144ee38:	e0fffb17 	ldw	r3,-20(fp)
 144ee3c:	d8c00015 	stw	r3,0(sp)
 144ee40:	e17ff717 	ldw	r5,-36(fp)
 144ee44:	e1bffd17 	ldw	r6,-12(fp)
 144ee48:	e1fffe17 	ldw	r7,-8(fp)
 144ee4c:	103ee83a 	callr	r2
 144ee50:	e0bff415 	stw	r2,-48(fp)
                                                                data_to_write);
                        }
                    }

                    /* Was this the last block? */
                    if ((length == data_to_write) || ret_code)
 144ee54:	e0ffff17 	ldw	r3,-4(fp)
 144ee58:	e0bffb17 	ldw	r2,-20(fp)
 144ee5c:	18802e26 	beq	r3,r2,144ef18 <alt_onchip_flash_write+0x2a0>
 144ee60:	e0bff417 	ldw	r2,-48(fp)
 144ee64:	10002c1e 	bne	r2,zero,144ef18 <alt_onchip_flash_write+0x2a0>
                    {
                        goto finished;
                    }

                    length -= data_to_write;
 144ee68:	e0ffff17 	ldw	r3,-4(fp)
 144ee6c:	e0bffb17 	ldw	r2,-20(fp)
 144ee70:	1885c83a 	sub	r2,r3,r2
 144ee74:	e0bfff15 	stw	r2,-4(fp)
                    offset = current_offset + flash->dev.region_info[i].block_size;
 144ee78:	e0fffa17 	ldw	r3,-24(fp)
 144ee7c:	e0bff517 	ldw	r2,-44(fp)
 144ee80:	10800104 	addi	r2,r2,4
 144ee84:	1004913a 	slli	r2,r2,4
 144ee88:	1885883a 	add	r2,r3,r2
 144ee8c:	10c00017 	ldw	r3,0(r2)
 144ee90:	e0bff717 	ldw	r2,-36(fp)
 144ee94:	1885883a 	add	r2,r3,r2
 144ee98:	e0bffd15 	stw	r2,-12(fp)
                    src_addr = (alt_u8*)src_addr + data_to_write;
 144ee9c:	e0bffb17 	ldw	r2,-20(fp)
 144eea0:	e0fffe17 	ldw	r3,-8(fp)
 144eea4:	1885883a 	add	r2,r3,r2
 144eea8:	e0bffe15 	stw	r2,-8(fp)
                }
                current_offset += flash->dev.region_info[i].block_size;
 144eeac:	e0fffa17 	ldw	r3,-24(fp)
 144eeb0:	e0bff517 	ldw	r2,-44(fp)
 144eeb4:	10800104 	addi	r2,r2,4
 144eeb8:	1004913a 	slli	r2,r2,4
 144eebc:	1885883a 	add	r2,r3,r2
 144eec0:	10800017 	ldw	r2,0(r2)
 144eec4:	e0fff717 	ldw	r3,-36(fp)
 144eec8:	1885883a 	add	r2,r3,r2
 144eecc:	e0bff715 	stw	r2,-36(fp)
            (offset < (flash->dev.region_info[i].offset +
            flash->dev.region_info[i].region_size)))
        {
            current_offset = flash->dev.region_info[i].offset;

            for(j=0;j<flash->dev.region_info[i].number_of_blocks;j++)
 144eed0:	e0bff617 	ldw	r2,-40(fp)
 144eed4:	10800044 	addi	r2,r2,1
 144eed8:	e0bff615 	stw	r2,-40(fp)
 144eedc:	e0fffa17 	ldw	r3,-24(fp)
 144eee0:	e0bff517 	ldw	r2,-44(fp)
 144eee4:	1004913a 	slli	r2,r2,4
 144eee8:	1885883a 	add	r2,r3,r2
 144eeec:	10800f04 	addi	r2,r2,60
 144eef0:	10800017 	ldw	r2,0(r2)
 144eef4:	e0fff617 	ldw	r3,-40(fp)
 144eef8:	18bf9c16 	blt	r3,r2,144ed6c <__alt_data_end+0xfffe956c>
    }

    /*
    * First and foremost which sectors are affected?
    */
    for(i=0;i<flash->dev.number_of_regions;i++)
 144eefc:	e0bff517 	ldw	r2,-44(fp)
 144ef00:	10800044 	addi	r2,r2,1
 144ef04:	e0bff515 	stw	r2,-44(fp)
 144ef08:	e0bffa17 	ldw	r2,-24(fp)
 144ef0c:	10800c17 	ldw	r2,48(r2)
 144ef10:	e0fff517 	ldw	r3,-44(fp)
 144ef14:	18bf7516 	blt	r3,r2,144ecec <__alt_data_end+0xfffe94ec>
            }
        }
    }

finished:
    alt_dcache_flush((alt_u8*)flash->dev.base_addr+start_offset, full_length);
 144ef18:	e0bffa17 	ldw	r2,-24(fp)
 144ef1c:	10c00a17 	ldw	r3,40(r2)
 144ef20:	e0bff917 	ldw	r2,-28(fp)
 144ef24:	1887883a 	add	r3,r3,r2
 144ef28:	e0bff817 	ldw	r2,-32(fp)
 144ef2c:	1809883a 	mov	r4,r3
 144ef30:	100b883a 	mov	r5,r2
 144ef34:	144f7000 	call	144f700 <alt_dcache_flush>
    return ret_code;
 144ef38:	e0bff417 	ldw	r2,-48(fp)
}
 144ef3c:	e037883a 	mov	sp,fp
 144ef40:	dfc00117 	ldw	ra,4(sp)
 144ef44:	df000017 	ldw	fp,0(sp)
 144ef48:	dec00204 	addi	sp,sp,8
 144ef4c:	f800283a 	ret

0144ef50 <altera_onchip_flash_init>:
**/
void altera_onchip_flash_init
(
    alt_onchip_flash_dev *flash
)
{
 144ef50:	defff504 	addi	sp,sp,-44
 144ef54:	dfc00a15 	stw	ra,40(sp)
 144ef58:	df000915 	stw	fp,36(sp)
 144ef5c:	dc000815 	stw	r16,32(sp)
 144ef60:	df000904 	addi	fp,sp,36
 144ef64:	e13ffe15 	stw	r4,-8(fp)
    /* A region is a sector of the onchip flash */
    int number_of_regions;
    flash_region* region_info;
    int sector1_status = ALTERA_ONCHIP_FLASH_STATUS_SECTOR1_AVAILABLE;
 144ef68:	e03ff815 	stw	zero,-32(fp)
    int sector2_status = ALTERA_ONCHIP_FLASH_STATUS_SECTOR2_AVAILABLE;
 144ef6c:	e03ff915 	stw	zero,-28(fp)
    int sector3_status = ALTERA_ONCHIP_FLASH_STATUS_SECTOR3_AVAILABLE;
 144ef70:	e03ffa15 	stw	zero,-24(fp)
    int sector4_status = ALTERA_ONCHIP_FLASH_STATUS_SECTOR4_AVAILABLE;
 144ef74:	e03ffb15 	stw	zero,-20(fp)
    int sector5_status = ALTERA_ONCHIP_FLASH_STATUS_SECTOR5_AVAILABLE;
 144ef78:	e03ffc15 	stw	zero,-16(fp)

    /* Set up flash_region data structures. */
    number_of_regions = 0;
 144ef7c:	e03ff715 	stw	zero,-36(fp)
    region_info = &flash->dev.region_info[0];
 144ef80:	e0bffe17 	ldw	r2,-8(fp)
 144ef84:	10800d04 	addi	r2,r2,52
 144ef88:	e0bffd15 	stw	r2,-12(fp)

    if (flash->csr_base != NULL) {
 144ef8c:	e0bffe17 	ldw	r2,-8(fp)
 144ef90:	10802f17 	ldw	r2,188(r2)
 144ef94:	10001926 	beq	r2,zero,144effc <altera_onchip_flash_init+0xac>
        sector1_status = IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) & ALTERA_ONCHIP_FLASH_STATUS_SECTOR1_MSK;
 144ef98:	e0bffe17 	ldw	r2,-8(fp)
 144ef9c:	10802f17 	ldw	r2,188(r2)
 144efa0:	10800037 	ldwio	r2,0(r2)
 144efa4:	1080080c 	andi	r2,r2,32
 144efa8:	e0bff815 	stw	r2,-32(fp)
        sector2_status = IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) & ALTERA_ONCHIP_FLASH_STATUS_SECTOR2_MSK;
 144efac:	e0bffe17 	ldw	r2,-8(fp)
 144efb0:	10802f17 	ldw	r2,188(r2)
 144efb4:	10800037 	ldwio	r2,0(r2)
 144efb8:	1080100c 	andi	r2,r2,64
 144efbc:	e0bff915 	stw	r2,-28(fp)
        sector3_status = IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) & ALTERA_ONCHIP_FLASH_STATUS_SECTOR3_MSK;
 144efc0:	e0bffe17 	ldw	r2,-8(fp)
 144efc4:	10802f17 	ldw	r2,188(r2)
 144efc8:	10800037 	ldwio	r2,0(r2)
 144efcc:	1080200c 	andi	r2,r2,128
 144efd0:	e0bffa15 	stw	r2,-24(fp)
        sector4_status = IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) & ALTERA_ONCHIP_FLASH_STATUS_SECTOR4_MSK;
 144efd4:	e0bffe17 	ldw	r2,-8(fp)
 144efd8:	10802f17 	ldw	r2,188(r2)
 144efdc:	10800037 	ldwio	r2,0(r2)
 144efe0:	1080400c 	andi	r2,r2,256
 144efe4:	e0bffb15 	stw	r2,-20(fp)
        sector5_status = IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) & ALTERA_ONCHIP_FLASH_STATUS_SECTOR5_MSK;
 144efe8:	e0bffe17 	ldw	r2,-8(fp)
 144efec:	10802f17 	ldw	r2,188(r2)
 144eff0:	10800037 	ldwio	r2,0(r2)
 144eff4:	1080800c 	andi	r2,r2,512
 144eff8:	e0bffc15 	stw	r2,-16(fp)
    }

    if ((flash->sector1_enabled == 1) && (sector1_status != ALTERA_ONCHIP_FLASH_STATUS_SECTOR1_UNAVAILABLE)) {
 144effc:	e0bffe17 	ldw	r2,-8(fp)
 144f000:	10803017 	ldw	r2,192(r2)
 144f004:	10800058 	cmpnei	r2,r2,1
 144f008:	10002f1e 	bne	r2,zero,144f0c8 <altera_onchip_flash_init+0x178>
 144f00c:	e0bff817 	ldw	r2,-32(fp)
 144f010:	10800820 	cmpeqi	r2,r2,32
 144f014:	10002c1e 	bne	r2,zero,144f0c8 <altera_onchip_flash_init+0x178>

        region_info[number_of_regions].offset = flash->sector1_start_addr;
 144f018:	e0bff717 	ldw	r2,-36(fp)
 144f01c:	1004913a 	slli	r2,r2,4
 144f020:	e0fffd17 	ldw	r3,-12(fp)
 144f024:	1885883a 	add	r2,r3,r2
 144f028:	e0fffe17 	ldw	r3,-8(fp)
 144f02c:	18c03117 	ldw	r3,196(r3)
 144f030:	10c00015 	stw	r3,0(r2)
        region_info[number_of_regions].region_size = flash->sector1_end_addr - flash->sector1_start_addr + 1;
 144f034:	e0bff717 	ldw	r2,-36(fp)
 144f038:	1004913a 	slli	r2,r2,4
 144f03c:	e0fffd17 	ldw	r3,-12(fp)
 144f040:	1885883a 	add	r2,r3,r2
 144f044:	e0fffe17 	ldw	r3,-8(fp)
 144f048:	19003217 	ldw	r4,200(r3)
 144f04c:	e0fffe17 	ldw	r3,-8(fp)
 144f050:	18c03117 	ldw	r3,196(r3)
 144f054:	20c7c83a 	sub	r3,r4,r3
 144f058:	18c00044 	addi	r3,r3,1
 144f05c:	10c00115 	stw	r3,4(r2)
        region_info[number_of_regions].number_of_blocks = flash->dev.region_info[number_of_regions].region_size / flash->page_size;
 144f060:	e0bff717 	ldw	r2,-36(fp)
 144f064:	1004913a 	slli	r2,r2,4
 144f068:	e0fffd17 	ldw	r3,-12(fp)
 144f06c:	18a1883a 	add	r16,r3,r2
 144f070:	e0fffe17 	ldw	r3,-8(fp)
 144f074:	e0bff717 	ldw	r2,-36(fp)
 144f078:	1004913a 	slli	r2,r2,4
 144f07c:	1885883a 	add	r2,r3,r2
 144f080:	10800e04 	addi	r2,r2,56
 144f084:	10c00017 	ldw	r3,0(r2)
 144f088:	e0bffe17 	ldw	r2,-8(fp)
 144f08c:	10803f17 	ldw	r2,252(r2)
 144f090:	1809883a 	mov	r4,r3
 144f094:	100b883a 	mov	r5,r2
 144f098:	144aaf00 	call	144aaf0 <__divsi3>
 144f09c:	80800215 	stw	r2,8(r16)
        region_info[number_of_regions].block_size = flash->page_size;
 144f0a0:	e0bff717 	ldw	r2,-36(fp)
 144f0a4:	1004913a 	slli	r2,r2,4
 144f0a8:	e0fffd17 	ldw	r3,-12(fp)
 144f0ac:	1885883a 	add	r2,r3,r2
 144f0b0:	e0fffe17 	ldw	r3,-8(fp)
 144f0b4:	18c03f17 	ldw	r3,252(r3)
 144f0b8:	10c00315 	stw	r3,12(r2)

        number_of_regions++;
 144f0bc:	e0bff717 	ldw	r2,-36(fp)
 144f0c0:	10800044 	addi	r2,r2,1
 144f0c4:	e0bff715 	stw	r2,-36(fp)
    }

    if ((flash->sector2_enabled == 1) && (sector2_status != ALTERA_ONCHIP_FLASH_STATUS_SECTOR2_UNAVAILABLE)) {
 144f0c8:	e0bffe17 	ldw	r2,-8(fp)
 144f0cc:	10803317 	ldw	r2,204(r2)
 144f0d0:	10800058 	cmpnei	r2,r2,1
 144f0d4:	10002f1e 	bne	r2,zero,144f194 <altera_onchip_flash_init+0x244>
 144f0d8:	e0bff917 	ldw	r2,-28(fp)
 144f0dc:	10801020 	cmpeqi	r2,r2,64
 144f0e0:	10002c1e 	bne	r2,zero,144f194 <altera_onchip_flash_init+0x244>

        region_info[number_of_regions].offset = flash->sector2_start_addr;
 144f0e4:	e0bff717 	ldw	r2,-36(fp)
 144f0e8:	1004913a 	slli	r2,r2,4
 144f0ec:	e0fffd17 	ldw	r3,-12(fp)
 144f0f0:	1885883a 	add	r2,r3,r2
 144f0f4:	e0fffe17 	ldw	r3,-8(fp)
 144f0f8:	18c03417 	ldw	r3,208(r3)
 144f0fc:	10c00015 	stw	r3,0(r2)
        region_info[number_of_regions].region_size = flash->sector2_end_addr - flash->sector2_start_addr + 1;
 144f100:	e0bff717 	ldw	r2,-36(fp)
 144f104:	1004913a 	slli	r2,r2,4
 144f108:	e0fffd17 	ldw	r3,-12(fp)
 144f10c:	1885883a 	add	r2,r3,r2
 144f110:	e0fffe17 	ldw	r3,-8(fp)
 144f114:	19003517 	ldw	r4,212(r3)
 144f118:	e0fffe17 	ldw	r3,-8(fp)
 144f11c:	18c03417 	ldw	r3,208(r3)
 144f120:	20c7c83a 	sub	r3,r4,r3
 144f124:	18c00044 	addi	r3,r3,1
 144f128:	10c00115 	stw	r3,4(r2)
        region_info[number_of_regions].number_of_blocks = flash->dev.region_info[number_of_regions].region_size / flash->page_size;
 144f12c:	e0bff717 	ldw	r2,-36(fp)
 144f130:	1004913a 	slli	r2,r2,4
 144f134:	e0fffd17 	ldw	r3,-12(fp)
 144f138:	18a1883a 	add	r16,r3,r2
 144f13c:	e0fffe17 	ldw	r3,-8(fp)
 144f140:	e0bff717 	ldw	r2,-36(fp)
 144f144:	1004913a 	slli	r2,r2,4
 144f148:	1885883a 	add	r2,r3,r2
 144f14c:	10800e04 	addi	r2,r2,56
 144f150:	10c00017 	ldw	r3,0(r2)
 144f154:	e0bffe17 	ldw	r2,-8(fp)
 144f158:	10803f17 	ldw	r2,252(r2)
 144f15c:	1809883a 	mov	r4,r3
 144f160:	100b883a 	mov	r5,r2
 144f164:	144aaf00 	call	144aaf0 <__divsi3>
 144f168:	80800215 	stw	r2,8(r16)
        region_info[number_of_regions].block_size = flash->page_size;
 144f16c:	e0bff717 	ldw	r2,-36(fp)
 144f170:	1004913a 	slli	r2,r2,4
 144f174:	e0fffd17 	ldw	r3,-12(fp)
 144f178:	1885883a 	add	r2,r3,r2
 144f17c:	e0fffe17 	ldw	r3,-8(fp)
 144f180:	18c03f17 	ldw	r3,252(r3)
 144f184:	10c00315 	stw	r3,12(r2)

        number_of_regions++;
 144f188:	e0bff717 	ldw	r2,-36(fp)
 144f18c:	10800044 	addi	r2,r2,1
 144f190:	e0bff715 	stw	r2,-36(fp)
	}

    if ((flash->sector3_enabled == 1) && (sector3_status != ALTERA_ONCHIP_FLASH_STATUS_SECTOR3_UNAVAILABLE)) {
 144f194:	e0bffe17 	ldw	r2,-8(fp)
 144f198:	10803617 	ldw	r2,216(r2)
 144f19c:	10800058 	cmpnei	r2,r2,1
 144f1a0:	10002f1e 	bne	r2,zero,144f260 <altera_onchip_flash_init+0x310>
 144f1a4:	e0bffa17 	ldw	r2,-24(fp)
 144f1a8:	10802020 	cmpeqi	r2,r2,128
 144f1ac:	10002c1e 	bne	r2,zero,144f260 <altera_onchip_flash_init+0x310>

        region_info[number_of_regions].offset = flash->sector3_start_addr;
 144f1b0:	e0bff717 	ldw	r2,-36(fp)
 144f1b4:	1004913a 	slli	r2,r2,4
 144f1b8:	e0fffd17 	ldw	r3,-12(fp)
 144f1bc:	1885883a 	add	r2,r3,r2
 144f1c0:	e0fffe17 	ldw	r3,-8(fp)
 144f1c4:	18c03717 	ldw	r3,220(r3)
 144f1c8:	10c00015 	stw	r3,0(r2)
        region_info[number_of_regions].region_size = flash->sector3_end_addr - flash->sector3_start_addr + 1;
 144f1cc:	e0bff717 	ldw	r2,-36(fp)
 144f1d0:	1004913a 	slli	r2,r2,4
 144f1d4:	e0fffd17 	ldw	r3,-12(fp)
 144f1d8:	1885883a 	add	r2,r3,r2
 144f1dc:	e0fffe17 	ldw	r3,-8(fp)
 144f1e0:	19003817 	ldw	r4,224(r3)
 144f1e4:	e0fffe17 	ldw	r3,-8(fp)
 144f1e8:	18c03717 	ldw	r3,220(r3)
 144f1ec:	20c7c83a 	sub	r3,r4,r3
 144f1f0:	18c00044 	addi	r3,r3,1
 144f1f4:	10c00115 	stw	r3,4(r2)
        region_info[number_of_regions].number_of_blocks = flash->dev.region_info[number_of_regions].region_size / flash->page_size;
 144f1f8:	e0bff717 	ldw	r2,-36(fp)
 144f1fc:	1004913a 	slli	r2,r2,4
 144f200:	e0fffd17 	ldw	r3,-12(fp)
 144f204:	18a1883a 	add	r16,r3,r2
 144f208:	e0fffe17 	ldw	r3,-8(fp)
 144f20c:	e0bff717 	ldw	r2,-36(fp)
 144f210:	1004913a 	slli	r2,r2,4
 144f214:	1885883a 	add	r2,r3,r2
 144f218:	10800e04 	addi	r2,r2,56
 144f21c:	10c00017 	ldw	r3,0(r2)
 144f220:	e0bffe17 	ldw	r2,-8(fp)
 144f224:	10803f17 	ldw	r2,252(r2)
 144f228:	1809883a 	mov	r4,r3
 144f22c:	100b883a 	mov	r5,r2
 144f230:	144aaf00 	call	144aaf0 <__divsi3>
 144f234:	80800215 	stw	r2,8(r16)
        region_info[number_of_regions].block_size = flash->page_size;
 144f238:	e0bff717 	ldw	r2,-36(fp)
 144f23c:	1004913a 	slli	r2,r2,4
 144f240:	e0fffd17 	ldw	r3,-12(fp)
 144f244:	1885883a 	add	r2,r3,r2
 144f248:	e0fffe17 	ldw	r3,-8(fp)
 144f24c:	18c03f17 	ldw	r3,252(r3)
 144f250:	10c00315 	stw	r3,12(r2)

        number_of_regions++;
 144f254:	e0bff717 	ldw	r2,-36(fp)
 144f258:	10800044 	addi	r2,r2,1
 144f25c:	e0bff715 	stw	r2,-36(fp)
	}

	if ((flash->sector4_enabled == 1) && (sector4_status != ALTERA_ONCHIP_FLASH_STATUS_SECTOR4_UNAVAILABLE)) {
 144f260:	e0bffe17 	ldw	r2,-8(fp)
 144f264:	10803917 	ldw	r2,228(r2)
 144f268:	10800058 	cmpnei	r2,r2,1
 144f26c:	10002f1e 	bne	r2,zero,144f32c <altera_onchip_flash_init+0x3dc>
 144f270:	e0bffb17 	ldw	r2,-20(fp)
 144f274:	10804020 	cmpeqi	r2,r2,256
 144f278:	10002c1e 	bne	r2,zero,144f32c <altera_onchip_flash_init+0x3dc>

        region_info[number_of_regions].offset = flash->sector4_start_addr;
 144f27c:	e0bff717 	ldw	r2,-36(fp)
 144f280:	1004913a 	slli	r2,r2,4
 144f284:	e0fffd17 	ldw	r3,-12(fp)
 144f288:	1885883a 	add	r2,r3,r2
 144f28c:	e0fffe17 	ldw	r3,-8(fp)
 144f290:	18c03a17 	ldw	r3,232(r3)
 144f294:	10c00015 	stw	r3,0(r2)
        region_info[number_of_regions].region_size = flash->sector4_end_addr - flash->sector4_start_addr + 1;
 144f298:	e0bff717 	ldw	r2,-36(fp)
 144f29c:	1004913a 	slli	r2,r2,4
 144f2a0:	e0fffd17 	ldw	r3,-12(fp)
 144f2a4:	1885883a 	add	r2,r3,r2
 144f2a8:	e0fffe17 	ldw	r3,-8(fp)
 144f2ac:	19003b17 	ldw	r4,236(r3)
 144f2b0:	e0fffe17 	ldw	r3,-8(fp)
 144f2b4:	18c03a17 	ldw	r3,232(r3)
 144f2b8:	20c7c83a 	sub	r3,r4,r3
 144f2bc:	18c00044 	addi	r3,r3,1
 144f2c0:	10c00115 	stw	r3,4(r2)
        region_info[number_of_regions].number_of_blocks = flash->dev.region_info[number_of_regions].region_size / flash->page_size;
 144f2c4:	e0bff717 	ldw	r2,-36(fp)
 144f2c8:	1004913a 	slli	r2,r2,4
 144f2cc:	e0fffd17 	ldw	r3,-12(fp)
 144f2d0:	18a1883a 	add	r16,r3,r2
 144f2d4:	e0fffe17 	ldw	r3,-8(fp)
 144f2d8:	e0bff717 	ldw	r2,-36(fp)
 144f2dc:	1004913a 	slli	r2,r2,4
 144f2e0:	1885883a 	add	r2,r3,r2
 144f2e4:	10800e04 	addi	r2,r2,56
 144f2e8:	10c00017 	ldw	r3,0(r2)
 144f2ec:	e0bffe17 	ldw	r2,-8(fp)
 144f2f0:	10803f17 	ldw	r2,252(r2)
 144f2f4:	1809883a 	mov	r4,r3
 144f2f8:	100b883a 	mov	r5,r2
 144f2fc:	144aaf00 	call	144aaf0 <__divsi3>
 144f300:	80800215 	stw	r2,8(r16)
        region_info[number_of_regions].block_size = flash->page_size;
 144f304:	e0bff717 	ldw	r2,-36(fp)
 144f308:	1004913a 	slli	r2,r2,4
 144f30c:	e0fffd17 	ldw	r3,-12(fp)
 144f310:	1885883a 	add	r2,r3,r2
 144f314:	e0fffe17 	ldw	r3,-8(fp)
 144f318:	18c03f17 	ldw	r3,252(r3)
 144f31c:	10c00315 	stw	r3,12(r2)

        number_of_regions++;
 144f320:	e0bff717 	ldw	r2,-36(fp)
 144f324:	10800044 	addi	r2,r2,1
 144f328:	e0bff715 	stw	r2,-36(fp)
	}

    if ((flash->sector5_enabled == 1) && (sector5_status != ALTERA_ONCHIP_FLASH_STATUS_SECTOR5_UNAVAILABLE)) {
 144f32c:	e0bffe17 	ldw	r2,-8(fp)
 144f330:	10803c17 	ldw	r2,240(r2)
 144f334:	10800058 	cmpnei	r2,r2,1
 144f338:	10002f1e 	bne	r2,zero,144f3f8 <altera_onchip_flash_init+0x4a8>
 144f33c:	e0bffc17 	ldw	r2,-16(fp)
 144f340:	10808020 	cmpeqi	r2,r2,512
 144f344:	10002c1e 	bne	r2,zero,144f3f8 <altera_onchip_flash_init+0x4a8>

        region_info[number_of_regions].offset = flash->sector5_start_addr;
 144f348:	e0bff717 	ldw	r2,-36(fp)
 144f34c:	1004913a 	slli	r2,r2,4
 144f350:	e0fffd17 	ldw	r3,-12(fp)
 144f354:	1885883a 	add	r2,r3,r2
 144f358:	e0fffe17 	ldw	r3,-8(fp)
 144f35c:	18c03d17 	ldw	r3,244(r3)
 144f360:	10c00015 	stw	r3,0(r2)
        region_info[number_of_regions].region_size = flash->sector5_end_addr - flash->sector5_start_addr + 1;
 144f364:	e0bff717 	ldw	r2,-36(fp)
 144f368:	1004913a 	slli	r2,r2,4
 144f36c:	e0fffd17 	ldw	r3,-12(fp)
 144f370:	1885883a 	add	r2,r3,r2
 144f374:	e0fffe17 	ldw	r3,-8(fp)
 144f378:	19003e17 	ldw	r4,248(r3)
 144f37c:	e0fffe17 	ldw	r3,-8(fp)
 144f380:	18c03d17 	ldw	r3,244(r3)
 144f384:	20c7c83a 	sub	r3,r4,r3
 144f388:	18c00044 	addi	r3,r3,1
 144f38c:	10c00115 	stw	r3,4(r2)
        region_info[number_of_regions].number_of_blocks = flash->dev.region_info[number_of_regions].region_size / flash->page_size;
 144f390:	e0bff717 	ldw	r2,-36(fp)
 144f394:	1004913a 	slli	r2,r2,4
 144f398:	e0fffd17 	ldw	r3,-12(fp)
 144f39c:	18a1883a 	add	r16,r3,r2
 144f3a0:	e0fffe17 	ldw	r3,-8(fp)
 144f3a4:	e0bff717 	ldw	r2,-36(fp)
 144f3a8:	1004913a 	slli	r2,r2,4
 144f3ac:	1885883a 	add	r2,r3,r2
 144f3b0:	10800e04 	addi	r2,r2,56
 144f3b4:	10c00017 	ldw	r3,0(r2)
 144f3b8:	e0bffe17 	ldw	r2,-8(fp)
 144f3bc:	10803f17 	ldw	r2,252(r2)
 144f3c0:	1809883a 	mov	r4,r3
 144f3c4:	100b883a 	mov	r5,r2
 144f3c8:	144aaf00 	call	144aaf0 <__divsi3>
 144f3cc:	80800215 	stw	r2,8(r16)
        region_info[number_of_regions].block_size = flash->page_size;
 144f3d0:	e0bff717 	ldw	r2,-36(fp)
 144f3d4:	1004913a 	slli	r2,r2,4
 144f3d8:	e0fffd17 	ldw	r3,-12(fp)
 144f3dc:	1885883a 	add	r2,r3,r2
 144f3e0:	e0fffe17 	ldw	r3,-8(fp)
 144f3e4:	18c03f17 	ldw	r3,252(r3)
 144f3e8:	10c00315 	stw	r3,12(r2)

        number_of_regions++;
 144f3ec:	e0bff717 	ldw	r2,-36(fp)
 144f3f0:	10800044 	addi	r2,r2,1
 144f3f4:	e0bff715 	stw	r2,-36(fp)
    }

    /* Update number of regions. */
    flash->dev.number_of_regions = number_of_regions;
 144f3f8:	e0bffe17 	ldw	r2,-8(fp)
 144f3fc:	e0fff717 	ldw	r3,-36(fp)
 144f400:	10c00c15 	stw	r3,48(r2)

    /*
    *  Register this device as a valid flash device type
    */
    alt_flash_device_register(&(flash->dev));
 144f404:	e0bffe17 	ldw	r2,-8(fp)
 144f408:	1009883a 	mov	r4,r2
 144f40c:	144e6ac0 	call	144e6ac <alt_flash_device_register>
}
 144f410:	e6ffff04 	addi	sp,fp,-4
 144f414:	dfc00217 	ldw	ra,8(sp)
 144f418:	df000117 	ldw	fp,4(sp)
 144f41c:	dc000017 	ldw	r16,0(sp)
 144f420:	dec00304 	addi	sp,sp,12
 144f424:	f800283a 	ret

0144f428 <alt_onchip_flash_poll_for_status_to_go_idle>:
**/
int alt_onchip_flash_poll_for_status_to_go_idle
(
    alt_onchip_flash_dev *flash
)
{
 144f428:	defffb04 	addi	sp,sp,-20
 144f42c:	df000415 	stw	fp,16(sp)
 144f430:	df000404 	addi	fp,sp,16
 144f434:	e13fff15 	stw	r4,-4(fp)
    int ret_code = 0;
 144f438:	e03ffc15 	stw	zero,-16(fp)
    int timeout = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
 144f43c:	00817db4 	movhi	r2,1526
 144f440:	10b84004 	addi	r2,r2,-7936
 144f444:	e0bffe15 	stw	r2,-8(fp)
    int count_down = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
 144f448:	00817db4 	movhi	r2,1526
 144f44c:	10b84004 	addi	r2,r2,-7936
 144f450:	e0bffd15 	stw	r2,-12(fp)

    while (
 144f454:	00000a06 	br	144f480 <alt_onchip_flash_poll_for_status_to_go_idle+0x58>
        (IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) &
              ALTERA_ONCHIP_FLASH_STATUS_BUSY_MSK
        ) !=  ALTERA_ONCHIP_FLASH_STATUS_BUSY_IDLE
    ) {
        /* If timeout value is zero, it will never timeout. */
        if (timeout != 0) {
 144f458:	e0bffe17 	ldw	r2,-8(fp)
 144f45c:	10000826 	beq	r2,zero,144f480 <alt_onchip_flash_poll_for_status_to_go_idle+0x58>
            count_down--;
 144f460:	e0bffd17 	ldw	r2,-12(fp)
 144f464:	10bfffc4 	addi	r2,r2,-1
 144f468:	e0bffd15 	stw	r2,-12(fp)
            if (count_down == 0) {
 144f46c:	e0bffd17 	ldw	r2,-12(fp)
 144f470:	1000031e 	bne	r2,zero,144f480 <alt_onchip_flash_poll_for_status_to_go_idle+0x58>
                /* Timeout */
                ret_code = -ETIMEDOUT;
 144f474:	00bfe304 	movi	r2,-116
 144f478:	e0bffc15 	stw	r2,-16(fp)
                break;
 144f47c:	00000506 	br	144f494 <alt_onchip_flash_poll_for_status_to_go_idle+0x6c>
    int ret_code = 0;
    int timeout = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
    int count_down = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;

    while (
        (IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) &
 144f480:	e0bfff17 	ldw	r2,-4(fp)
 144f484:	10802f17 	ldw	r2,188(r2)
 144f488:	10800037 	ldwio	r2,0(r2)
 144f48c:	108000cc 	andi	r2,r2,3
{
    int ret_code = 0;
    int timeout = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
    int count_down = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;

    while (
 144f490:	103ff11e 	bne	r2,zero,144f458 <__alt_data_end+0xfffe9c58>
                break;
            }
        }
    }

    return ret_code;
 144f494:	e0bffc17 	ldw	r2,-16(fp)
}
 144f498:	e037883a 	mov	sp,fp
 144f49c:	df000017 	ldw	fp,0(sp)
 144f4a0:	dec00104 	addi	sp,sp,4
 144f4a4:	f800283a 	ret

0144f4a8 <alt_onchip_flash_poll_for_status_erase_passed>:
**/
int alt_onchip_flash_poll_for_status_erase_passed
(
    alt_onchip_flash_dev *flash
)
{
 144f4a8:	defffb04 	addi	sp,sp,-20
 144f4ac:	df000415 	stw	fp,16(sp)
 144f4b0:	df000404 	addi	fp,sp,16
 144f4b4:	e13fff15 	stw	r4,-4(fp)
    int ret_code = 0;
 144f4b8:	e03ffc15 	stw	zero,-16(fp)
    int timeout = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
 144f4bc:	00817db4 	movhi	r2,1526
 144f4c0:	10b84004 	addi	r2,r2,-7936
 144f4c4:	e0bffe15 	stw	r2,-8(fp)
    int count_down = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
 144f4c8:	00817db4 	movhi	r2,1526
 144f4cc:	10b84004 	addi	r2,r2,-7936
 144f4d0:	e0bffd15 	stw	r2,-12(fp)

    while (
 144f4d4:	00000a06 	br	144f500 <alt_onchip_flash_poll_for_status_erase_passed+0x58>
        (IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) &
              ALTERA_ONCHIP_FLASH_STATUS_ERASE_MSK
        ) !=  ALTERA_ONCHIP_FLASH_STATUS_ERASE_PASSED
    ) {
        /* If timeout value is zero, it will never timeout. */
        if (timeout != 0) {
 144f4d8:	e0bffe17 	ldw	r2,-8(fp)
 144f4dc:	10000826 	beq	r2,zero,144f500 <alt_onchip_flash_poll_for_status_erase_passed+0x58>
            count_down--;
 144f4e0:	e0bffd17 	ldw	r2,-12(fp)
 144f4e4:	10bfffc4 	addi	r2,r2,-1
 144f4e8:	e0bffd15 	stw	r2,-12(fp)
            if (count_down == 0) {
 144f4ec:	e0bffd17 	ldw	r2,-12(fp)
 144f4f0:	1000031e 	bne	r2,zero,144f500 <alt_onchip_flash_poll_for_status_erase_passed+0x58>
                /* Timeout */
                ret_code = -ETIMEDOUT;
 144f4f4:	00bfe304 	movi	r2,-116
 144f4f8:	e0bffc15 	stw	r2,-16(fp)
                break;
 144f4fc:	00000506 	br	144f514 <alt_onchip_flash_poll_for_status_erase_passed+0x6c>
    int ret_code = 0;
    int timeout = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
    int count_down = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;

    while (
        (IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) &
 144f500:	e0bfff17 	ldw	r2,-4(fp)
 144f504:	10802f17 	ldw	r2,188(r2)
 144f508:	10800037 	ldwio	r2,0(r2)
 144f50c:	1080040c 	andi	r2,r2,16
{
    int ret_code = 0;
    int timeout = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
    int count_down = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;

    while (
 144f510:	103ff126 	beq	r2,zero,144f4d8 <__alt_data_end+0xfffe9cd8>
                break;
            }
        }
    }

    return ret_code;
 144f514:	e0bffc17 	ldw	r2,-16(fp)
}
 144f518:	e037883a 	mov	sp,fp
 144f51c:	df000017 	ldw	fp,0(sp)
 144f520:	dec00104 	addi	sp,sp,4
 144f524:	f800283a 	ret

0144f528 <alt_onchip_flash_poll_for_status_write_passed>:
**/
int alt_onchip_flash_poll_for_status_write_passed
(
    alt_onchip_flash_dev *flash
)
{
 144f528:	defffb04 	addi	sp,sp,-20
 144f52c:	df000415 	stw	fp,16(sp)
 144f530:	df000404 	addi	fp,sp,16
 144f534:	e13fff15 	stw	r4,-4(fp)
    int ret_code = 0;
 144f538:	e03ffc15 	stw	zero,-16(fp)
    int timeout = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
 144f53c:	00817db4 	movhi	r2,1526
 144f540:	10b84004 	addi	r2,r2,-7936
 144f544:	e0bffe15 	stw	r2,-8(fp)
    int count_down = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
 144f548:	00817db4 	movhi	r2,1526
 144f54c:	10b84004 	addi	r2,r2,-7936
 144f550:	e0bffd15 	stw	r2,-12(fp)

    while (
 144f554:	00000a06 	br	144f580 <alt_onchip_flash_poll_for_status_write_passed+0x58>
        (IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) &
              ALTERA_ONCHIP_FLASH_STATUS_WRITE_MSK
        ) !=  ALTERA_ONCHIP_FLASH_STATUS_WRITE_PASSED
    ) {
        /* If timeout value is zero, it will never timeout. */
        if (timeout != 0) {
 144f558:	e0bffe17 	ldw	r2,-8(fp)
 144f55c:	10000826 	beq	r2,zero,144f580 <alt_onchip_flash_poll_for_status_write_passed+0x58>
            count_down--;
 144f560:	e0bffd17 	ldw	r2,-12(fp)
 144f564:	10bfffc4 	addi	r2,r2,-1
 144f568:	e0bffd15 	stw	r2,-12(fp)
            if (count_down == 0) {
 144f56c:	e0bffd17 	ldw	r2,-12(fp)
 144f570:	1000031e 	bne	r2,zero,144f580 <alt_onchip_flash_poll_for_status_write_passed+0x58>
                /* Timeout */
                ret_code = -ETIMEDOUT;
 144f574:	00bfe304 	movi	r2,-116
 144f578:	e0bffc15 	stw	r2,-16(fp)
                break;
 144f57c:	00000506 	br	144f594 <alt_onchip_flash_poll_for_status_write_passed+0x6c>
    int ret_code = 0;
    int timeout = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
    int count_down = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;

    while (
        (IORD_ALTERA_ONCHIP_FLASH_STATUS(flash->csr_base) &
 144f580:	e0bfff17 	ldw	r2,-4(fp)
 144f584:	10802f17 	ldw	r2,188(r2)
 144f588:	10800037 	ldwio	r2,0(r2)
 144f58c:	1080020c 	andi	r2,r2,8
{
    int ret_code = 0;
    int timeout = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;
    int count_down = ALTERA_ONCHIP_FLASH_STATUS_BIT_POLLING_TIMEOUT_VALUE;

    while (
 144f590:	103ff126 	beq	r2,zero,144f558 <__alt_data_end+0xfffe9d58>
                break;
            }
        }
    }

    return ret_code;
 144f594:	e0bffc17 	ldw	r2,-16(fp)
}
 144f598:	e037883a 	mov	sp,fp
 144f59c:	df000017 	ldw	fp,0(sp)
 144f5a0:	dec00104 	addi	sp,sp,4
 144f5a4:	f800283a 	ret

0144f5a8 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 144f5a8:	defffa04 	addi	sp,sp,-24
 144f5ac:	dfc00515 	stw	ra,20(sp)
 144f5b0:	df000415 	stw	fp,16(sp)
 144f5b4:	df000404 	addi	fp,sp,16
 144f5b8:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 144f5bc:	00800244 	movi	r2,9
 144f5c0:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 144f5c4:	e13ffd17 	ldw	r4,-12(fp)
 144f5c8:	014003f4 	movhi	r5,15
 144f5cc:	29509004 	addi	r5,r5,16960
 144f5d0:	1440a480 	call	1440a48 <__mulsi3>
 144f5d4:	01013174 	movhi	r4,1221
 144f5d8:	212d0004 	addi	r4,r4,-19456
 144f5dc:	100b883a 	mov	r5,r2
 144f5e0:	144aba00 	call	144aba0 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 144f5e4:	01200034 	movhi	r4,32768
 144f5e8:	213fffc4 	addi	r4,r4,-1
 144f5ec:	100b883a 	mov	r5,r2
 144f5f0:	144aba00 	call	144aba0 <__udivsi3>
 144f5f4:	e13fff17 	ldw	r4,-4(fp)
 144f5f8:	100b883a 	mov	r5,r2
 144f5fc:	144aba00 	call	144aba0 <__udivsi3>
 144f600:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 144f604:	e0bffe17 	ldw	r2,-8(fp)
 144f608:	10002a26 	beq	r2,zero,144f6b4 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 144f60c:	e03ffc15 	stw	zero,-16(fp)
 144f610:	00001706 	br	144f670 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 144f614:	00a00034 	movhi	r2,32768
 144f618:	10bfffc4 	addi	r2,r2,-1
 144f61c:	10bfffc4 	addi	r2,r2,-1
 144f620:	103ffe1e 	bne	r2,zero,144f61c <__alt_data_end+0xfffe9e1c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 144f624:	e13ffd17 	ldw	r4,-12(fp)
 144f628:	014003f4 	movhi	r5,15
 144f62c:	29509004 	addi	r5,r5,16960
 144f630:	1440a480 	call	1440a48 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 144f634:	01013174 	movhi	r4,1221
 144f638:	212d0004 	addi	r4,r4,-19456
 144f63c:	100b883a 	mov	r5,r2
 144f640:	144aba00 	call	144aba0 <__udivsi3>
 144f644:	01200034 	movhi	r4,32768
 144f648:	213fffc4 	addi	r4,r4,-1
 144f64c:	100b883a 	mov	r5,r2
 144f650:	144aba00 	call	144aba0 <__udivsi3>
 144f654:	1007883a 	mov	r3,r2
 144f658:	e0bfff17 	ldw	r2,-4(fp)
 144f65c:	10c5c83a 	sub	r2,r2,r3
 144f660:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 144f664:	e0bffc17 	ldw	r2,-16(fp)
 144f668:	10800044 	addi	r2,r2,1
 144f66c:	e0bffc15 	stw	r2,-16(fp)
 144f670:	e0fffc17 	ldw	r3,-16(fp)
 144f674:	e0bffe17 	ldw	r2,-8(fp)
 144f678:	18bfe616 	blt	r3,r2,144f614 <__alt_data_end+0xfffe9e14>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 144f67c:	e13ffd17 	ldw	r4,-12(fp)
 144f680:	014003f4 	movhi	r5,15
 144f684:	29509004 	addi	r5,r5,16960
 144f688:	1440a480 	call	1440a48 <__mulsi3>
 144f68c:	01013174 	movhi	r4,1221
 144f690:	212d0004 	addi	r4,r4,-19456
 144f694:	100b883a 	mov	r5,r2
 144f698:	144aba00 	call	144aba0 <__udivsi3>
 144f69c:	1009883a 	mov	r4,r2
 144f6a0:	e17fff17 	ldw	r5,-4(fp)
 144f6a4:	1440a480 	call	1440a48 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 144f6a8:	10bfffc4 	addi	r2,r2,-1
 144f6ac:	103ffe1e 	bne	r2,zero,144f6a8 <__alt_data_end+0xfffe9ea8>
 144f6b0:	00000d06 	br	144f6e8 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 144f6b4:	e13ffd17 	ldw	r4,-12(fp)
 144f6b8:	014003f4 	movhi	r5,15
 144f6bc:	29509004 	addi	r5,r5,16960
 144f6c0:	1440a480 	call	1440a48 <__mulsi3>
 144f6c4:	01013174 	movhi	r4,1221
 144f6c8:	212d0004 	addi	r4,r4,-19456
 144f6cc:	100b883a 	mov	r5,r2
 144f6d0:	144aba00 	call	144aba0 <__udivsi3>
 144f6d4:	1009883a 	mov	r4,r2
 144f6d8:	e17fff17 	ldw	r5,-4(fp)
 144f6dc:	1440a480 	call	1440a48 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 144f6e0:	10bfffc4 	addi	r2,r2,-1
 144f6e4:	00bffe16 	blt	zero,r2,144f6e0 <__alt_data_end+0xfffe9ee0>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 144f6e8:	0005883a 	mov	r2,zero
}
 144f6ec:	e037883a 	mov	sp,fp
 144f6f0:	dfc00117 	ldw	ra,4(sp)
 144f6f4:	df000017 	ldw	fp,0(sp)
 144f6f8:	dec00204 	addi	sp,sp,8
 144f6fc:	f800283a 	ret

0144f700 <alt_dcache_flush>:
 *
 * Any dirty lines in the data cache are written back to memory.
 */

void alt_dcache_flush (void* start, alt_u32 len)
{
 144f700:	defffd04 	addi	sp,sp,-12
 144f704:	df000215 	stw	fp,8(sp)
 144f708:	df000204 	addi	fp,sp,8
 144f70c:	e13ffe15 	stw	r4,-8(fp)
 144f710:	e17fff15 	stw	r5,-4(fp)
  {
    ALT_FLUSH_DATA(i);
  }

#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 144f714:	e037883a 	mov	sp,fp
 144f718:	df000017 	ldw	fp,0(sp)
 144f71c:	dec00104 	addi	sp,sp,4
 144f720:	f800283a 	ret

0144f724 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 144f724:	deffff04 	addi	sp,sp,-4
 144f728:	df000015 	stw	fp,0(sp)
 144f72c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 144f730:	e037883a 	mov	sp,fp
 144f734:	df000017 	ldw	fp,0(sp)
 144f738:	dec00104 	addi	sp,sp,4
 144f73c:	f800283a 	ret

0144f740 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 144f740:	defffe04 	addi	sp,sp,-8
 144f744:	dfc00115 	stw	ra,4(sp)
 144f748:	df000015 	stw	fp,0(sp)
 144f74c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 144f750:	00805174 	movhi	r2,325
 144f754:	1085a404 	addi	r2,r2,5776
 144f758:	10800017 	ldw	r2,0(r2)
 144f75c:	10000526 	beq	r2,zero,144f774 <alt_get_errno+0x34>
 144f760:	00805174 	movhi	r2,325
 144f764:	1085a404 	addi	r2,r2,5776
 144f768:	10800017 	ldw	r2,0(r2)
 144f76c:	103ee83a 	callr	r2
 144f770:	00000206 	br	144f77c <alt_get_errno+0x3c>
 144f774:	00805174 	movhi	r2,325
 144f778:	1088b804 	addi	r2,r2,8928
}
 144f77c:	e037883a 	mov	sp,fp
 144f780:	dfc00117 	ldw	ra,4(sp)
 144f784:	df000017 	ldw	fp,0(sp)
 144f788:	dec00204 	addi	sp,sp,8
 144f78c:	f800283a 	ret

0144f790 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 144f790:	defffa04 	addi	sp,sp,-24
 144f794:	dfc00515 	stw	ra,20(sp)
 144f798:	df000415 	stw	fp,16(sp)
 144f79c:	df000404 	addi	fp,sp,16
 144f7a0:	e13ffe15 	stw	r4,-8(fp)
 144f7a4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 144f7a8:	e0bffe17 	ldw	r2,-8(fp)
 144f7ac:	10000326 	beq	r2,zero,144f7bc <alt_dev_llist_insert+0x2c>
 144f7b0:	e0bffe17 	ldw	r2,-8(fp)
 144f7b4:	10800217 	ldw	r2,8(r2)
 144f7b8:	1000061e 	bne	r2,zero,144f7d4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 144f7bc:	144f7400 	call	144f740 <alt_get_errno>
 144f7c0:	1007883a 	mov	r3,r2
 144f7c4:	00800584 	movi	r2,22
 144f7c8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 144f7cc:	00bffa84 	movi	r2,-22
 144f7d0:	00001306 	br	144f820 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 144f7d4:	e0bffe17 	ldw	r2,-8(fp)
 144f7d8:	e0ffff17 	ldw	r3,-4(fp)
 144f7dc:	e0fffc15 	stw	r3,-16(fp)
 144f7e0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 144f7e4:	e0bffd17 	ldw	r2,-12(fp)
 144f7e8:	e0fffc17 	ldw	r3,-16(fp)
 144f7ec:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 144f7f0:	e0bffc17 	ldw	r2,-16(fp)
 144f7f4:	10c00017 	ldw	r3,0(r2)
 144f7f8:	e0bffd17 	ldw	r2,-12(fp)
 144f7fc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 144f800:	e0bffc17 	ldw	r2,-16(fp)
 144f804:	10800017 	ldw	r2,0(r2)
 144f808:	e0fffd17 	ldw	r3,-12(fp)
 144f80c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 144f810:	e0bffc17 	ldw	r2,-16(fp)
 144f814:	e0fffd17 	ldw	r3,-12(fp)
 144f818:	10c00015 	stw	r3,0(r2)

  return 0;  
 144f81c:	0005883a 	mov	r2,zero
}
 144f820:	e037883a 	mov	sp,fp
 144f824:	dfc00117 	ldw	ra,4(sp)
 144f828:	df000017 	ldw	fp,0(sp)
 144f82c:	dec00204 	addi	sp,sp,8
 144f830:	f800283a 	ret

0144f834 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 144f834:	defffa04 	addi	sp,sp,-24
 144f838:	dfc00515 	stw	ra,20(sp)
 144f83c:	df000415 	stw	fp,16(sp)
 144f840:	df000404 	addi	fp,sp,16
 144f844:	e13ffe15 	stw	r4,-8(fp)
 144f848:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 144f84c:	e0bfff17 	ldw	r2,-4(fp)
 144f850:	10800017 	ldw	r2,0(r2)
 144f854:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 144f858:	e13ffe17 	ldw	r4,-8(fp)
 144f85c:	1440ba40 	call	1440ba4 <strlen>
 144f860:	10800044 	addi	r2,r2,1
 144f864:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 144f868:	00000d06 	br	144f8a0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 144f86c:	e0bffc17 	ldw	r2,-16(fp)
 144f870:	10c00217 	ldw	r3,8(r2)
 144f874:	e0bffd17 	ldw	r2,-12(fp)
 144f878:	1809883a 	mov	r4,r3
 144f87c:	e17ffe17 	ldw	r5,-8(fp)
 144f880:	100d883a 	mov	r6,r2
 144f884:	14504dc0 	call	14504dc <memcmp>
 144f888:	1000021e 	bne	r2,zero,144f894 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 144f88c:	e0bffc17 	ldw	r2,-16(fp)
 144f890:	00000706 	br	144f8b0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 144f894:	e0bffc17 	ldw	r2,-16(fp)
 144f898:	10800017 	ldw	r2,0(r2)
 144f89c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 144f8a0:	e0fffc17 	ldw	r3,-16(fp)
 144f8a4:	e0bfff17 	ldw	r2,-4(fp)
 144f8a8:	18bff01e 	bne	r3,r2,144f86c <__alt_data_end+0xfffea06c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 144f8ac:	0005883a 	mov	r2,zero
}
 144f8b0:	e037883a 	mov	sp,fp
 144f8b4:	dfc00117 	ldw	ra,4(sp)
 144f8b8:	df000017 	ldw	fp,0(sp)
 144f8bc:	dec00204 	addi	sp,sp,8
 144f8c0:	f800283a 	ret

0144f8c4 <alt_flash_open_dev>:
#include "priv/alt_file.h"

ALT_LLIST_HEAD(alt_flash_dev_list);

alt_flash_fd* alt_flash_open_dev(const char* name)
{
 144f8c4:	defffc04 	addi	sp,sp,-16
 144f8c8:	dfc00315 	stw	ra,12(sp)
 144f8cc:	df000215 	stw	fp,8(sp)
 144f8d0:	df000204 	addi	fp,sp,8
 144f8d4:	e13fff15 	stw	r4,-4(fp)
  alt_flash_dev* dev = (alt_flash_dev*)alt_find_dev(name, &alt_flash_dev_list);
 144f8d8:	e13fff17 	ldw	r4,-4(fp)
 144f8dc:	d1601104 	addi	r5,gp,-32700
 144f8e0:	144f8340 	call	144f834 <alt_find_dev>
 144f8e4:	e0bffe15 	stw	r2,-8(fp)

  if ((dev) && dev->open)
 144f8e8:	e0bffe17 	ldw	r2,-8(fp)
 144f8ec:	10000926 	beq	r2,zero,144f914 <alt_flash_open_dev+0x50>
 144f8f0:	e0bffe17 	ldw	r2,-8(fp)
 144f8f4:	10800317 	ldw	r2,12(r2)
 144f8f8:	10000626 	beq	r2,zero,144f914 <alt_flash_open_dev+0x50>
  {
    return dev->open(dev, name);
 144f8fc:	e0bffe17 	ldw	r2,-8(fp)
 144f900:	10800317 	ldw	r2,12(r2)
 144f904:	e13ffe17 	ldw	r4,-8(fp)
 144f908:	e17fff17 	ldw	r5,-4(fp)
 144f90c:	103ee83a 	callr	r2
 144f910:	00000106 	br	144f918 <alt_flash_open_dev+0x54>
  }

  return dev;
 144f914:	e0bffe17 	ldw	r2,-8(fp)
}
 144f918:	e037883a 	mov	sp,fp
 144f91c:	dfc00117 	ldw	ra,4(sp)
 144f920:	df000017 	ldw	fp,0(sp)
 144f924:	dec00204 	addi	sp,sp,8
 144f928:	f800283a 	ret

0144f92c <alt_flash_close_dev>:

void alt_flash_close_dev(alt_flash_fd* fd)
{
 144f92c:	defffd04 	addi	sp,sp,-12
 144f930:	dfc00215 	stw	ra,8(sp)
 144f934:	df000115 	stw	fp,4(sp)
 144f938:	df000104 	addi	fp,sp,4
 144f93c:	e13fff15 	stw	r4,-4(fp)
  if (fd && fd->close)
 144f940:	e0bfff17 	ldw	r2,-4(fp)
 144f944:	10000726 	beq	r2,zero,144f964 <alt_flash_close_dev+0x38>
 144f948:	e0bfff17 	ldw	r2,-4(fp)
 144f94c:	10800417 	ldw	r2,16(r2)
 144f950:	10000426 	beq	r2,zero,144f964 <alt_flash_close_dev+0x38>
  {
    fd->close(fd);
 144f954:	e0bfff17 	ldw	r2,-4(fp)
 144f958:	10800417 	ldw	r2,16(r2)
 144f95c:	e13fff17 	ldw	r4,-4(fp)
 144f960:	103ee83a 	callr	r2
  }
  return;
 144f964:	0001883a 	nop
}
 144f968:	e037883a 	mov	sp,fp
 144f96c:	dfc00117 	ldw	ra,4(sp)
 144f970:	df000017 	ldw	fp,0(sp)
 144f974:	dec00204 	addi	sp,sp,8
 144f978:	f800283a 	ret

0144f97c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 144f97c:	deffff04 	addi	sp,sp,-4
 144f980:	df000015 	stw	fp,0(sp)
 144f984:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 144f988:	e037883a 	mov	sp,fp
 144f98c:	df000017 	ldw	fp,0(sp)
 144f990:	dec00104 	addi	sp,sp,4
 144f994:	f800283a 	ret

0144f998 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 144f998:	defff904 	addi	sp,sp,-28
 144f99c:	dfc00615 	stw	ra,24(sp)
 144f9a0:	df000515 	stw	fp,20(sp)
 144f9a4:	df000504 	addi	fp,sp,20
 144f9a8:	e13ffc15 	stw	r4,-16(fp)
 144f9ac:	e17ffd15 	stw	r5,-12(fp)
 144f9b0:	e1bffe15 	stw	r6,-8(fp)
 144f9b4:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 144f9b8:	e0800217 	ldw	r2,8(fp)
 144f9bc:	d8800015 	stw	r2,0(sp)
 144f9c0:	e13ffc17 	ldw	r4,-16(fp)
 144f9c4:	e17ffd17 	ldw	r5,-12(fp)
 144f9c8:	e1bffe17 	ldw	r6,-8(fp)
 144f9cc:	e1ffff17 	ldw	r7,-4(fp)
 144f9d0:	144fb780 	call	144fb78 <alt_iic_isr_register>
}  
 144f9d4:	e037883a 	mov	sp,fp
 144f9d8:	dfc00117 	ldw	ra,4(sp)
 144f9dc:	df000017 	ldw	fp,0(sp)
 144f9e0:	dec00204 	addi	sp,sp,8
 144f9e4:	f800283a 	ret

0144f9e8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 144f9e8:	defff904 	addi	sp,sp,-28
 144f9ec:	df000615 	stw	fp,24(sp)
 144f9f0:	df000604 	addi	fp,sp,24
 144f9f4:	e13ffe15 	stw	r4,-8(fp)
 144f9f8:	e17fff15 	stw	r5,-4(fp)
 144f9fc:	e0bfff17 	ldw	r2,-4(fp)
 144fa00:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 144fa04:	0005303a 	rdctl	r2,status
 144fa08:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 144fa0c:	e0fffb17 	ldw	r3,-20(fp)
 144fa10:	00bfff84 	movi	r2,-2
 144fa14:	1884703a 	and	r2,r3,r2
 144fa18:	1001703a 	wrctl	status,r2
  
  return context;
 144fa1c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 144fa20:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 144fa24:	e0bffa17 	ldw	r2,-24(fp)
 144fa28:	00c00044 	movi	r3,1
 144fa2c:	1884983a 	sll	r2,r3,r2
 144fa30:	1007883a 	mov	r3,r2
 144fa34:	00805174 	movhi	r2,325
 144fa38:	1088bc04 	addi	r2,r2,8944
 144fa3c:	10800017 	ldw	r2,0(r2)
 144fa40:	1886b03a 	or	r3,r3,r2
 144fa44:	00805174 	movhi	r2,325
 144fa48:	1088bc04 	addi	r2,r2,8944
 144fa4c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 144fa50:	00805174 	movhi	r2,325
 144fa54:	1088bc04 	addi	r2,r2,8944
 144fa58:	10800017 	ldw	r2,0(r2)
 144fa5c:	100170fa 	wrctl	ienable,r2
 144fa60:	e0bffc17 	ldw	r2,-16(fp)
 144fa64:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 144fa68:	e0bffd17 	ldw	r2,-12(fp)
 144fa6c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 144fa70:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 144fa74:	0001883a 	nop
}
 144fa78:	e037883a 	mov	sp,fp
 144fa7c:	df000017 	ldw	fp,0(sp)
 144fa80:	dec00104 	addi	sp,sp,4
 144fa84:	f800283a 	ret

0144fa88 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 144fa88:	defff904 	addi	sp,sp,-28
 144fa8c:	df000615 	stw	fp,24(sp)
 144fa90:	df000604 	addi	fp,sp,24
 144fa94:	e13ffe15 	stw	r4,-8(fp)
 144fa98:	e17fff15 	stw	r5,-4(fp)
 144fa9c:	e0bfff17 	ldw	r2,-4(fp)
 144faa0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 144faa4:	0005303a 	rdctl	r2,status
 144faa8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 144faac:	e0fffb17 	ldw	r3,-20(fp)
 144fab0:	00bfff84 	movi	r2,-2
 144fab4:	1884703a 	and	r2,r3,r2
 144fab8:	1001703a 	wrctl	status,r2
  
  return context;
 144fabc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 144fac0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 144fac4:	e0bffa17 	ldw	r2,-24(fp)
 144fac8:	00c00044 	movi	r3,1
 144facc:	1884983a 	sll	r2,r3,r2
 144fad0:	0084303a 	nor	r2,zero,r2
 144fad4:	1007883a 	mov	r3,r2
 144fad8:	00805174 	movhi	r2,325
 144fadc:	1088bc04 	addi	r2,r2,8944
 144fae0:	10800017 	ldw	r2,0(r2)
 144fae4:	1886703a 	and	r3,r3,r2
 144fae8:	00805174 	movhi	r2,325
 144faec:	1088bc04 	addi	r2,r2,8944
 144faf0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 144faf4:	00805174 	movhi	r2,325
 144faf8:	1088bc04 	addi	r2,r2,8944
 144fafc:	10800017 	ldw	r2,0(r2)
 144fb00:	100170fa 	wrctl	ienable,r2
 144fb04:	e0bffc17 	ldw	r2,-16(fp)
 144fb08:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 144fb0c:	e0bffd17 	ldw	r2,-12(fp)
 144fb10:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 144fb14:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 144fb18:	0001883a 	nop
}
 144fb1c:	e037883a 	mov	sp,fp
 144fb20:	df000017 	ldw	fp,0(sp)
 144fb24:	dec00104 	addi	sp,sp,4
 144fb28:	f800283a 	ret

0144fb2c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 144fb2c:	defffc04 	addi	sp,sp,-16
 144fb30:	df000315 	stw	fp,12(sp)
 144fb34:	df000304 	addi	fp,sp,12
 144fb38:	e13ffe15 	stw	r4,-8(fp)
 144fb3c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 144fb40:	000530fa 	rdctl	r2,ienable
 144fb44:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 144fb48:	e0bfff17 	ldw	r2,-4(fp)
 144fb4c:	00c00044 	movi	r3,1
 144fb50:	1884983a 	sll	r2,r3,r2
 144fb54:	1007883a 	mov	r3,r2
 144fb58:	e0bffd17 	ldw	r2,-12(fp)
 144fb5c:	1884703a 	and	r2,r3,r2
 144fb60:	1004c03a 	cmpne	r2,r2,zero
 144fb64:	10803fcc 	andi	r2,r2,255
}
 144fb68:	e037883a 	mov	sp,fp
 144fb6c:	df000017 	ldw	fp,0(sp)
 144fb70:	dec00104 	addi	sp,sp,4
 144fb74:	f800283a 	ret

0144fb78 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 144fb78:	defff504 	addi	sp,sp,-44
 144fb7c:	dfc00a15 	stw	ra,40(sp)
 144fb80:	df000915 	stw	fp,36(sp)
 144fb84:	df000904 	addi	fp,sp,36
 144fb88:	e13ffc15 	stw	r4,-16(fp)
 144fb8c:	e17ffd15 	stw	r5,-12(fp)
 144fb90:	e1bffe15 	stw	r6,-8(fp)
 144fb94:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 144fb98:	00bffa84 	movi	r2,-22
 144fb9c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 144fba0:	e0bffd17 	ldw	r2,-12(fp)
 144fba4:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 144fba8:	e0bff817 	ldw	r2,-32(fp)
 144fbac:	10800808 	cmpgei	r2,r2,32
 144fbb0:	1000271e 	bne	r2,zero,144fc50 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 144fbb4:	0005303a 	rdctl	r2,status
 144fbb8:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 144fbbc:	e0fffa17 	ldw	r3,-24(fp)
 144fbc0:	00bfff84 	movi	r2,-2
 144fbc4:	1884703a 	and	r2,r3,r2
 144fbc8:	1001703a 	wrctl	status,r2
  
  return context;
 144fbcc:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 144fbd0:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
 144fbd4:	00805174 	movhi	r2,325
 144fbd8:	1088ca04 	addi	r2,r2,9000
 144fbdc:	e0fff817 	ldw	r3,-32(fp)
 144fbe0:	180690fa 	slli	r3,r3,3
 144fbe4:	10c5883a 	add	r2,r2,r3
 144fbe8:	e0fffe17 	ldw	r3,-8(fp)
 144fbec:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 144fbf0:	00805174 	movhi	r2,325
 144fbf4:	1088ca04 	addi	r2,r2,9000
 144fbf8:	e0fff817 	ldw	r3,-32(fp)
 144fbfc:	180690fa 	slli	r3,r3,3
 144fc00:	10c5883a 	add	r2,r2,r3
 144fc04:	10800104 	addi	r2,r2,4
 144fc08:	e0ffff17 	ldw	r3,-4(fp)
 144fc0c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 144fc10:	e0bffe17 	ldw	r2,-8(fp)
 144fc14:	10000526 	beq	r2,zero,144fc2c <alt_iic_isr_register+0xb4>
 144fc18:	e0bff817 	ldw	r2,-32(fp)
 144fc1c:	e13ffc17 	ldw	r4,-16(fp)
 144fc20:	100b883a 	mov	r5,r2
 144fc24:	144f9e80 	call	144f9e8 <alt_ic_irq_enable>
 144fc28:	00000406 	br	144fc3c <alt_iic_isr_register+0xc4>
 144fc2c:	e0bff817 	ldw	r2,-32(fp)
 144fc30:	e13ffc17 	ldw	r4,-16(fp)
 144fc34:	100b883a 	mov	r5,r2
 144fc38:	144fa880 	call	144fa88 <alt_ic_irq_disable>
 144fc3c:	e0bff715 	stw	r2,-36(fp)
 144fc40:	e0bff917 	ldw	r2,-28(fp)
 144fc44:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 144fc48:	e0bffb17 	ldw	r2,-20(fp)
 144fc4c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 144fc50:	e0bff717 	ldw	r2,-36(fp)
}
 144fc54:	e037883a 	mov	sp,fp
 144fc58:	dfc00117 	ldw	ra,4(sp)
 144fc5c:	df000017 	ldw	fp,0(sp)
 144fc60:	dec00204 	addi	sp,sp,8
 144fc64:	f800283a 	ret

0144fc68 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 144fc68:	defff804 	addi	sp,sp,-32
 144fc6c:	dfc00715 	stw	ra,28(sp)
 144fc70:	df000615 	stw	fp,24(sp)
 144fc74:	dc000515 	stw	r16,20(sp)
 144fc78:	df000604 	addi	fp,sp,24
 144fc7c:	e13ffb15 	stw	r4,-20(fp)
 144fc80:	e17ffc15 	stw	r5,-16(fp)
 144fc84:	e1bffd15 	stw	r6,-12(fp)
 144fc88:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 144fc8c:	e13ffc17 	ldw	r4,-16(fp)
 144fc90:	e17ffd17 	ldw	r5,-12(fp)
 144fc94:	e1bffe17 	ldw	r6,-8(fp)
 144fc98:	144ff040 	call	144ff04 <open>
 144fc9c:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 144fca0:	e0bffa17 	ldw	r2,-24(fp)
 144fca4:	10002216 	blt	r2,zero,144fd30 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 144fca8:	04005174 	movhi	r16,325
 144fcac:	8404df04 	addi	r16,r16,4988
 144fcb0:	e0bffa17 	ldw	r2,-24(fp)
 144fcb4:	1009883a 	mov	r4,r2
 144fcb8:	01400304 	movi	r5,12
 144fcbc:	1440a480 	call	1440a48 <__mulsi3>
 144fcc0:	8085883a 	add	r2,r16,r2
 144fcc4:	10c00017 	ldw	r3,0(r2)
 144fcc8:	e0bffb17 	ldw	r2,-20(fp)
 144fccc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 144fcd0:	04005174 	movhi	r16,325
 144fcd4:	8404df04 	addi	r16,r16,4988
 144fcd8:	e0bffa17 	ldw	r2,-24(fp)
 144fcdc:	1009883a 	mov	r4,r2
 144fce0:	01400304 	movi	r5,12
 144fce4:	1440a480 	call	1440a48 <__mulsi3>
 144fce8:	8085883a 	add	r2,r16,r2
 144fcec:	10800104 	addi	r2,r2,4
 144fcf0:	10c00017 	ldw	r3,0(r2)
 144fcf4:	e0bffb17 	ldw	r2,-20(fp)
 144fcf8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 144fcfc:	04005174 	movhi	r16,325
 144fd00:	8404df04 	addi	r16,r16,4988
 144fd04:	e0bffa17 	ldw	r2,-24(fp)
 144fd08:	1009883a 	mov	r4,r2
 144fd0c:	01400304 	movi	r5,12
 144fd10:	1440a480 	call	1440a48 <__mulsi3>
 144fd14:	8085883a 	add	r2,r16,r2
 144fd18:	10800204 	addi	r2,r2,8
 144fd1c:	10c00017 	ldw	r3,0(r2)
 144fd20:	e0bffb17 	ldw	r2,-20(fp)
 144fd24:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 144fd28:	e13ffa17 	ldw	r4,-24(fp)
 144fd2c:	144daac0 	call	144daac <alt_release_fd>
  }
} 
 144fd30:	e6ffff04 	addi	sp,fp,-4
 144fd34:	dfc00217 	ldw	ra,8(sp)
 144fd38:	df000117 	ldw	fp,4(sp)
 144fd3c:	dc000017 	ldw	r16,0(sp)
 144fd40:	dec00304 	addi	sp,sp,12
 144fd44:	f800283a 	ret

0144fd48 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 144fd48:	defffb04 	addi	sp,sp,-20
 144fd4c:	dfc00415 	stw	ra,16(sp)
 144fd50:	df000315 	stw	fp,12(sp)
 144fd54:	df000304 	addi	fp,sp,12
 144fd58:	e13ffd15 	stw	r4,-12(fp)
 144fd5c:	e17ffe15 	stw	r5,-8(fp)
 144fd60:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 144fd64:	01005174 	movhi	r4,325
 144fd68:	2104e204 	addi	r4,r4,5000
 144fd6c:	e17ffd17 	ldw	r5,-12(fp)
 144fd70:	01800044 	movi	r6,1
 144fd74:	01c07fc4 	movi	r7,511
 144fd78:	144fc680 	call	144fc68 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 144fd7c:	01005174 	movhi	r4,325
 144fd80:	2104df04 	addi	r4,r4,4988
 144fd84:	e17ffe17 	ldw	r5,-8(fp)
 144fd88:	000d883a 	mov	r6,zero
 144fd8c:	01c07fc4 	movi	r7,511
 144fd90:	144fc680 	call	144fc68 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 144fd94:	01005174 	movhi	r4,325
 144fd98:	2104e504 	addi	r4,r4,5012
 144fd9c:	e17fff17 	ldw	r5,-4(fp)
 144fda0:	01800044 	movi	r6,1
 144fda4:	01c07fc4 	movi	r7,511
 144fda8:	144fc680 	call	144fc68 <alt_open_fd>
}  
 144fdac:	e037883a 	mov	sp,fp
 144fdb0:	dfc00117 	ldw	ra,4(sp)
 144fdb4:	df000017 	ldw	fp,0(sp)
 144fdb8:	dec00204 	addi	sp,sp,8
 144fdbc:	f800283a 	ret

0144fdc0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 144fdc0:	defffe04 	addi	sp,sp,-8
 144fdc4:	dfc00115 	stw	ra,4(sp)
 144fdc8:	df000015 	stw	fp,0(sp)
 144fdcc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 144fdd0:	00805174 	movhi	r2,325
 144fdd4:	1085a404 	addi	r2,r2,5776
 144fdd8:	10800017 	ldw	r2,0(r2)
 144fddc:	10000526 	beq	r2,zero,144fdf4 <alt_get_errno+0x34>
 144fde0:	00805174 	movhi	r2,325
 144fde4:	1085a404 	addi	r2,r2,5776
 144fde8:	10800017 	ldw	r2,0(r2)
 144fdec:	103ee83a 	callr	r2
 144fdf0:	00000206 	br	144fdfc <alt_get_errno+0x3c>
 144fdf4:	00805174 	movhi	r2,325
 144fdf8:	1088b804 	addi	r2,r2,8928
}
 144fdfc:	e037883a 	mov	sp,fp
 144fe00:	dfc00117 	ldw	ra,4(sp)
 144fe04:	df000017 	ldw	fp,0(sp)
 144fe08:	dec00204 	addi	sp,sp,8
 144fe0c:	f800283a 	ret

0144fe10 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 144fe10:	defffb04 	addi	sp,sp,-20
 144fe14:	dfc00415 	stw	ra,16(sp)
 144fe18:	df000315 	stw	fp,12(sp)
 144fe1c:	dc000215 	stw	r16,8(sp)
 144fe20:	df000304 	addi	fp,sp,12
 144fe24:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 144fe28:	e0bffe17 	ldw	r2,-8(fp)
 144fe2c:	10800217 	ldw	r2,8(r2)
 144fe30:	10d00034 	orhi	r3,r2,16384
 144fe34:	e0bffe17 	ldw	r2,-8(fp)
 144fe38:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 144fe3c:	e03ffd15 	stw	zero,-12(fp)
 144fe40:	00002306 	br	144fed0 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 144fe44:	04005174 	movhi	r16,325
 144fe48:	8404df04 	addi	r16,r16,4988
 144fe4c:	e0bffd17 	ldw	r2,-12(fp)
 144fe50:	1009883a 	mov	r4,r2
 144fe54:	01400304 	movi	r5,12
 144fe58:	1440a480 	call	1440a48 <__mulsi3>
 144fe5c:	8085883a 	add	r2,r16,r2
 144fe60:	10c00017 	ldw	r3,0(r2)
 144fe64:	e0bffe17 	ldw	r2,-8(fp)
 144fe68:	10800017 	ldw	r2,0(r2)
 144fe6c:	1880151e 	bne	r3,r2,144fec4 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 144fe70:	04005174 	movhi	r16,325
 144fe74:	8404df04 	addi	r16,r16,4988
 144fe78:	e0bffd17 	ldw	r2,-12(fp)
 144fe7c:	1009883a 	mov	r4,r2
 144fe80:	01400304 	movi	r5,12
 144fe84:	1440a480 	call	1440a48 <__mulsi3>
 144fe88:	8085883a 	add	r2,r16,r2
 144fe8c:	10800204 	addi	r2,r2,8
 144fe90:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 144fe94:	10000b0e 	bge	r2,zero,144fec4 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 144fe98:	e13ffd17 	ldw	r4,-12(fp)
 144fe9c:	01400304 	movi	r5,12
 144fea0:	1440a480 	call	1440a48 <__mulsi3>
 144fea4:	1007883a 	mov	r3,r2
 144fea8:	00805174 	movhi	r2,325
 144feac:	1084df04 	addi	r2,r2,4988
 144feb0:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 144feb4:	e0bffe17 	ldw	r2,-8(fp)
 144feb8:	18800226 	beq	r3,r2,144fec4 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 144febc:	00bffcc4 	movi	r2,-13
 144fec0:	00000a06 	br	144feec <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 144fec4:	e0bffd17 	ldw	r2,-12(fp)
 144fec8:	10800044 	addi	r2,r2,1
 144fecc:	e0bffd15 	stw	r2,-12(fp)
 144fed0:	00805174 	movhi	r2,325
 144fed4:	1085a304 	addi	r2,r2,5772
 144fed8:	10800017 	ldw	r2,0(r2)
 144fedc:	1007883a 	mov	r3,r2
 144fee0:	e0bffd17 	ldw	r2,-12(fp)
 144fee4:	18bfd72e 	bgeu	r3,r2,144fe44 <__alt_data_end+0xfffea644>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 144fee8:	0005883a 	mov	r2,zero
}
 144feec:	e6ffff04 	addi	sp,fp,-4
 144fef0:	dfc00217 	ldw	ra,8(sp)
 144fef4:	df000117 	ldw	fp,4(sp)
 144fef8:	dc000017 	ldw	r16,0(sp)
 144fefc:	dec00304 	addi	sp,sp,12
 144ff00:	f800283a 	ret

0144ff04 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 144ff04:	defff604 	addi	sp,sp,-40
 144ff08:	dfc00915 	stw	ra,36(sp)
 144ff0c:	df000815 	stw	fp,32(sp)
 144ff10:	df000804 	addi	fp,sp,32
 144ff14:	e13ffd15 	stw	r4,-12(fp)
 144ff18:	e17ffe15 	stw	r5,-8(fp)
 144ff1c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 144ff20:	00bfffc4 	movi	r2,-1
 144ff24:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 144ff28:	00bffb44 	movi	r2,-19
 144ff2c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 144ff30:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 144ff34:	e13ffd17 	ldw	r4,-12(fp)
 144ff38:	01405174 	movhi	r5,325
 144ff3c:	2945a104 	addi	r5,r5,5764
 144ff40:	144f8340 	call	144f834 <alt_find_dev>
 144ff44:	e0bff815 	stw	r2,-32(fp)
 144ff48:	e0bff817 	ldw	r2,-32(fp)
 144ff4c:	1000051e 	bne	r2,zero,144ff64 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 144ff50:	e13ffd17 	ldw	r4,-12(fp)
 144ff54:	14502200 	call	1450220 <alt_find_file>
 144ff58:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 144ff5c:	00800044 	movi	r2,1
 144ff60:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 144ff64:	e0bff817 	ldw	r2,-32(fp)
 144ff68:	10002b26 	beq	r2,zero,1450018 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
 144ff6c:	e13ff817 	ldw	r4,-32(fp)
 144ff70:	14503340 	call	1450334 <alt_get_fd>
 144ff74:	e0bff915 	stw	r2,-28(fp)
 144ff78:	e0bff917 	ldw	r2,-28(fp)
 144ff7c:	1000030e 	bge	r2,zero,144ff8c <open+0x88>
    {
      status = index;
 144ff80:	e0bff917 	ldw	r2,-28(fp)
 144ff84:	e0bffa15 	stw	r2,-24(fp)
 144ff88:	00002506 	br	1450020 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
 144ff8c:	e13ff917 	ldw	r4,-28(fp)
 144ff90:	01400304 	movi	r5,12
 144ff94:	1440a480 	call	1440a48 <__mulsi3>
 144ff98:	1007883a 	mov	r3,r2
 144ff9c:	00805174 	movhi	r2,325
 144ffa0:	1084df04 	addi	r2,r2,4988
 144ffa4:	1885883a 	add	r2,r3,r2
 144ffa8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 144ffac:	e0fffe17 	ldw	r3,-8(fp)
 144ffb0:	00900034 	movhi	r2,16384
 144ffb4:	10bfffc4 	addi	r2,r2,-1
 144ffb8:	1886703a 	and	r3,r3,r2
 144ffbc:	e0bffc17 	ldw	r2,-16(fp)
 144ffc0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 144ffc4:	e0bffb17 	ldw	r2,-20(fp)
 144ffc8:	1000051e 	bne	r2,zero,144ffe0 <open+0xdc>
 144ffcc:	e13ffc17 	ldw	r4,-16(fp)
 144ffd0:	144fe100 	call	144fe10 <alt_file_locked>
 144ffd4:	e0bffa15 	stw	r2,-24(fp)
 144ffd8:	e0bffa17 	ldw	r2,-24(fp)
 144ffdc:	10001016 	blt	r2,zero,1450020 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 144ffe0:	e0bff817 	ldw	r2,-32(fp)
 144ffe4:	10800317 	ldw	r2,12(r2)
 144ffe8:	10000826 	beq	r2,zero,145000c <open+0x108>
 144ffec:	e0bff817 	ldw	r2,-32(fp)
 144fff0:	10800317 	ldw	r2,12(r2)
 144fff4:	e13ffc17 	ldw	r4,-16(fp)
 144fff8:	e17ffd17 	ldw	r5,-12(fp)
 144fffc:	e1bffe17 	ldw	r6,-8(fp)
 1450000:	e1ffff17 	ldw	r7,-4(fp)
 1450004:	103ee83a 	callr	r2
 1450008:	00000106 	br	1450010 <open+0x10c>
 145000c:	0005883a 	mov	r2,zero
 1450010:	e0bffa15 	stw	r2,-24(fp)
 1450014:	00000206 	br	1450020 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 1450018:	00bffb44 	movi	r2,-19
 145001c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 1450020:	e0bffa17 	ldw	r2,-24(fp)
 1450024:	1000090e 	bge	r2,zero,145004c <open+0x148>
  {
    alt_release_fd (index);  
 1450028:	e13ff917 	ldw	r4,-28(fp)
 145002c:	144daac0 	call	144daac <alt_release_fd>
    ALT_ERRNO = -status;
 1450030:	144fdc00 	call	144fdc0 <alt_get_errno>
 1450034:	1007883a 	mov	r3,r2
 1450038:	e0bffa17 	ldw	r2,-24(fp)
 145003c:	0085c83a 	sub	r2,zero,r2
 1450040:	18800015 	stw	r2,0(r3)
    return -1;
 1450044:	00bfffc4 	movi	r2,-1
 1450048:	00000106 	br	1450050 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
 145004c:	e0bff917 	ldw	r2,-28(fp)
}
 1450050:	e037883a 	mov	sp,fp
 1450054:	dfc00117 	ldw	ra,4(sp)
 1450058:	df000017 	ldw	fp,0(sp)
 145005c:	dec00204 	addi	sp,sp,8
 1450060:	f800283a 	ret

01450064 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 1450064:	defffa04 	addi	sp,sp,-24
 1450068:	df000515 	stw	fp,20(sp)
 145006c:	df000504 	addi	fp,sp,20
 1450070:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1450074:	0005303a 	rdctl	r2,status
 1450078:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 145007c:	e0fffc17 	ldw	r3,-16(fp)
 1450080:	00bfff84 	movi	r2,-2
 1450084:	1884703a 	and	r2,r3,r2
 1450088:	1001703a 	wrctl	status,r2
  
  return context;
 145008c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 1450090:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 1450094:	e0bfff17 	ldw	r2,-4(fp)
 1450098:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 145009c:	e0bffd17 	ldw	r2,-12(fp)
 14500a0:	10800017 	ldw	r2,0(r2)
 14500a4:	e0fffd17 	ldw	r3,-12(fp)
 14500a8:	18c00117 	ldw	r3,4(r3)
 14500ac:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 14500b0:	e0bffd17 	ldw	r2,-12(fp)
 14500b4:	10800117 	ldw	r2,4(r2)
 14500b8:	e0fffd17 	ldw	r3,-12(fp)
 14500bc:	18c00017 	ldw	r3,0(r3)
 14500c0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 14500c4:	e0bffd17 	ldw	r2,-12(fp)
 14500c8:	e0fffd17 	ldw	r3,-12(fp)
 14500cc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 14500d0:	e0bffd17 	ldw	r2,-12(fp)
 14500d4:	e0fffd17 	ldw	r3,-12(fp)
 14500d8:	10c00015 	stw	r3,0(r2)
 14500dc:	e0bffb17 	ldw	r2,-20(fp)
 14500e0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 14500e4:	e0bffe17 	ldw	r2,-8(fp)
 14500e8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 14500ec:	e037883a 	mov	sp,fp
 14500f0:	df000017 	ldw	fp,0(sp)
 14500f4:	dec00104 	addi	sp,sp,4
 14500f8:	f800283a 	ret

014500fc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 14500fc:	defffb04 	addi	sp,sp,-20
 1450100:	dfc00415 	stw	ra,16(sp)
 1450104:	df000315 	stw	fp,12(sp)
 1450108:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 145010c:	d0a01417 	ldw	r2,-32688(gp)
 1450110:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 1450114:	d0a32517 	ldw	r2,-29548(gp)
 1450118:	10800044 	addi	r2,r2,1
 145011c:	d0a32515 	stw	r2,-29548(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 1450120:	00002e06 	br	14501dc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 1450124:	e0bffd17 	ldw	r2,-12(fp)
 1450128:	10800017 	ldw	r2,0(r2)
 145012c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 1450130:	e0bffd17 	ldw	r2,-12(fp)
 1450134:	10800403 	ldbu	r2,16(r2)
 1450138:	10803fcc 	andi	r2,r2,255
 145013c:	10000426 	beq	r2,zero,1450150 <alt_tick+0x54>
 1450140:	d0a32517 	ldw	r2,-29548(gp)
 1450144:	1000021e 	bne	r2,zero,1450150 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 1450148:	e0bffd17 	ldw	r2,-12(fp)
 145014c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 1450150:	e0bffd17 	ldw	r2,-12(fp)
 1450154:	10800217 	ldw	r2,8(r2)
 1450158:	d0e32517 	ldw	r3,-29548(gp)
 145015c:	18801d36 	bltu	r3,r2,14501d4 <alt_tick+0xd8>
 1450160:	e0bffd17 	ldw	r2,-12(fp)
 1450164:	10800403 	ldbu	r2,16(r2)
 1450168:	10803fcc 	andi	r2,r2,255
 145016c:	1000191e 	bne	r2,zero,14501d4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 1450170:	e0bffd17 	ldw	r2,-12(fp)
 1450174:	10800317 	ldw	r2,12(r2)
 1450178:	e0fffd17 	ldw	r3,-12(fp)
 145017c:	18c00517 	ldw	r3,20(r3)
 1450180:	1809883a 	mov	r4,r3
 1450184:	103ee83a 	callr	r2
 1450188:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 145018c:	e0bfff17 	ldw	r2,-4(fp)
 1450190:	1000031e 	bne	r2,zero,14501a0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 1450194:	e13ffd17 	ldw	r4,-12(fp)
 1450198:	14500640 	call	1450064 <alt_alarm_stop>
 145019c:	00000d06 	br	14501d4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 14501a0:	e0bffd17 	ldw	r2,-12(fp)
 14501a4:	10c00217 	ldw	r3,8(r2)
 14501a8:	e0bfff17 	ldw	r2,-4(fp)
 14501ac:	1887883a 	add	r3,r3,r2
 14501b0:	e0bffd17 	ldw	r2,-12(fp)
 14501b4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 14501b8:	e0bffd17 	ldw	r2,-12(fp)
 14501bc:	10c00217 	ldw	r3,8(r2)
 14501c0:	d0a32517 	ldw	r2,-29548(gp)
 14501c4:	1880032e 	bgeu	r3,r2,14501d4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 14501c8:	e0bffd17 	ldw	r2,-12(fp)
 14501cc:	00c00044 	movi	r3,1
 14501d0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 14501d4:	e0bffe17 	ldw	r2,-8(fp)
 14501d8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 14501dc:	e0fffd17 	ldw	r3,-12(fp)
 14501e0:	d0a01404 	addi	r2,gp,-32688
 14501e4:	18bfcf1e 	bne	r3,r2,1450124 <__alt_data_end+0xfffea924>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 14501e8:	0001883a 	nop
}
 14501ec:	e037883a 	mov	sp,fp
 14501f0:	dfc00117 	ldw	ra,4(sp)
 14501f4:	df000017 	ldw	fp,0(sp)
 14501f8:	dec00204 	addi	sp,sp,8
 14501fc:	f800283a 	ret

01450200 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 1450200:	deffff04 	addi	sp,sp,-4
 1450204:	df000015 	stw	fp,0(sp)
 1450208:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 145020c:	000170fa 	wrctl	ienable,zero
}
 1450210:	e037883a 	mov	sp,fp
 1450214:	df000017 	ldw	fp,0(sp)
 1450218:	dec00104 	addi	sp,sp,4
 145021c:	f800283a 	ret

01450220 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 1450220:	defffb04 	addi	sp,sp,-20
 1450224:	dfc00415 	stw	ra,16(sp)
 1450228:	df000315 	stw	fp,12(sp)
 145022c:	df000304 	addi	fp,sp,12
 1450230:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 1450234:	00805174 	movhi	r2,325
 1450238:	10859f04 	addi	r2,r2,5756
 145023c:	10800017 	ldw	r2,0(r2)
 1450240:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 1450244:	00003106 	br	145030c <alt_find_file+0xec>
  {
    len = strlen(next->name);
 1450248:	e0bffd17 	ldw	r2,-12(fp)
 145024c:	10800217 	ldw	r2,8(r2)
 1450250:	1009883a 	mov	r4,r2
 1450254:	1440ba40 	call	1440ba4 <strlen>
 1450258:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 145025c:	e0bffd17 	ldw	r2,-12(fp)
 1450260:	10c00217 	ldw	r3,8(r2)
 1450264:	e0bffe17 	ldw	r2,-8(fp)
 1450268:	10bfffc4 	addi	r2,r2,-1
 145026c:	1885883a 	add	r2,r3,r2
 1450270:	10800003 	ldbu	r2,0(r2)
 1450274:	10803fcc 	andi	r2,r2,255
 1450278:	1080201c 	xori	r2,r2,128
 145027c:	10bfe004 	addi	r2,r2,-128
 1450280:	10800bd8 	cmpnei	r2,r2,47
 1450284:	1000031e 	bne	r2,zero,1450294 <alt_find_file+0x74>
    {
      len -= 1;
 1450288:	e0bffe17 	ldw	r2,-8(fp)
 145028c:	10bfffc4 	addi	r2,r2,-1
 1450290:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 1450294:	e0bffe17 	ldw	r2,-8(fp)
 1450298:	e0ffff17 	ldw	r3,-4(fp)
 145029c:	1885883a 	add	r2,r3,r2
 14502a0:	10800003 	ldbu	r2,0(r2)
 14502a4:	10803fcc 	andi	r2,r2,255
 14502a8:	1080201c 	xori	r2,r2,128
 14502ac:	10bfe004 	addi	r2,r2,-128
 14502b0:	10800be0 	cmpeqi	r2,r2,47
 14502b4:	1000081e 	bne	r2,zero,14502d8 <alt_find_file+0xb8>
 14502b8:	e0bffe17 	ldw	r2,-8(fp)
 14502bc:	e0ffff17 	ldw	r3,-4(fp)
 14502c0:	1885883a 	add	r2,r3,r2
 14502c4:	10800003 	ldbu	r2,0(r2)
 14502c8:	10803fcc 	andi	r2,r2,255
 14502cc:	1080201c 	xori	r2,r2,128
 14502d0:	10bfe004 	addi	r2,r2,-128
 14502d4:	10000a1e 	bne	r2,zero,1450300 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 14502d8:	e0bffd17 	ldw	r2,-12(fp)
 14502dc:	10c00217 	ldw	r3,8(r2)
 14502e0:	e0bffe17 	ldw	r2,-8(fp)
 14502e4:	1809883a 	mov	r4,r3
 14502e8:	e17fff17 	ldw	r5,-4(fp)
 14502ec:	100d883a 	mov	r6,r2
 14502f0:	14504dc0 	call	14504dc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 14502f4:	1000021e 	bne	r2,zero,1450300 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 14502f8:	e0bffd17 	ldw	r2,-12(fp)
 14502fc:	00000806 	br	1450320 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 1450300:	e0bffd17 	ldw	r2,-12(fp)
 1450304:	10800017 	ldw	r2,0(r2)
 1450308:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 145030c:	e0fffd17 	ldw	r3,-12(fp)
 1450310:	00805174 	movhi	r2,325
 1450314:	10859f04 	addi	r2,r2,5756
 1450318:	18bfcb1e 	bne	r3,r2,1450248 <__alt_data_end+0xfffeaa48>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 145031c:	0005883a 	mov	r2,zero
}
 1450320:	e037883a 	mov	sp,fp
 1450324:	dfc00117 	ldw	ra,4(sp)
 1450328:	df000017 	ldw	fp,0(sp)
 145032c:	dec00204 	addi	sp,sp,8
 1450330:	f800283a 	ret

01450334 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 1450334:	defffa04 	addi	sp,sp,-24
 1450338:	dfc00515 	stw	ra,20(sp)
 145033c:	df000415 	stw	fp,16(sp)
 1450340:	dc000315 	stw	r16,12(sp)
 1450344:	df000404 	addi	fp,sp,16
 1450348:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 145034c:	00bffa04 	movi	r2,-24
 1450350:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 1450354:	e03ffc15 	stw	zero,-16(fp)
 1450358:	00002106 	br	14503e0 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
 145035c:	04005174 	movhi	r16,325
 1450360:	8404df04 	addi	r16,r16,4988
 1450364:	e0bffc17 	ldw	r2,-16(fp)
 1450368:	1009883a 	mov	r4,r2
 145036c:	01400304 	movi	r5,12
 1450370:	1440a480 	call	1440a48 <__mulsi3>
 1450374:	8085883a 	add	r2,r16,r2
 1450378:	10800017 	ldw	r2,0(r2)
 145037c:	1000151e 	bne	r2,zero,14503d4 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
 1450380:	04005174 	movhi	r16,325
 1450384:	8404df04 	addi	r16,r16,4988
 1450388:	e0bffc17 	ldw	r2,-16(fp)
 145038c:	1009883a 	mov	r4,r2
 1450390:	01400304 	movi	r5,12
 1450394:	1440a480 	call	1440a48 <__mulsi3>
 1450398:	8085883a 	add	r2,r16,r2
 145039c:	e0fffe17 	ldw	r3,-8(fp)
 14503a0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 14503a4:	00805174 	movhi	r2,325
 14503a8:	1085a304 	addi	r2,r2,5772
 14503ac:	10c00017 	ldw	r3,0(r2)
 14503b0:	e0bffc17 	ldw	r2,-16(fp)
 14503b4:	1880040e 	bge	r3,r2,14503c8 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
 14503b8:	00805174 	movhi	r2,325
 14503bc:	1085a304 	addi	r2,r2,5772
 14503c0:	e0fffc17 	ldw	r3,-16(fp)
 14503c4:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 14503c8:	e0bffc17 	ldw	r2,-16(fp)
 14503cc:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 14503d0:	00000606 	br	14503ec <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 14503d4:	e0bffc17 	ldw	r2,-16(fp)
 14503d8:	10800044 	addi	r2,r2,1
 14503dc:	e0bffc15 	stw	r2,-16(fp)
 14503e0:	e0bffc17 	ldw	r2,-16(fp)
 14503e4:	10800810 	cmplti	r2,r2,32
 14503e8:	103fdc1e 	bne	r2,zero,145035c <__alt_data_end+0xfffeab5c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 14503ec:	e0bffd17 	ldw	r2,-12(fp)
}
 14503f0:	e6ffff04 	addi	sp,fp,-4
 14503f4:	dfc00217 	ldw	ra,8(sp)
 14503f8:	df000117 	ldw	fp,4(sp)
 14503fc:	dc000017 	ldw	r16,0(sp)
 1450400:	dec00304 	addi	sp,sp,12
 1450404:	f800283a 	ret

01450408 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 1450408:	defffe04 	addi	sp,sp,-8
 145040c:	df000115 	stw	fp,4(sp)
 1450410:	df000104 	addi	fp,sp,4
 1450414:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 1450418:	e0bfff17 	ldw	r2,-4(fp)
 145041c:	10bffe84 	addi	r2,r2,-6
 1450420:	10c00428 	cmpgeui	r3,r2,16
 1450424:	18001a1e 	bne	r3,zero,1450490 <alt_exception_cause_generated_bad_addr+0x88>
 1450428:	100690ba 	slli	r3,r2,2
 145042c:	00805174 	movhi	r2,325
 1450430:	10811004 	addi	r2,r2,1088
 1450434:	1885883a 	add	r2,r3,r2
 1450438:	10800017 	ldw	r2,0(r2)
 145043c:	1000683a 	jmp	r2
 1450440:	01450480 	call	145048 <__alt_mem_ufm_flash_data-0x10bafb8>
 1450444:	01450480 	call	145048 <__alt_mem_ufm_flash_data-0x10bafb8>
 1450448:	01450490 	cmplti	r5,zero,5138
 145044c:	01450490 	cmplti	r5,zero,5138
 1450450:	01450490 	cmplti	r5,zero,5138
 1450454:	01450480 	call	145048 <__alt_mem_ufm_flash_data-0x10bafb8>
 1450458:	01450488 	cmpgei	r5,zero,5138
 145045c:	01450490 	cmplti	r5,zero,5138
 1450460:	01450480 	call	145048 <__alt_mem_ufm_flash_data-0x10bafb8>
 1450464:	01450480 	call	145048 <__alt_mem_ufm_flash_data-0x10bafb8>
 1450468:	01450490 	cmplti	r5,zero,5138
 145046c:	01450480 	call	145048 <__alt_mem_ufm_flash_data-0x10bafb8>
 1450470:	01450488 	cmpgei	r5,zero,5138
 1450474:	01450490 	cmplti	r5,zero,5138
 1450478:	01450490 	cmplti	r5,zero,5138
 145047c:	01450480 	call	145048 <__alt_mem_ufm_flash_data-0x10bafb8>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 1450480:	00800044 	movi	r2,1
 1450484:	00000306 	br	1450494 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 1450488:	0005883a 	mov	r2,zero
 145048c:	00000106 	br	1450494 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 1450490:	0005883a 	mov	r2,zero
  }
}
 1450494:	e037883a 	mov	sp,fp
 1450498:	df000017 	ldw	fp,0(sp)
 145049c:	dec00104 	addi	sp,sp,4
 14504a0:	f800283a 	ret

014504a4 <exit>:
 14504a4:	defffe04 	addi	sp,sp,-8
 14504a8:	000b883a 	mov	r5,zero
 14504ac:	dc000015 	stw	r16,0(sp)
 14504b0:	dfc00115 	stw	ra,4(sp)
 14504b4:	2021883a 	mov	r16,r4
 14504b8:	14505580 	call	1450558 <__call_exitprocs>
 14504bc:	00805174 	movhi	r2,325
 14504c0:	10859904 	addi	r2,r2,5732
 14504c4:	11000017 	ldw	r4,0(r2)
 14504c8:	20800f17 	ldw	r2,60(r4)
 14504cc:	10000126 	beq	r2,zero,14504d4 <exit+0x30>
 14504d0:	103ee83a 	callr	r2
 14504d4:	8009883a 	mov	r4,r16
 14504d8:	14506ec0 	call	14506ec <_exit>

014504dc <memcmp>:
 14504dc:	01c000c4 	movi	r7,3
 14504e0:	3980192e 	bgeu	r7,r6,1450548 <memcmp+0x6c>
 14504e4:	2144b03a 	or	r2,r4,r5
 14504e8:	11c4703a 	and	r2,r2,r7
 14504ec:	10000f26 	beq	r2,zero,145052c <memcmp+0x50>
 14504f0:	20800003 	ldbu	r2,0(r4)
 14504f4:	28c00003 	ldbu	r3,0(r5)
 14504f8:	10c0151e 	bne	r2,r3,1450550 <memcmp+0x74>
 14504fc:	31bfff84 	addi	r6,r6,-2
 1450500:	01ffffc4 	movi	r7,-1
 1450504:	00000406 	br	1450518 <memcmp+0x3c>
 1450508:	20800003 	ldbu	r2,0(r4)
 145050c:	28c00003 	ldbu	r3,0(r5)
 1450510:	31bfffc4 	addi	r6,r6,-1
 1450514:	10c00e1e 	bne	r2,r3,1450550 <memcmp+0x74>
 1450518:	21000044 	addi	r4,r4,1
 145051c:	29400044 	addi	r5,r5,1
 1450520:	31fff91e 	bne	r6,r7,1450508 <__alt_data_end+0xfffead08>
 1450524:	0005883a 	mov	r2,zero
 1450528:	f800283a 	ret
 145052c:	20c00017 	ldw	r3,0(r4)
 1450530:	28800017 	ldw	r2,0(r5)
 1450534:	1880041e 	bne	r3,r2,1450548 <memcmp+0x6c>
 1450538:	31bfff04 	addi	r6,r6,-4
 145053c:	21000104 	addi	r4,r4,4
 1450540:	29400104 	addi	r5,r5,4
 1450544:	39bff936 	bltu	r7,r6,145052c <__alt_data_end+0xfffead2c>
 1450548:	303fe91e 	bne	r6,zero,14504f0 <__alt_data_end+0xfffeacf0>
 145054c:	003ff506 	br	1450524 <__alt_data_end+0xfffead24>
 1450550:	10c5c83a 	sub	r2,r2,r3
 1450554:	f800283a 	ret

01450558 <__call_exitprocs>:
 1450558:	00805174 	movhi	r2,325
 145055c:	10859904 	addi	r2,r2,5732
 1450560:	10800017 	ldw	r2,0(r2)
 1450564:	defff404 	addi	sp,sp,-48
 1450568:	dd800815 	stw	r22,32(sp)
 145056c:	d8800015 	stw	r2,0(sp)
 1450570:	10805204 	addi	r2,r2,328
 1450574:	dd000615 	stw	r20,24(sp)
 1450578:	dc800415 	stw	r18,16(sp)
 145057c:	dfc00b15 	stw	ra,44(sp)
 1450580:	df000a15 	stw	fp,40(sp)
 1450584:	ddc00915 	stw	r23,36(sp)
 1450588:	dd400715 	stw	r21,28(sp)
 145058c:	dcc00515 	stw	r19,20(sp)
 1450590:	dc400315 	stw	r17,12(sp)
 1450594:	dc000215 	stw	r16,8(sp)
 1450598:	2025883a 	mov	r18,r4
 145059c:	2829883a 	mov	r20,r5
 14505a0:	d8800115 	stw	r2,4(sp)
 14505a4:	05bfffc4 	movi	r22,-1
 14505a8:	d8800017 	ldw	r2,0(sp)
 14505ac:	14c05217 	ldw	r19,328(r2)
 14505b0:	98001d26 	beq	r19,zero,1450628 <__call_exitprocs+0xd0>
 14505b4:	dd400117 	ldw	r21,4(sp)
 14505b8:	98800117 	ldw	r2,4(r19)
 14505bc:	173fffc4 	addi	fp,r2,-1
 14505c0:	e0000d16 	blt	fp,zero,14505f8 <__call_exitprocs+0xa0>
 14505c4:	14000044 	addi	r16,r2,1
 14505c8:	8421883a 	add	r16,r16,r16
 14505cc:	8421883a 	add	r16,r16,r16
 14505d0:	84402004 	addi	r17,r16,128
 14505d4:	9c63883a 	add	r17,r19,r17
 14505d8:	9c21883a 	add	r16,r19,r16
 14505dc:	a0001e26 	beq	r20,zero,1450658 <__call_exitprocs+0x100>
 14505e0:	80804017 	ldw	r2,256(r16)
 14505e4:	15001c26 	beq	r2,r20,1450658 <__call_exitprocs+0x100>
 14505e8:	e73fffc4 	addi	fp,fp,-1
 14505ec:	843fff04 	addi	r16,r16,-4
 14505f0:	8c7fff04 	addi	r17,r17,-4
 14505f4:	e5bff91e 	bne	fp,r22,14505dc <__alt_data_end+0xfffeaddc>
 14505f8:	00800034 	movhi	r2,0
 14505fc:	10800004 	addi	r2,r2,0
 1450600:	10000926 	beq	r2,zero,1450628 <__call_exitprocs+0xd0>
 1450604:	98800117 	ldw	r2,4(r19)
 1450608:	1000311e 	bne	r2,zero,14506d0 <__call_exitprocs+0x178>
 145060c:	98800017 	ldw	r2,0(r19)
 1450610:	10003426 	beq	r2,zero,14506e4 <__call_exitprocs+0x18c>
 1450614:	9809883a 	mov	r4,r19
 1450618:	a8800015 	stw	r2,0(r21)
 145061c:	00000000 	call	0 <__alt_mem_ufm_flash_data-0x1200000>
 1450620:	acc00017 	ldw	r19,0(r21)
 1450624:	983fe41e 	bne	r19,zero,14505b8 <__alt_data_end+0xfffeadb8>
 1450628:	dfc00b17 	ldw	ra,44(sp)
 145062c:	df000a17 	ldw	fp,40(sp)
 1450630:	ddc00917 	ldw	r23,36(sp)
 1450634:	dd800817 	ldw	r22,32(sp)
 1450638:	dd400717 	ldw	r21,28(sp)
 145063c:	dd000617 	ldw	r20,24(sp)
 1450640:	dcc00517 	ldw	r19,20(sp)
 1450644:	dc800417 	ldw	r18,16(sp)
 1450648:	dc400317 	ldw	r17,12(sp)
 145064c:	dc000217 	ldw	r16,8(sp)
 1450650:	dec00c04 	addi	sp,sp,48
 1450654:	f800283a 	ret
 1450658:	98800117 	ldw	r2,4(r19)
 145065c:	80c00017 	ldw	r3,0(r16)
 1450660:	10bfffc4 	addi	r2,r2,-1
 1450664:	17001526 	beq	r2,fp,14506bc <__call_exitprocs+0x164>
 1450668:	80000015 	stw	zero,0(r16)
 145066c:	183fde26 	beq	r3,zero,14505e8 <__alt_data_end+0xfffeade8>
 1450670:	00800044 	movi	r2,1
 1450674:	1708983a 	sll	r4,r2,fp
 1450678:	98806217 	ldw	r2,392(r19)
 145067c:	9dc00117 	ldw	r23,4(r19)
 1450680:	2084703a 	and	r2,r4,r2
 1450684:	1000061e 	bne	r2,zero,14506a0 <__call_exitprocs+0x148>
 1450688:	183ee83a 	callr	r3
 145068c:	98800117 	ldw	r2,4(r19)
 1450690:	15ffc51e 	bne	r2,r23,14505a8 <__alt_data_end+0xfffeada8>
 1450694:	a8800017 	ldw	r2,0(r21)
 1450698:	14ffd326 	beq	r2,r19,14505e8 <__alt_data_end+0xfffeade8>
 145069c:	003fc206 	br	14505a8 <__alt_data_end+0xfffeada8>
 14506a0:	98806317 	ldw	r2,396(r19)
 14506a4:	2084703a 	and	r2,r4,r2
 14506a8:	1000061e 	bne	r2,zero,14506c4 <__call_exitprocs+0x16c>
 14506ac:	89400017 	ldw	r5,0(r17)
 14506b0:	9009883a 	mov	r4,r18
 14506b4:	183ee83a 	callr	r3
 14506b8:	003ff406 	br	145068c <__alt_data_end+0xfffeae8c>
 14506bc:	9f000115 	stw	fp,4(r19)
 14506c0:	003fea06 	br	145066c <__alt_data_end+0xfffeae6c>
 14506c4:	89000017 	ldw	r4,0(r17)
 14506c8:	183ee83a 	callr	r3
 14506cc:	003fef06 	br	145068c <__alt_data_end+0xfffeae8c>
 14506d0:	98800017 	ldw	r2,0(r19)
 14506d4:	982b883a 	mov	r21,r19
 14506d8:	1027883a 	mov	r19,r2
 14506dc:	983fb61e 	bne	r19,zero,14505b8 <__alt_data_end+0xfffeadb8>
 14506e0:	003fd106 	br	1450628 <__alt_data_end+0xfffeae28>
 14506e4:	0005883a 	mov	r2,zero
 14506e8:	003ffa06 	br	14506d4 <__alt_data_end+0xfffeaed4>

014506ec <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 14506ec:	defffd04 	addi	sp,sp,-12
 14506f0:	df000215 	stw	fp,8(sp)
 14506f4:	df000204 	addi	fp,sp,8
 14506f8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 14506fc:	0001883a 	nop
 1450700:	e0bfff17 	ldw	r2,-4(fp)
 1450704:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 1450708:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 145070c:	10000226 	beq	r2,zero,1450718 <_exit+0x2c>
    ALT_SIM_FAIL();
 1450710:	002af070 	cmpltui	zero,zero,43969
 1450714:	00000106 	br	145071c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 1450718:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 145071c:	003fff06 	br	145071c <__alt_data_end+0xfffeaf1c>
